///////////////////////////////////////////////////////////////////////////////
// Filename:    ProjExp.WFM                                                  //
// Written for: dBASE (32-bit versions)                                      //
// Written by:  dBASE Inc. R&D Group                                         //
// Copyright:   Copyright 2002 to 2006, dataBased Intelligence, Inc.         //
// Purpose:     dBL Project Explorer                                         //
// Parameters:  ProjectFilename Optional                                     //
///////////////////////////////////////////////////////////////////////////////

#include ProjExp.h

//the main parameter is used to pass the projectname
parameters cProjectFileName
local cTalk, f, o
cTalk = set("talk")
set talk off


f = findinstance("PROJEXPFORM")
if empty(f)

   f = new projExpForm()
   f.cTalk = cTalk

   if empty(cProjectFileName) or ;
      upper(cProjectFileName) = 'UNTITLE'

      f.cProjectFileName = 'Untitled'
      // This is a new one

   else
      f.cProjectFileName = cProjectFileName

   endif

   f.init()
   f.open()
else

   if empty(cProjectFileName) or ;
      upper(cProjectFileName) = 'UNTITLE'
      f.setFocus()
      f.newProject()

   else
      f.setFocus()
      f.openProject(cProjectFileName)

   endif

endif
return

** END HEADER -- do not remove this line
//
// Generated on 02/04/2016
//
parameter bModal
local f
f = new projExpForm()
if (bModal)
   f.mdi = false // ensure not MDI
   f.readModal()
else
   f.open()
endif

class projExpForm of FORM
   set procedure to :CoreShared:coreSplitter.cc additive persistent
   set procedure to :CoreShared:CoreFormViewer.CC additive persistent
   set procedure to :ProjExp:Project.cc additive persistent
   with (this)
      onGotFocus = class::FORM_ONGOTFOCUS
      onLostFocus = {; this.showFormatBar(false)}
      onSize = class::FORM_ONSIZE
      canClose = class::FORM_CANCLOSE
      onDrop = class::FORM_ONDROP
      onOpen = class::FORM_ONOPEN
      onClose = class::FORM_ONCLOSE
      beforeRelease = class::FORM_BEFORERELEASE
      open = class::OPEN
      metric = 6	// Pixels
      persistent = true
      height = 622.0
      left = 28.0
      top = 44.0
      width = 1023.0
      text = "Project Explorer"
      menuFile = ":ProjExp:pBuilderPlus.mnu"
      appSpeedBar = 0	// Hide
      icon = "resource #22"
      allowDrop = true
   endwith

   this.NOTEBOOK1 = new NOTEBOOK(this)
   with (this.NOTEBOOK1)
      canSelChange = class::NOTEBOOK1_CANSELCHANGE
      onSelChange = class::NOTEBOOK1_ONSELCHANGE
      height = 539.0
      left = 296.0
      top = 11.0
      width = 712.0
      colorNormal = "BtnText/BtnFace"
      fontSize = 9.0
      dataSource = 'ARRAY {"Project","File Details","Log","DEO","Inno"}'
   endwith

   this.NOTEBOOK1.RECTANGLE4 = new RECTANGLE(this.NOTEBOOK1)
   with (this.NOTEBOOK1.RECTANGLE4)
      left = 12.0
      top = 33.0
      width = 686.0
      height = 412.0
      text = ""
      pageno = 4
   endwith

   this.NOTEBOOK1.RECTANGLE3 = new RECTANGLE(this.NOTEBOOK1)
   with (this.NOTEBOOK1.RECTANGLE3)
      left = 15.0
      top = 375.0
      width = 487.0
      height = 111.0
      text = ""
   endwith

   this.NOTEBOOK1.RECTANGLE1 = new RECTANGLE(this.NOTEBOOK1)
   with (this.NOTEBOOK1.RECTANGLE1)
      left = 15.0
      top = 36.0
      width = 683.0
      height = 327.0
      text = "Project Properties"
      fontSize = 9.0
   endwith

   this.NOTEBOOK1.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL1)
      height = 20.0
      left = 27.0
      top = 54.0
      width = 155.0
      text = "Project Name:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.PROJECTNAME = new ENTRYFIELD(this.NOTEBOOK1)
   with (this.NOTEBOOK1.PROJECTNAME)
      onChange = class::PROJECTNAME_ONCHANGE
      height = 22.0
      left = 186.0
      top = 54.0
      width = 302.0
      fontSize = 9.0
      speedTip = "Project Name"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
   endwith

   this.NOTEBOOK1.DEOAPPLICATIONCHECK = new CHECKBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.DEOAPPLICATIONCHECK)
      onChange = class::DEOAPPLICATIONCHECK_ONCHANGE
      height = 20.0
      left = 26.0
      top = 77.0
      width = 147.0
      text = "DEO Application?"
      statusMessage = "Indicate if this is a DEO Application (external objects)"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      textLeft = true
   endwith

   this.NOTEBOOK1.WEBAPP = new CHECKBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.WEBAPP)
      onChange = class::WEBAPP_ONCHANGE
      height = 20.0
      left = 26.0
      top = 99.0
      width = 147.0
      text = "Web Application?                 "
      statusMessage = "Indicate if this is a web-application"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      textLeft = true
   endwith

   this.NOTEBOOK1.TEXTLABEL2 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL2)
      height = 20.0
      left = 27.0
      top = 122.0
      width = 155.0
      text = "Main Program File:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.MAINFILENAME = new COMBOBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.MAINFILENAME)
      onChange = class::MAINFILENAME_ONCHANGE
      height = 23.0
      left = 187.0
      top = 122.0
      width = 302.0
      speedTip = "Name of the main program file"
      fontSize = 9.0
      style = 2	// DropDownList
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.TEXTLABEL15 = new TEXT(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL15)
      height = 42.0
      left = 27.0
      top = 149.0
      width = 155.0
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      text = "Main Program Parameters:"
   endwith

   this.NOTEBOOK1.PARAMETERS = new EDITOR(this.NOTEBOOK1)
   with (this.NOTEBOOK1.PARAMETERS)
      onDrop = {;return false}
      onChange = class::PARAMETERS_ONCHANGE
      height = 38.0
      left = 186.0
      top = 148.0
      width = 302.0
      value = ""
      fontSize = 9.0
      speedTip = "Parameters to be passed to the main file"
      evalTags = false
      popupEnable = false
   endwith

   this.NOTEBOOK1.TEXTLABEL7 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL7)
      height = 20.0
      left = 28.0
      top = 231.0
      width = 155.0
      text = "Target EXE Filename:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.EXENAME = new ENTRYFIELD(this.NOTEBOOK1)
   with (this.NOTEBOOK1.EXENAME)
      onChange = class::EXENAME_ONCHANGE
      height = 22.0
      left = 186.0
      top = 230.0
      width = 274.0
      fontSize = 9.0
      speedTip = "Filename of the target executable"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 150
   endwith

   this.NOTEBOOK1.BUT_SEL_LOGFILE = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.BUT_SEL_LOGFILE)
      onClick = class::BUT_SEL_LOGFILE_ONCLICK
      height = 24.0
      left = 467.0
      top = 305.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      fontSize = 8.0
   endwith

   this.NOTEBOOK1.TEXTLABEL14 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL14)
      height = 20.0
      left = 27.0
      top = 256.0
      width = 155.0
      text = "Splash Bitmap:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.SPLASHFILENAME = new COMBOBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.SPLASHFILENAME)
      onChange = class::SPLASHFILENAME_ONCHANGE
      height = 23.0
      left = 186.0
      top = 255.0
      width = 302.0
      speedTip = "Splash Filename"
      fontSize = 9.0
      style = 2	// DropDownList
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.TEXTLABEL13 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL13)
      height = 20.0
      left = 27.0
      top = 281.0
      width = 155.0
      text = "Program Icon:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.ICONFILENAME = new COMBOBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.ICONFILENAME)
      onChange = class::ICONFILENAME_ONCHANGE
      height = 23.0
      left = 186.0
      top = 280.0
      width = 302.0
      speedTip = "Icon Filename"
      fontSize = 9.0
      style = 2	// DropDownList
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.TEXTLABEL6 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL6)
      height = 20.0
      left = 27.0
      top = 307.0
      width = 155.0
      text = "Log Filename:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.LOGFILENAME = new ENTRYFIELD(this.NOTEBOOK1)
   with (this.NOTEBOOK1.LOGFILENAME)
      onChange = class::LOGFILENAME_ONCHANGE
      height = 22.0
      left = 186.0
      top = 306.0
      width = 274.0
      fontSize = 9.0
      speedTip = "Log Filename for compile and build"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 150
   endwith

   this.NOTEBOOK1.BUT_SEL_EXE = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.BUT_SEL_EXE)
      onClick = class::BUT_SEL_EXE_ONCLICK
      height = 24.0
      left = 467.0
      top = 228.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      fontSize = 8.0
   endwith

   this.NOTEBOOK1.TEXTLABEL12 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL12)
      height = 20.0
      left = 27.0
      top = 333.0
      width = 155.0
      text = "Status:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.PROJECTSTATUS = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.PROJECTSTATUS)
      height = 20.0
      left = 186.0
      top = 333.0
      width = 262.0
      text = ""
      fontSize = 9.0
   endwith

   this.NOTEBOOK1.TEXTLABEL3 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL3)
      height = 20.0
      left = 27.0
      top = 390.0
      width = 155.0
      text = "Author:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.AUTHOR = new ENTRYFIELD(this.NOTEBOOK1)
   with (this.NOTEBOOK1.AUTHOR)
      onChange = class::AUTHOR_ONCHANGE
      height = 22.0
      left = 186.0
      top = 388.0
      width = 302.0
      fontSize = 9.0
      speedTip = "Author name"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
   endwith

   this.NOTEBOOK1.TEXTLABEL4 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL4)
      height = 20.0
      left = 27.0
      top = 411.0
      width = 155.0
      text = "Description:"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.DESCRIPTION = new EDITOR(this.NOTEBOOK1)
   with (this.NOTEBOOK1.DESCRIPTION)
      onDrop = {;return false}
      onChange = class::DESCRIPTION_ONCHANGE
      height = 62.0
      left = 186.0
      top = 412.0
      width = 302.0
      value = ""
      fontSize = 9.0
      speedTip = "Project description"
      evalTags = false
      popupEnable = false
   endwith

   this.NOTEBOOK1.LOGEDITOR = new PROJLOGEDITOR(this.NOTEBOOK1)
   with (this.NOTEBOOK1.LOGEDITOR)
      height = 397.0
      left = 8.0
      top = 56.0
      width = 683.0
      value = ""
      modify = false
      wrap = false
      fontName = "Courier New"
      fontSize = 8.0
      pageno = 3
      evalTags = false
      popupEnable = false
   endwith

   this.NOTEBOOK1.LOGFILESTATUS = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.LOGFILESTATUS)
      height = 14.0
      left = 11.0
      top = 33.0
      width = 350.0
      transparent = true
      text = "Log File Status"
      fontSize = 8.0
      pageno = 3
   endwith

   this.NOTEBOOK1.EMPTYLOGBUTTON = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.EMPTYLOGBUTTON)
      onClick = class::EMPTYLOGBUTTON_ONCLICK
      height = 24.0
      left = 413.0
      top = 29.0
      width = 89.0
      text = "&Empty Log"
      upBitmap = "RESOURCE #2240"
      fontSize = 8.0
      pageno = 3
   endwith

   this.NOTEBOOK1.LOGPROGRESSTEXT = new TEXT(this.NOTEBOOK1)
   with (this.NOTEBOOK1.LOGPROGRESSTEXT)
      height = 18.0
      left = 10.0
      top = 436.0
      width = 353.0
      visible = false
      wrap = false
      alignVertical = 1	// Middle
      fontSize = 8.0
      text = ""
      borderStyle = 3	// None
      pageno = 3
   endwith

   this.NOTEBOOK1.FILENOTEBOOK = new NOTEBOOK(this.NOTEBOOK1)
   with (this.NOTEBOOK1.FILENOTEBOOK)
      canSelChange = class::FILENOTEBOOK_CANSELCHANGE
      height = 419.0
      left = 11.0
      top = 33.0
      width = 687.0
      colorNormal = "BtnText/BtnFace"
      fontSize = 9.0
      pageno = 2
      dataSource = 'ARRAY {"Details","Source","Viewer"}'
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE3 = new RECTANGLE(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE3)
      left = 13.0
      top = 291.0
      width = 471.0
      height = 111.0
      text = "Object File Target Location"
      fontSize = 9.0
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE1 = new RECTANGLE(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE1)
      left = 11.0
      top = 59.0
      width = 473.0
      height = 119.0
      text = "File Properties"
      fontSize = 9.0
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILEWARNING = new TEXT(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILEWARNING)
      height = 22.0
      left = 12.0
      top = 32.0
      width = 472.0
      text = ""
      borderStyle = 4	// Single
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL8 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL8)
      height = 20.0
      left = 28.0
      top = 77.0
      width = 111.0
      text = "File Name"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILENAME = new ENTRYFIELD(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILENAME)
      onChange = class::FILENAME_ONCHANGE
      height = 22.0
      left = 144.0
      top = 77.0
      width = 298.0
      fontSize = 9.0
      speedTip = "Filename"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 150
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.BUT_FILE_SELECT = new PUSHBUTTON(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.BUT_FILE_SELECT)
      onClick = class::BUT_FILE_SELECT_ONCLICK
      height = 24.0
      left = 449.0
      top = 77.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE TS_OPEN"
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL9 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL9)
      height = 20.0
      left = 28.0
      top = 100.0
      width = 91.0
      text = "File Size"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILESIZE = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILESIZE)
      height = 20.0
      left = 144.0
      top = 100.0
      width = 108.0
      text = ""
      fontSize = 9.0
      speedTip = "File size in Bytes"
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL10 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL10)
      height = 20.0
      left = 28.0
      top = 123.0
      width = 91.0
      text = "Created"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILECREATED = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILECREATED)
      height = 20.0
      left = 144.0
      top = 123.0
      width = 153.0
      text = ""
      fontSize = 9.0
      speedTip = "File creation date"
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE2 = new RECTANGLE(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.RECTANGLE2)
      left = 11.0
      top = 187.0
      width = 473.0
      height = 93.0
      text = "Build Options"
      fontSize = 9.0
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL11 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL11)
      height = 20.0
      left = 28.0
      top = 146.0
      width = 91.0
      text = "Modified"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILEMODIFIED = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILEMODIFIED)
      height = 20.0
      left = 144.0
      top = 146.0
      width = 153.0
      text = ""
      fontSize = 9.0
      speedTip = "File last modified date"
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FILEINCLUDED = new CHECKBOX(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FILEINCLUDED)
      onChange = class::FILEINCLUDED_ONCHANGE
      height = 20.0
      left = 28.0
      top = 236.0
      width = 220.0
      text = "Include file within executable?"
      statusMessage = "Store in EXE"
      speedTip = 'Store this file into the "exe" file'
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      value = true
      group = true
      textLeft = true
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.DEOOBJECT = new CHECKBOX(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.DEOOBJECT)
      onChange = class::DEOOBJECT_ONCHANGE
      height = 20.0
      left = 28.0
      top = 327.0
      width = 240.0
      text = "Copy File to Separate DEO Folder"
      statusMessage = "Copy File to Separate DEO Folder"
      speedTip = "Copy File to Separate DEO Folder"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      value = true
      group = true
      textLeft = true
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.MAINPROG = new CHECKBOX(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.MAINPROG)
      onChange = class::MAINPROG_ONCHANGE
      height = 20.0
      left = 28.0
      top = 213.0
      width = 220.0
      text = "File is Main (Startup) Program?"
      speedTip = "Indicate this is the project main file"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      textLeft = true
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL1)
      height = 20.0
      left = 30.0
      top = 351.0
      width = 114.0
      text = "DEO Folder"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.DEOTARGET = new COMBOBOX(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.DEOTARGET)
      onChange = class::DEOTARGET_ONCHANGE1
      height = 23.0
      left = 143.0
      top = 350.0
      width = 263.0
      speedTip = "DEO library to copy this file to"
      fontSize = 9.0
      style = 2	// DropDownList
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL17 = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TEXTLABEL17)
      height = 20.0
      left = 6.0
      top = 75.0
      width = 101.0
      text = "DEO Target Folder:"
      colorNormal = "B/BtnFace"
      fontSize = 8.0
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.FORMVIEWER1 = new COREFORMVIEWER(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.FORMVIEWER1)
      enabled = false
      left = 0.0
      top = 22.0
      width = 687.0
      height = 397.0
      borderStyle = 4	// Single
      pageno = 3
      anchor = 6	// Container
   endwith

   with (this.NOTEBOOK1.FILENOTEBOOK.FORMVIEWER1.TLCANNOTVIEW)
      visible = false
      height = 22.0
      left = 0.0
      top = 5.0
      width = 210.0
      text = "Unable To View File"
      colorNormal = "b/BtnFace"
      fontBold = true
      alignHorizontal = 1	// Center
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.SOURCEVIEWER = new EDITOR(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.SOURCEVIEWER)
      height = 406.0
      left = 0.0
      top = 23.0
      width = 472.0
      value = ""
      modify = false
      wrap = false
      fontName = "Courier New"
      fontSize = 8.0
      pageno = 2
      evalTags = false
      popupEnable = false
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.REPORTVIEWER1 = new REPORTVIEWER(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.REPORTVIEWER1)
      height = 402.0
      left = 0.0
      top = 23.0
      width = 474.0
      pageno = 3
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.STRUCTUREGRID = new GRID(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.STRUCTUREGRID)
      cellHeight = 22.0
      pageno = 3
      height = 362.0
      left = 0.0
      top = 22.0
      width = 430.0
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.TLNOREPORTVIEW = new TEXTLABEL(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.TLNOREPORTVIEW)
      height = 21.0
      left = 4.0
      top = 31.0
      width = 359.0
      text = "Unable to view file"
      colorNormal = "BtnText/Window"
      fontBold = true
      pageno = 3
      alignHorizontal = 1	// Center
   endwith

   this.NOTEBOOK1.FILENOTEBOOK.IMAGEVIEWER = new IMAGE(this.NOTEBOOK1.FILENOTEBOOK)
   with (this.NOTEBOOK1.FILENOTEBOOK.IMAGEVIEWER)
      visible = false
      height = 397.0
      left = 0.0
      top = 22.0
      width = 687.0
      alignment = 2	// Center
      pageno = 3
      borderStyle = 7	// Client
      anchor = 6	// Container
   endwith

   this.NOTEBOOK1.DEOTARGET = new ENTRYFIELD(this.NOTEBOOK1)
   with (this.NOTEBOOK1.DEOTARGET)
      onChange = class::DEOTARGET_ONCHANGE
      height = 22.0
      left = 136.0
      top = 88.0
      width = 324.0
      fontSize = 9.0
      speedTip = "Target folder for DEO"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 150
      pageno = 4
   endwith

   this.NOTEBOOK1.BUT_SEL_DEOFOLDER = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.BUT_SEL_DEOFOLDER)
      onClick = class::BUT_SEL_DEOFOLDER_ONCLICK
      height = 24.0
      left = 467.0
      top = 86.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE TS_OPEN"
      fontSize = 8.0
      speedTip = "Assign a DEO Target Folder"
      pageno = 4
   endwith

   this.NOTEBOOK1.TEXTLABEL8 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL8)
      height = 20.0
      left = 40.0
      top = 88.0
      width = 89.0
      text = "DEO Folder"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      pageno = 4
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.DEOFOLDERS = new LISTBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.DEOFOLDERS)
      onSelChange = class::DEOFOLDERS_ONSELCHANGE
      height = 233.0
      left = 136.0
      top = 118.0
      width = 324.0
      id = 136
      fontSize = 9.0
      colorHighLight = "HighLightText/HighLight"
      pageno = 4
   endwith

   this.NOTEBOOK1.TEXT1 = new TEXT(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXT1)
      height = 70.0
      left = 135.0
      top = 357.0
      width = 325.0
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      text = 'Select the DEO search path to add or Change. Click on the open/delete folder icons to add or remove a "DEO Target" folder.'
      pageno = 4
   endwith

   this.NOTEBOOK1.BUT_DEOCLEAR = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.BUT_DEOCLEAR)
      onClick = class::BUT_DEOCLEAR_ONCLICK
      height = 24.0
      left = 467.0
      top = 119.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE:2 REM_Folder :ProjExp:ProjExp.dll"
      fontSize = 8.0
      fontBold = true
      speedTip = "Clear a Target Folder"
      pageno = 4
   endwith

   this.NOTEBOOK1.NODETAILSTEXT = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.NODETAILSTEXT)
      height = 22.0
      left = 12.0
      top = 27.0
      width = 449.0
      transparent = true
      text = "File Details Not Available"
      fontSize = 12.0
      pageno = 2
      alignVertical = 1	// Middle
      alignHorizontal = 1	// Center
   endwith

   this.NOTEBOOK1.INNONOTEBOOK = new NOTEBOOK(this.NOTEBOOK1)
   with (this.NOTEBOOK1.INNONOTEBOOK)
      onSelChange = class::INNONOTEBOOK_ONSELCHANGE
      height = 407.0
      left = 12.0
      top = 33.0
      width = 679.0
      colorNormal = "BtnText/BtnFace"
      pageno = 5
      dataSource = 'ARRAY {"Defaults","Files","Menu Grp","Runtime","License","BDE Setting","INI","UAC Registry Settings","Script"}'
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE8 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE8)
      left = 3.0
      top = 29.0
      width = 480.0
      height = 367.0
      text = ""
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RB3 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RB3)
      onChange = class::I_ALLINNORUNTIMERB_ONCHANGE
      height = 24.0
      left = 21.0
      top = 77.0
      width = 274.0
      text = "Do not include Runtime?"
      fontSize = 9.0
      group = true
      value = true
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RB2 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RB2)
      onChange = class::I_ALLINNORUNTIMERB_ONCHANGE
      height = 24.0
      left = 21.0
      top = 55.0
      width = 182.0
      text = "Include Runtime files?"
      fontSize = 9.0
      speedTip = "Include runtime files only (not an installer for bde and runtime)"
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RB1 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RB1)
      onChange = class::I_ALLINNORUNTIMERB_ONCHANGE
      height = 24.0
      left = 21.0
      top = 33.0
      width = 259.0
      text = "Include Runtime Engine?"
      fontSize = 9.0
      speedTip = 'Include the runtime installer executable defined below in "Runtime Engine Install"'
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE1 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE1)
      left = 3.0
      top = 29.0
      width = 466.0
      height = 371.0
      text = ""
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE3 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE3)
      left = 3.0
      top = 29.0
      width = 480.0
      height = 371.0
      text = ""
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE4 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE4)
      visible = false
      left = 7.0
      top = 110.0
      width = 442.0
      height = 290.0
      text = ""
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE5 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE5)
      left = 3.0
      top = 29.0
      width = 480.0
      height = 371.0
      text = ""
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE6 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE6)
      left = 3.0
      top = 29.0
      width = 480.0
      height = 371.0
      text = ""
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL3 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL3)
      height = 22.0
      left = 5.0
      top = 44.0
      width = 119.0
      text = "Installer name:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_APPNAME = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_APPNAME)
      onChange = {;form.project.AppName:=this.value;class::I_UpdateValues()}
      height = 22.0
      left = 154.0
      top = 44.0
      width = 217.0
      fontSize = 9.0
      speedTip = "{#AppName}"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL4 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL4)
      height = 22.0
      left = 5.0
      top = 66.0
      width = 135.0
      text = "Application version:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_VERSION = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_VERSION)
      onChange = {;form.project.AppVersion:=this.value;class::I_UpdateValues()}
      height = 22.0
      left = 154.0
      top = 66.0
      width = 112.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL7 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL7)
      height = 22.0
      left = 5.0
      top = 88.0
      width = 140.0
      text = "Source folder (Root):"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SOURCEFOLDER = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SOURCEFOLDER)
      onChange = class::I_SOURCEFOLDER_ONCHANGE
      height = 22.0
      left = 154.0
      top = 88.0
      width = 273.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE2 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE2)
      left = 3.0
      top = 29.0
      width = 466.0
      height = 373.0
      text = ""
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL5 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL5)
      height = 22.0
      left = 5.0
      top = 110.0
      width = 189.0
      text = "Installation directory:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER1 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER1)
      onChange = class::I_DESTFOLDER_ONCHANGE
      height = 23.0
      left = 154.0
      top = 132.0
      width = 168.0
      speedTip = "<InstallDir>\"
      fontSize = 9.0
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER2 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER2)
      onChange = class::I_DESTFOLDER_ONCHANGE
      height = 22.0
      left = 154.0
      top = 154.0
      width = 308.0
      fontSize = 9.0
      speedTip = "Sub directory\"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL6 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL6)
      height = 22.0
      left = 21.0
      top = 220.0
      width = 385.0
      text = "Needed empty subfolder:"
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER1 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER1)
      onChange = {;class::I_UpdateValues()}
      height = 23.0
      left = 22.0
      top = 242.0
      width = 84.0
      fontSize = 9.0
      dataSource = 'array {"","{app}\"}'
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_ADD = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_ADD)
      onClick = class::I_FILESSUBFOLDER_ADD_ONCLICK
      height = 24.0
      left = 434.0
      top = 55.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE TS_EDIT"
      disabledBitmap = "RESOURCE TS_EDIT_ENAB :ProjExp:ProjExp.dll"
      speedTip = "Change selected items to destinationfolder"
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FILE_ADD = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FILE_ADD)
      onClick = class::I_FILE_ADD_ONCLICK
      height = 24.0
      left = 434.0
      top = 121.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE ADDFILE :ProjExp:ProjExp.dll"
      fontSize = 9.0
      fontBold = true
      speedTip = "Add a File entry"
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FILE_DEL = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FILE_DEL)
      onClick = class::I_FILE_DEL_ONCLICK
      enabled = false
      height = 24.0
      left = 434.0
      top = 154.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE:2 REMFILE :ProjExp:ProjExp.dll"
      fontSize = 9.0
      fontBold = true
      speedTip = "Remove a File entry"
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_LBOX = new LISTBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_LBOX)
      onSelChange = class::I_FILESSUBFOLDER_LBOX_ONSELCHANGE
      height = 253.0
      left = 7.0
      top = 121.0
      width = 420.0
      id = 113
      fontSize = 9.0
      colorHighLight = "HighLightText/HighLight"
      multiple = true
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL1)
      height = 22.0
      left = 7.0
      top = 99.0
      width = 401.0
      text = "Source (local >> installation):"
      fontSize = 9.0
      pageno = 2
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER)
      height = 22.0
      left = 7.0
      top = 55.0
      width = 420.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL2 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL2)
      height = 15.0
      left = 7.0
      top = 40.0
      width = 105.0
      text = "Destination folder:"
      fontSize = 9.0
      pageno = 2
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER2 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER2)
      onChange = {;class::I_UpdateValues()}
      height = 22.0
      left = 105.0
      top = 242.0
      width = 322.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_ADD = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_ADD)
      onClick = class::I_DIRSUBFOLDER_ADD_ONCLICK
      height = 24.0
      left = 434.0
      top = 240.0
      width = 24.0
      text = ""
      upBitmap = "RESOURCE ADDFOLDER :ProjExp:ProjExp.dll"
      fontBold = true
      speedTip = "Add folder"
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_LBOX = new LISTBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_LBOX)
      height = 99.0
      left = 22.0
      top = 264.0
      width = 405.0
      id = 113
      fontSize = 9.0
      colorHighLight = "HighLightText/HighLight"
      multiple = true
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL12 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL12)
      height = 22.0
      left = 21.0
      top = 374.0
      width = 98.0
      text = "Setup Language:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGCB1 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGCB1)
      onChange = {;form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value:=form.project.Language(this.value,form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value); class::I_UpdateValues()}
      height = 23.0
      left = 126.0
      top = 374.0
      width = 126.0
      speedTip = "Supported languages for the compiled Setup.exe file dialog"
      fontSize = 9.0
      dataSource = 'array {"","English","Deutsch","Español","Italian","Japan","Netherland","France","Dansk","Polish"}'
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT)
      onChange = {;form.project.SetupLang:=this.value; class::I_UpdateValues()}
      height = 22.0
      left = 259.0
      top = 374.0
      width = 203.0
      fontSize = 9.0
      speedTip = "Added languages for Setup.exe dialog"
      value = "en"
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPT = new EDITOR(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPT)
      height = 315.0
      left = 7.0
      top = 81.0
      width = 469.0
      value = ""
      modify = false
      wrap = false
      fontSize = 9.0
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTTEXT = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTTEXT)
      height = 15.0
      left = 7.0
      top = 66.0
      width = 400.0
      text = ""
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTGENERATE = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTGENERATE)
      onClick = class::I_SCRIPTGENERATE_ONCLICK
      enabled = false
      height = 24.0
      left = 427.0
      top = 38.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE SAVE :ProjExp:ProjExp.dll"
      disabledBitmap = "RESOURCE SAVE_DISABLED :ProjExp:ProjExp.dll"
      speedTip = "Generate script with settings"
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTNAME = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTNAME)
      onChange = class::I_SCRIPTNAME_ONCHANGE
      height = 22.0
      left = 8.0
      top = 39.0
      width = 386.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTNAME_BUT = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTNAME_BUT)
      onClick = class::I_SCRIPTNAME_BUT_ONCLICK
      height = 24.0
      left = 401.0
      top = 38.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Change Scriptname"
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DISPGROUPATEND = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DISPGROUPATEND)
      onChange = {;form.project.IncDispGroup:=this.value;form.project.modified:=true}
      height = 24.0
      left = 15.0
      top = 363.0
      width = 413.0
      text = "Display group window at end of setup"
      fontSize = 9.0
      value = true
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUP_BOX = new LISTBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUP_BOX)
      onSelChange = class::I_GROUP_BOX_ONSELCHANGE
      height = 121.0
      left = 14.0
      top = 154.0
      width = 434.0
      id = 130
      fontSize = 9.0
      colorHighLight = "HighLightText/HighLight"
      multiple = true
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_UNINS_ICON = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_UNINS_ICON)
      onChange = {;form.project.IncUninsEntry:=this.value;form.notebook1.innonotebook.I_UNINS_ICONUTIL.enabled:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 15.0
      top = 319.0
      width = 287.0
      text = "Include uninstall icon"
      fontSize = 9.0
      value = true
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DESKTOP = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DESKTOP)
      onChange = {;form.project.IncDesktopEntry:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 15.0
      top = 275.0
      width = 195.0
      text = "Include a desktop icon"
      fontSize = 9.0
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_QUICKLAUNCH = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_QUICKLAUNCH)
      onChange = {;form.project.IncQuickEntry:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 15.0
      top = 297.0
      width = 195.0
      text = "Include a quicklaunch icon"
      fontSize = 9.0
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUP1 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUP1)
      onChange = class::I_GROUP1_ONCHANGE
      height = 22.0
      left = 133.0
      top = 73.0
      width = 162.0
      fontSize = 9.0
      dataSource = 'array {" ","{group}\","{commondesktop}\","{userprograms}\","{commonprograms}\","{commonstartmenu}\","{userstartmenu}\","{commonstartup}\","{userstartup}\","{commonprograms}\","{userQuickLaunch}","{commonQuickLaunch}"}'
      pageno = 3
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUP2 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUP2)
      onChange = class::I_GROUP2_ONCHANGE
      key = class::I_GROUP2_KEY
      height = 22.0
      left = 133.0
      top = 106.0
      width = 234.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUPADD_PB = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUPADD_PB)
      onClick = class::I_GROUPADD_PB_ONCLICK
      height = 24.0
      left = 454.0
      top = 154.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE ADDGROUP :ProjExp:ProjExp.dll"
      speedTip = "Add icon to group"
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUPFILES = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUPFILES)
      onChange = class::I_GROUPFILES_ONCHANGE
      height = 22.0
      left = 133.0
      top = 40.0
      width = 315.0
      pageno = 3
      style = 2	// DropDownList
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DISPFLAG = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DISPFLAG)
      onClick = class::I_DISPFLAG_ONCLICK
      enabled = false
      height = 24.0
      left = 372.0
      top = 374.0
      width = 65.0
      text = "Flags"
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_ADDGROUPFILE = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_ADDGROUPFILE)
      onClick = class::I_ADDGROUPFILE_ONCLICK
      height = 24.0
      left = 452.0
      top = 38.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Add files"
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTCALLSM = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_SCRIPTCALLSM)
      onClick = class::I_SCRIPTCALLSM_ONCLICK
      height = 24.0
      left = 454.0
      top = 38.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_RUN"
      speedTip = "Generate Install Program"
      pageno = 9
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_UNINS_ICONUTIL = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_UNINS_ICONUTIL)
      onChange = {;form.project.UninsHS:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 35.0
      top = 341.0
      width = 398.0
      text = "Include program to modify, repair or remove installation"
      fontSize = 9.0
      value = true
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_DEL = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_DEL)
      onClick = class::I_DIRSUBFOLDER_DEL_ONCLICK
      enabled = false
      height = 24.0
      left = 434.0
      top = 275.0
      width = 24.0
      text = ""
      upBitmap = "RESOURCE:2 REM_Folder :ProjExp:ProjExp.dll"
      speedTip = "Remove folder"
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GROUPDEL_PB = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GROUPDEL_PB)
      onClick = class::I_GROUPDEL_PB_ONCLICK
      enabled = false
      height = 24.0
      left = 454.0
      top = 187.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE:2 REMGROUP :ProjExp:ProjExp.dll"
      speedTip = "Remove icon from group"
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL9 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL9)
      height = 22.0
      left = 14.0
      top = 88.0
      width = 140.0
      text = "License file:"
      pageno = 5
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_EF1 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_EF1)
      onLostFocus = class::I_LIZEF_ONCHANGE
      onChange = class::I_LIZEF_ONCHANGE
      height = 22.0
      left = 14.0
      top = 110.0
      width = 434.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL10 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL10)
      height = 22.0
      left = 14.0
      top = 132.0
      width = 259.0
      text = "Text before installation begins:"
      pageno = 5
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_EF2 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_EF2)
      onLostFocus = class::I_LIZEF_ONCHANGE
      onChange = class::I_LIZEF_ONCHANGE
      height = 22.0
      left = 14.0
      top = 154.0
      width = 434.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL11 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL11)
      height = 22.0
      left = 14.0
      top = 176.0
      width = 273.0
      text = "Text after installation completes:"
      pageno = 5
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_EF3 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_EF3)
      onLostFocus = class::I_LIZEF_ONCHANGE
      onChange = class::I_LIZEF_ONCHANGE
      height = 22.0
      left = 14.0
      top = 198.0
      width = 434.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_PB1 = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_PB1)
      onClick = class::I_LIZPB_ONCLICK
      height = 24.0
      left = 454.0
      top = 109.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Add files"
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_PB2 = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_PB2)
      onClick = class::I_LIZPB_ONCLICK
      height = 24.0
      left = 455.0
      top = 153.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Add files"
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.L_PB3 = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.L_PB3)
      onClick = class::I_LIZPB_ONCLICK
      height = 24.0
      left = 455.0
      top = 197.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Add files"
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_LIZ_LBOX = new LISTBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_LIZ_LBOX)
      onSelChange = class::I_LIZ_ONCHANGE
      height = 132.0
      left = 15.0
      top = 253.0
      width = 454.0
      id = 155
      fontSize = 9.0
      colorHighLight = "HighLightText/HighLight"
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.LANG_CB = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.LANG_CB)
      onChange = class::I_LIZ_ONCHANGE
      height = 22.0
      left = 98.0
      top = 55.0
      width = 161.0
      fontSize = 9.0
      dataSource = 'array {"English","Deutsch","Italian","Español","Japan","France","Dansk","Polish","Netherland"}'
      pageno = 5
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_GETSOURCEFOLDER = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_GETSOURCEFOLDER)
      onClick = class::I_GETSOURCEFOLDER_ONCLICK
      height = 24.0
      left = 434.0
      top = 86.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      fontSize = 8.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE7 = new RECTANGLE(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RECTANGLE7)
      left = 3.0
      top = 29.0
      width = 480.0
      height = 367.0
      text = " Database Aliases"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIASFOLDER = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIASFOLDER)
      onChange = class::I_ALIASONCHANGE
      key = class::ALIASFOLDER_KEY
      height = 23.0
      left = 92.0
      top = 58.0
      width = 354.0
      fontSize = 9.0
      dataSource = 'array {"","{userappdata}\","{commonappdata}\","{app}\"}'
      pageno = 6
      style = 1	// DropDown
      dropDownHeight = 132.0
      maxLength = 260
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIASNAME = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIASNAME)
      onChange = class::I_ALIASONCHANGE
      key = class::ALIASFOLDER_KEY
      height = 22.0
      left = 92.0
      top = 83.0
      width = 351.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIAS_ADD = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIAS_ADD)
      onClick = class::I_ALIAS_ADD_ONCLICK
      height = 24.0
      left = 455.0
      top = 165.0
      width = 23.0
      text = ""
      upBitmap = "RESOURCE ADDALIAS :ProjExp:ProjExp.dll"
      fontBold = true
      speedTip = "Add BDE entries"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIAS_LBOX = new LISTBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIAS_LBOX)
      onLeftMouseUp = class::I_ALIAS_LBOX_ONLEFTMOUSEUP
      height = 59.0
      left = 21.0
      top = 185.0
      width = 429.0
      id = 113
      colorHighLight = "HighLightText/HighLight"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIAS_DEL = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIAS_DEL)
      onClick = class::I_ALIAS_DEL_ONCLICK
      enabled = false
      height = 24.0
      left = 455.0
      top = 198.0
      width = 23.0
      text = "-"
      upBitmap = "RESOURCE:2 REM_ALIAS :ProjExp:ProjExp.dll"
      fontBold = true
      speedTip = "Remove BDE entry"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL15 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL15)
      height = 22.0
      left = 15.0
      top = 58.0
      width = 70.0
      text = "Folder:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL16 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL16)
      height = 22.0
      left = 15.0
      top = 83.0
      width = 70.0
      text = "Name:"
      fontSize = 9.0
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL17 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL17)
      height = 22.0
      left = 56.0
      top = 275.0
      width = 98.0
      text = "Max file handle:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL18 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL18)
      height = 22.0
      left = 56.0
      top = 297.0
      width = 91.0
      text = "Lang driver:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL19 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL19)
      height = 22.0
      left = 56.0
      top = 319.0
      width = 63.0
      text = "Level:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL20 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL20)
      height = 22.0
      left = 56.0
      top = 341.0
      width = 105.0
      text = "Memo block size:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL21 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL21)
      height = 22.0
      left = 56.0
      top = 363.0
      width = 98.0
      text = "MDX Block size:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_MAXFILEHANDLE = new SPINBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_MAXFILEHANDLE)
      onChange = {;if this.value<0;this.value=0;endif;form.project.BDEMaxFileHandle:=Iif(this.value>0,''+this.value,'');class::I_UpdateValues()}
      enabled = false
      height = 22.0
      left = 182.0
      top = 275.0
      width = 77.0
      rangeMax = 100
      rangeMin = 1
      fontSize = 9.0
      value = 255
      validErrorMsg = "Ungültige Eingabe "
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_LANGDRIVER = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_LANGDRIVER)
      onChange = {;form.project.BDELangDriver:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 23.0
      left = 182.0
      top = 297.0
      width = 182.0
      fontSize = 9.0
      pageno = 6
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_MDXBLOCKSIZE = new SPINBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_MDXBLOCKSIZE)
      onChange = {;if this.value<0;this.value=0;endif;form.project.BDEMDXBlockSize:=Iif(this.value>0,''+this.value,'');class::I_UpdateValues()}
      enabled = false
      height = 22.0
      left = 182.0
      top = 363.0
      width = 84.0
      speedTip = "Size of disk blocks allocated for .MDX files, in bytes."
      picture = "999,999"
      step = 512.0
      rangeMax = 999999
      rangeMin = 0
      fontSize = 9.0
      value = 1024
      spinOnly = true
      validRequired = true
      validErrorMsg = "Ungültige Eingabe "
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_LEVEL = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_LEVEL)
      onChange = {;form.project.BDELevel:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 23.0
      left = 182.0
      top = 319.0
      width = 84.0
      fontSize = 9.0
      dataSource = 'array {"","3","4","5","7","25"}'
      pageno = 6
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_MEMOBLOCKSIZE = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_MEMOBLOCKSIZE)
      onChange = {;form.project.BDEMemoBlockSize:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 23.0
      left = 182.0
      top = 341.0
      width = 84.0
      fontSize = 9.0
      dataSource = 'array {"","512","1024","2048","4096","8192","32768","65536"}'
      pageno = 6
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIASDEL = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIASDEL)
      onChange = class::I_ALIASONCHANGE
      enabled = false
      height = 13.0
      left = 91.0
      top = 143.0
      width = 308.0
      text = "Delete before create"
      value = true
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.ALIASDRIVER = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.ALIASDRIVER)
      onChange = class::I_ALIASONCHANGE
      enabled = false
      height = 23.0
      left = 92.0
      top = 108.0
      width = 133.0
      fontSize = 9.0
      dataSource = 'array {"DBASE","PARADOX","FOXPRO","ASCIIDRV"}'
      pageno = 6
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL22 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL22)
      height = 22.0
      left = 15.0
      top = 108.0
      width = 70.0
      text = "Driver:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_BDECHANGER = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_BDECHANGER)
      onClick = class::I_BDE_REFRESH
      enabled = false
      height = 24.0
      left = 452.0
      top = 44.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_EDIT"
      disabledBitmap = "RESOURCE TS_EDIT_ENAB :ProjExp:ProjExp.dll"
      speedTip = "Change BDE entries"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL13 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL13)
      height = 22.0
      left = 49.0
      top = 154.0
      width = 98.0
      text = "Folder level 1:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL14 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL14)
      height = 22.0
      left = 49.0
      top = 198.0
      width = 98.0
      text = "Folder level 3:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL23 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL23)
      height = 22.0
      left = 49.0
      top = 176.0
      width = 98.0
      text = "Folder level 2:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER3 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER3)
      onChange = class::I_DESTFOLDER_ONCHANGE
      height = 22.0
      left = 154.0
      top = 176.0
      width = 308.0
      fontSize = 9.0
      speedTip = "Sub directory\"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER4 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_DESTFOLDER4)
      onChange = class::I_DESTFOLDER_ONCHANGE
      height = 22.0
      left = 154.0
      top = 198.0
      width = 308.0
      fontSize = 9.0
      speedTip = "Sub directory"
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL8 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL8)
      height = 22.0
      left = 322.0
      top = 132.0
      width = 84.0
      text = ""
      fontSize = 9.0
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL24 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL24)
      height = 22.0
      left = 49.0
      top = 132.0
      width = 98.0
      text = "Root folder:"
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_NAME_REFRESH = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_NAME_REFRESH)
      onClick = {;form.notebook1.innonotebook.I_AppName.value:= form.project.ProjectName ;form.project.AppName:=form.project.ProjectName;form.project.UninsHSAppName:=form.project.ProjectName;class::I_UpdateValues()}
      height = 24.0
      left = 379.0
      top = 43.0
      width = 84.0
      text = "Refresh"
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL25 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL25)
      height = 22.0
      left = 14.0
      top = 132.0
      width = 344.0
      text = "Existing Menu Group Items:"
      pageno = 3
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL26 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL26)
      height = 22.0
      left = 5.0
      top = 73.0
      width = 125.0
      text = "Start Menu Group:"
      pageno = 3
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL27 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL27)
      height = 22.0
      left = 5.0
      top = 106.0
      width = 118.0
      text = "Menu Label:"
      pageno = 3
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL28 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL28)
      height = 22.0
      left = 5.0
      top = 40.0
      width = 118.0
      text = "Menu Group File:"
      pageno = 3
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL29 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL29)
      height = 22.0
      left = 21.0
      top = 159.0
      width = 378.0
      text = "Database aliases to create at install time:"
      pageno = 6
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL30 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL30)
      height = 22.0
      left = 14.0
      top = 55.0
      width = 70.0
      text = "Language:"
      pageno = 5
      alignVertical = 1	// Middle
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL31 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXTLABEL31)
      height = 22.0
      left = 14.0
      top = 231.0
      width = 196.0
      text = "Selected license files:"
      pageno = 5
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.BDE_USESETTINGS = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.BDE_USESETTINGS)
      onChange = class::BDE_USESETTINGS_ONCHANGE
      height = 24.0
      left = 21.0
      top = 249.0
      width = 343.0
      text = "Update BDE Settings"
      pageno = 6
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.CB_XP = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.CB_XP)
      onChange = {;form.project.XPLook:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 224.0
      top = 55.0
      width = 259.0
      text = "Include Manifest File?"
      speedTip = "Install runtime manifest file (Plusrun.exe.manifest) with support for XP or higher settings"
      fontSize = 9.0
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RBADMIN = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RBADMIN)
      onChange = {;class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 224.0
      top = 77.0
      width = 70.0
      text = "Admin"
      speedTip = "Choose requestedExecutionLevel to include in manifest file"
      group = true
      value = true
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RBHIGHEST = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RBHIGHEST)
      onChange = {;class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 301.0
      top = 77.0
      width = 77.0
      text = "Highest"
      speedTip = "Choose requestedExecutionLevel to include in manifest file"
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.RBINVOKER = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.RBINVOKER)
      onChange = {;class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 392.0
      top = 77.0
      width = 63.0
      text = "Invoker"
      speedTip = "Choose requestedExecutionLevel to include in manifest file"
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG = new CONTAINER(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
      visible = false
      left = 7.0
      top = 43.0
      width = 461.0
      height = 354.0
      borderStyle = 3	// None
      pageno = 2
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX1 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX1)
      height = 20.0
      left = 5.0
      top = 22.0
      width = 154.0
      text = "CompareTimeStamp"
      speedTip = "Instructs Setup to proceed to comparing time stamps if a file being copied already exists on the user's system "
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX11 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX11)
      onChange = {;form.notebook1.InnoNotebook.I_Flag.Checkbox12.enabled:=this.value;form.notebook1.InnoNotebook.I_Flag.Checkbox24.enabled:=not this.value;}
      height = 20.0
      left = 217.0
      top = 22.0
      width = 189.0
      text = "External"
      speedTip = "This flag instructs Inno Setup not to statically compile the file specified by the Source parameter into the installation files."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX2 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX2)
      height = 20.0
      left = 5.0
      top = 43.0
      width = 189.0
      text = "ConfirmOverWrite"
      speedTip = "Always ask the user to confirm before copying the file if it already existed."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX12 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX12)
      enabled = false
      height = 20.0
      left = 229.0
      top = 44.0
      width = 175.0
      text = "SkipIfSourceDoesntExist"
      speedTip = "This flag only has an effect when the external flag is also used."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX3 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX3)
      height = 20.0
      left = 5.0
      top = 64.0
      width = 154.0
      text = "DeleteAfterInstall"
      speedTip = "Instructs Setup to copy the file as usual, but then delete it once the installation is completed (or aborted)."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX13 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX13)
      height = 20.0
      left = 217.0
      top = 66.0
      width = 147.0
      text = "OverWriteReadOnly"
      speedTip = "Always overwrite a read-only file. Without this flag, Setup will ask the user if an existing read-only file should be overwritten."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX5 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX5)
      height = 20.0
      left = 5.0
      top = 85.0
      width = 99.0
      text = "RegServer"
      speedTip = "Register the OLE server (a.k.a. ActiveX control)."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX14 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX14)
      height = 20.0
      left = 217.0
      top = 88.0
      width = 182.0
      text = "OnlyIfDestFileExists"
      speedTip = "Only install the file if it doesn't already exist on the user's system."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX6 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX6)
      height = 20.0
      left = 5.0
      top = 106.0
      width = 99.0
      text = "RegTypeLib"
      speedTip = "Register the type library (.tlb). The uninstaller will unregister the type library (unless the flag UninsNeverUninstall is specified)."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX18 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX18)
      height = 20.0
      left = 217.0
      top = 110.0
      width = 161.0
      text = "OnlyIfDoesntExist"
      speedTip = "Only install the file if it doesn't already exist on the user's system."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX9 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX9)
      onChange = {;form.notebook1.InnoNotebook.I_Flag.Checkbox28.enabled:=this.value; form.notebook1.InnoNotebook.I_Flag.Checkbox28.value = false}
      height = 20.0
      left = 217.0
      top = 154.0
      width = 99.0
      text = "SharedFile"
      speedTip = "Most files installed to the Windows System directory should use this flag, including .OCX ."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX25 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX25)
      height = 20.0
      left = 217.0
      top = 132.0
      width = 189.0
      text = "ReplaceSameVersion"
      speedTip = "The default behavior (i.e. when this flag isn't used) is to not replace an existing file with the same version number."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX7 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX7)
      height = 20.0
      left = 5.0
      top = 127.0
      width = 99.0
      text = "NoRegError"
      speedTip = "When combined with either the regserver or regtypelib flags, Setup will not display any error message if the registration fails."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX17 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX17)
      height = 20.0
      left = 5.0
      top = 148.0
      width = 182.0
      text = "PromptIfOlder"
      speedTip = "When this flag is used, Setup will ask the user whether the file should be replaced, with the default answer being to keep the existing file."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX8 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX8)
      height = 20.0
      left = 5.0
      top = 169.0
      width = 112.0
      text = "RestartReplace"
      speedTip = "Setup will register the file to be replaced the next time the system is restarted."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX28 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX28)
      enabled = false
      height = 20.0
      left = 229.0
      top = 176.0
      width = 180.0
      text = "UninsNoSharedFilePrompt"
      speedTip = "When uninstalling the shared file, automatically remove the file if its reference count reaches zero instead of asking the user."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX16 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX16)
      height = 20.0
      left = 5.0
      top = 190.0
      width = 161.0
      text = "UninsRestartDelete"
      speedTip = "When this flag is used and the file is in use at uninstall time, the uninstaller will queue the file to be deleted when the system is restarted."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX26 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX26)
      height = 20.0
      left = 217.0
      top = 198.0
      width = 147.0
      text = "NoEncryption"
      speedTip = "Prevents the file from being stored encrypted."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX10 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX10)
      height = 20.0
      left = 5.0
      top = 211.0
      width = 189.0
      text = "UninsNeverUninstall"
      speedTip = "Never uninstall this file."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX27 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX27)
      onChange = {;form.notebook1.InnoNotebook.I_Flag.Checkbox29.enabled:=this.value; form.notebook1.InnoNotebook.I_Flag.Checkbox29.value = false}
      height = 20.0
      left = 217.0
      top = 220.0
      width = 147.0
      text = "NoCompression"
      speedTip = "Prevents the compiler from attempting to compress the file."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX22 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX22)
      height = 20.0
      left = 5.0
      top = 232.0
      width = 178.0
      text = "UninsRemoveReadOnly"
      speedTip = "When uninstalling the file, remove any read-only attribute from the file before attempting to delete it"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX24 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX24)
      height = 20.0
      left = 217.0
      top = 264.0
      width = 182.0
      text = "Touch"
      speedTip = "This flag causes Setup to set the time/date stamp of the installed file(s) to that which is specified by the TouchDate and TouchTime [Setup] section directives."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX15 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX15)
      onChange = {;form.notebook1.InnoNotebook.I_Flag.Checkbox30.enabled:=this.value; form.notebook1.InnoNotebook.I_Flag.Checkbox30.value = false}
      height = 20.0
      left = 5.0
      top = 253.0
      width = 112.0
      text = "RecurseSubDirs"
      speedTip = "Instructs the compiler to also search for the Source filename/wildcard in subdirectories under the Source directory."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX23 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX23)
      height = 20.0
      left = 5.0
      top = 295.0
      width = 147.0
      text = "SortFilesByExtension"
      speedTip = "This flag instructs the compiler to compress the found files sorted by extension befores it sorts by path name"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX20 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX20)
      height = 20.0
      left = 217.0
      top = 286.0
      width = 133.0
      text = "DontCopy"
      speedTip = "Don't copy the file to the user's system."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX19 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX19)
      height = 20.0
      left = 217.0
      top = 308.0
      width = 161.0
      text = "IgnoreVersion"
      speedTip = "Don't compare version info at all; replace existing files regardless of their version number."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX21 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX21)
      height = 20.0
      left = 5.0
      top = 316.0
      width = 154.0
      text = "FontIsntTrueType"
      speedTip = "Specify this flag if the entry is installing a non-TrueType font with the FontInstall parameter"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX4 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX4)
      height = 20.0
      left = 5.0
      top = 337.0
      width = 99.0
      text = "IsReadMe"
      speedTip = 'File is the "README" file. Only one file in an installation can have this flag.'
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.TEXT1 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.TEXT1)
      height = 22.0
      left = 219.0
      top = 333.0
      width = 154.0
      visible = false
      colorNormal = "red/BtnFace"
      text = "Info: Overlay container"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.I_FLAGOK = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.I_FLAGOK)
      onClick = class::I_FLAGOK_ONCLICK
      height = 24.0
      left = 408.0
      top = 331.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE #20"
      speedTip = "Save changes and return"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.I_FLAGABORT = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.I_FLAGABORT)
      onClick = {;form.notebook1.innonotebook.I_FLAG.visible:=false;form.notebook1.innonotebook.I_DISPFLAG.enabled:=true;form.notebook1.innonotebook.rectangle2.visible:=true}
      height = 24.0
      left = 380.0
      top = 331.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE #28"
      speedTip = "Return without making changes"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.TEXTLABEL1)
      height = 22.0
      left = 0.0
      top = 0.0
      width = 424.0
      text = "Flags"
      fontUnderline = true
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX29 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX29)
      enabled = false
      height = 20.0
      left = 229.0
      top = 242.0
      width = 182.0
      text = "DontVerifyChecksum"
      speedTip = "Prevents Setup from verifying the file checksum after extraction."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX30 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.I_FLAG)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_FLAG.CHECKBOX30)
      enabled = false
      height = 20.0
      left = 17.0
      top = 274.0
      width = 125.0
      text = "CreateAllSubDirs"
      speedTip = "This flag causes these directories to be created at install time (just like if you created [Dirs] entries for them)."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2 = new CONTAINER(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2)
      visible = false
      left = 7.0
      top = 127.0
      width = 434.0
      height = 269.0
      borderStyle = 3	// None
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.I_LANG_C2 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.I_LANG_C2)
      onChange = class::I_LANG_ONCHANGE
      height = 22.0
      left = 7.0
      top = 33.0
      width = 126.0
      fontSize = 9.0
      dataSource = 'array {"English","Deutsch","Italian","Español","Japan","All languages"}'
      pageno = 0
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.LANGEF = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.LANGEF)
      when = {;return false}
      height = 22.0
      left = 147.0
      top = 33.0
      width = 196.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.CB1 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.CB1)
      onChange = {;form.project.Resource:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 7.0
      top = 66.0
      width = 140.0
      text = "Include Resource.dll"
      value = true
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.CB2 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.CB2)
      onChange = class::CB2_ONCHANGE
      height = 22.0
      left = 7.0
      top = 121.0
      width = 105.0
      fontSize = 9.0
      dataSource = 'array {"","{app}\","{pf}\","{cf}\","{sys}\"}'
      pageno = 0
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL1)
      height = 22.0
      left = 7.0
      top = 99.0
      width = 231.0
      text = "Runtime Destination folder:"
      fontSize = 9.0
      pageno = 0
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.EF1 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.EF1)
      onChange = class::CB2_ONCHANGE
      height = 22.0
      left = 119.0
      top = 121.0
      width = 301.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL2 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL2)
      height = 18.0
      left = 7.0
      top = 15.0
      width = 119.0
      text = "Runtime Language:"
      fontSize = 9.0
      pageno = 0
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL3 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.TEXTLABEL3)
      visible = false
      height = 22.0
      left = 21.0
      top = 253.0
      width = 161.0
      text = "Info: Overlay container"
      colorNormal = "red/BtnFace"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C2.TEXT1 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK.C2)
   with (this.NOTEBOOK1.INNONOTEBOOK.C2.TEXT1)
      height = 88.0
      left = 49.0
      top = 165.0
      width = 315.0
      colorNormal = "Blue/BtnFace"
      text = "INFO: Needed for updates of applications when a BDE and older dBASE Runtime is known to be installed on the user machine."
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_INI_ERRORHAND_INC = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_INI_ERRORHAND_INC)
      onChange = class::INICHECK_ONCHANGE
      enabled = false
      height = 24.0
      left = 24.0
      top = 181.0
      width = 168.0
      text = "Include error handling"
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_INI_TRAP = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_INI_TRAP)
      onChange = {;form.project.INITrap:=iif(this.value,0,1);class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 59.0
      top = 203.0
      width = 98.0
      text = "Trap all errors"
      group = true
      value = true
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_INI_IGNORETRAP = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_INI_IGNORETRAP)
      onChange = {;form.project.INITrap:=iif(this.value,1,0);class::I_UpdateValues()}
      enabled = false
      height = 24.0
      left = 59.0
      top = 225.0
      width = 417.0
      text = "Ignore interpreter memory access violations"
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.I_INI_NOBDE = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.I_INI_NOBDE)
      onChange = class::INICHECK_ONCHANGE
      enabled = false
      height = 24.0
      left = 24.0
      top = 258.0
      width = 156.0
      text = "BDE not required"
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.INICHECK = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.INICHECK)
      onChange = class::INICHECK_ONCHANGE
      onOpen = class::INICHECK_ONCHANGE
      height = 20.0
      left = 24.0
      top = 146.0
      width = 312.0
      text = "Include default INI entries"
      fontSize = 9.0
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXT1 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXT1)
      height = 84.0
      left = 23.0
      top = 47.0
      width = 437.0
      fontSize = 9.0
      text = "If you have chosen to include either a STANDARD or ROAMING INI file (under the 'Project' tab), the options below will be enabled. If you have chosen an INI option of 'NONE' the options below will be disabled. "
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1 = new CONTAINER(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1)
      visible = false
      left = 7.0
      top = 128.0
      width = 434.0
      height = 265.0
      borderStyle = 3	// None
      pageno = 4
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.I_DBENGINENAME = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.I_DBENGINENAME)
      onChange = class::I_DBENGINENAME_ONCHANGE
      height = 22.0
      left = 21.0
      top = 55.0
      width = 378.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 254
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.I_BDEGROUPINSERT = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.I_BDEGROUPINSERT)
      onChange = {;form.project.BDEGroupEntries:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 182.0
      top = 0.0
      width = 174.0
      text = "Include BDE group entries"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.I_LANG_C1 = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.I_LANG_C1)
      onChange = class::I_LANG_ONCHANGE
      visible = false
      height = 22.0
      left = 21.0
      top = 22.0
      width = 126.0
      dataSource = 'array {"English","Deutsch","Italian","Español","Japan","All languages"}'
      pageno = 0
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.CB1 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.CB1)
      onChange = {;form.project.dBProgressbar:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 21.0
      top = 99.0
      width = 262.0
      text = "Disable the progress bar"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.CB2 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.CB2)
      onChange = {;form.project.dBProgressbox:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 21.0
      top = 121.0
      width = 253.0
      text = "Disable the progress box"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.CB3 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.CB3)
      onChange = {;form.project.dBSilent:=this.value;class::I_UpdateValues()}
      height = 24.0
      left = 21.0
      top = 77.0
      width = 223.0
      text = "Start in silent mode"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.CB4 = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.CB4)
      onChange = class::CB4_ONCHANGE
      height = 22.0
      left = 21.0
      top = 154.0
      width = 299.0
      text = "Specify destination folders"
      fontSize = 9.0
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.EF1 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.EF1)
      onChange = {;form.project.dBDestRuntime:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 22.0
      left = 21.0
      top = 198.0
      width = 392.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.EF2 = new ENTRYFIELD(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.EF2)
      onChange = {;form.project.dBDestBDE:=this.value;class::I_UpdateValues()}
      enabled = false
      height = 22.0
      left = 21.0
      top = 242.0
      width = 392.0
      fontSize = 9.0
      value = ""
      validErrorMsg = "Ungültige Eingabe "
      maxLength = 199
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.TL1 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.TL1)
      height = 19.0
      left = 21.0
      top = 176.0
      width = 98.0
      text = "Runtime folder:"
      colorNormal = "gray/BtnFace"
      fontSize = 9.0
      pageno = 0
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.TL2 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.TL2)
      height = 22.0
      left = 21.0
      top = 220.0
      width = 70.0
      text = "BDE folder:"
      colorNormal = "gray/BtnFace"
      fontSize = 9.0
      pageno = 0
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.TEXTLABEL1 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.TEXTLABEL1)
      visible = false
      height = 22.0
      left = 21.0
      top = 0.0
      width = 154.0
      text = "Runtime Language:"
      pageno = 0
      alignVertical = 2	// Bottom
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.I_DBENGINEPB = new PUSHBUTTON(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.I_DBENGINEPB)
      onClick = class::I_DBENGINEPB_ONCLICK
      height = 24.0
      left = 406.0
      top = 44.0
      width = 23.0
      text = ""
      speedBar = true
      upBitmap = "RESOURCE TS_OPEN"
      speedTip = "Add files"
      pageno = 0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.C1.TEXTLABEL2 = new TEXTLABEL(this.NOTEBOOK1.INNONOTEBOOK.C1)
   with (this.NOTEBOOK1.INNONOTEBOOK.C1.TEXTLABEL2)
      height = 22.0
      left = 22.0
      top = 30.0
      width = 153.0
      text = "Runtime Engine Installer:"
      pageno = 0
      alignVertical = 2	// Bottom
      speedTip = "Path and file name for dBASE Runtime Installer to include with application installer."
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXT2 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXT2)
      onLeftMouseUp = {;form.notebook1.innonotebook.UACRB1.value:=true; form.SetUACProperties()}
      height = 79.0
      left = 72.0
      top = 102.0
      width = 397.0
      text = "Do not create application specific registry setting for useUACPaths.  (Allow embedded UAC setting or the runtime engine registry setting for useUACPaths to control UAC support)"
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXT3 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXT3)
      onLeftMouseUp = {;form.notebook1.innonotebook.UACRB2.value:=true; form.SetUACProperties()}
      height = 79.0
      left = 72.0
      top = 198.0
      width = 390.0
      text = "Create application specific registry setting with useUACPaths=Y on Windows Vista or newer?   (this will override the runtime engine registry setting and the embedded UAC setting)"
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXT4 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXT4)
      onLeftMouseUp = {;form.notebook1.innonotebook.UACRB3.value:=true; form.SetUACProperties()}
      height = 79.0
      left = 72.0
      top = 306.0
      width = 397.0
      text = '<p>Create application specific registry setting with useUACPaths="N" on Windows Vista or newer?</p><p>(this will override the runtime engine registry setting and the embedded UAC setting)</p>'
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.TEXT5 = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.TEXT5)
      height = 44.0
      left = 14.0
      top = 44.0
      width = 462.0
      text = "Specify whether or not installer creates an application specific registry setting for useUACPaths"
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.UACRB1 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.UACRB1)
      onChange = class::SETUACPROPERTIES
      height = 27.0
      left = 45.0
      top = 102.0
      width = 18.0
      text = ""
      group = true
      value = true
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.UACRB2 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.UACRB2)
      onChange = class::SETUACPROPERTIES
      height = 27.0
      left = 45.0
      top = 199.0
      width = 18.0
      text = ""
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.UACRB3 = new RADIOBUTTON(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.UACRB3)
      onChange = class::SETUACPROPERTIES
      height = 27.0
      left = 45.0
      top = 309.0
      width = 18.0
      text = ""
      pageno = 8
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.INITHEMECOMBO = new COMBOBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.INITHEMECOMBO)
      onChange = class::INICHECK_ONCHANGE
      enabled = false
      height = 23.0
      left = 26.0
      top = 319.0
      width = 301.0
      fontSize = 9.0
      dataSource = 'array {"0 - System","1 - Studio1","2 - Studio2","3 - Office1 Flat","4 - Office2 Blue","5 - Office3 Luna","6 - office3 Aqua","7 - Office3 Black","8 - Office3 Silver"}'
      pageno = 7
      style = 1	// DropDown
      dropDownHeight = 150.0
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.APPTHEMETITLE = new TEXT(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.APPTHEMETITLE)
      height = 22.0
      left = 28.0
      top = 297.0
      width = 108.0
      colorNormal = "Gray/BtnFace"
      fontSize = 9.0
      text = "API Theme"
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.INILARGEBUTTONCHECK = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.INILARGEBUTTONCHECK)
      onChange = class::INICHECK_ONCHANGE
      enabled = false
      height = 20.0
      left = 29.0
      top = 348.0
      width = 305.0
      text = "Use Large ToolButtons"
      fontSize = 9.0
      value = true
      pageno = 7
   endwith

   this.NOTEBOOK1.INNONOTEBOOK.CKBDEONLYINSTALL = new CHECKBOX(this.NOTEBOOK1.INNONOTEBOOK)
   with (this.NOTEBOOK1.INNONOTEBOOK.CKBDEONLYINSTALL)
      onChange = class::CKBDEONLYINSTALL_ONCHANGE
      height = 24.0
      left = 224.0
      top = 33.0
      width = 259.0
      text = "Install BDE Only?"
      speedTip = "Install runtime manifest file (Plusrun.exe.manifest) with support for XP or higher settings"
      fontSize = 9.0
      pageno = 4
   endwith

   this.NOTEBOOK1.LOGPROGRESS = new PROGRESS(this.NOTEBOOK1)
   with (this.NOTEBOOK1.LOGPROGRESS)
      visible = false
      height = 11.0
      left = 6.0
      top = 440.0
      width = 455.0
      pageno = 3
      value = 1
      rangeMin = 0
      rangeMax = 100
   endwith

   this.NOTEBOOK1.OPENLOGPUSHBUTTON = new PUSHBUTTON(this.NOTEBOOK1)
   with (this.NOTEBOOK1.OPENLOGPUSHBUTTON)
      onClick = class::OPENLOGINSOURCEEDITOR_ONCLICK
      height = 24.0
      left = 375.0
      top = 29.0
      width = 79.0
      text = "&Open in Editor"
      fontSize = 8.0
      pageno = 3
   endwith

   this.NOTEBOOK1.INICOMBO = new COMBOBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.INICOMBO)
      onChange = class::INICOMBO_ONCHANGE
      height = 20.0
      left = 294.0
      top = 99.0
      width = 170.0
      speedTip = "Specify INI option to include in BUILD command: STANDARD=INI ON, NONE=INI OFF, ROAM=INI ROAM"
      fontSize = 9.0
      dataSource = 'array {"STANDARD","NONE","ROAMING"}'
      style = 1	// DropDown
      dropDownHeight = 132.0
      maxLength = 8
      selectAll = false
   endwith

   this.NOTEBOOK1.TEXTLABEL5 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL5)
      height = 20.0
      left = 231.0
      top = 99.0
      width = 60.0
      text = "INI Type?"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
      speedTip = "Specify INI option to include in BUILD command: STANDARD=INI ON, NONE=INI OFF, ROAM=INI ROAM"
   endwith

   this.NOTEBOOK1.TEXT2 = new TEXT(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXT2)
      height = 36.0
      left = 42.0
      top = 41.0
      width = 455.0
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      text = "You can add up to 10 paths that your application will use to search for compiled objects - Search Help for DEO for more infomation."
      pageno = 4
   endwith

   this.NOTEBOOK1.RUNTIMEINBUILDCHECK = new CHECKBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.RUNTIMEINBUILDCHECK)
      onChange = class::RUNTIMEINBUILDCHECK_ONCHANGE
      height = 22.0
      left = 498.0
      top = 77.0
      width = 147.0
      text = "Build with Runtime?"
      speedTip = "Add RTEXE Option to BUILD Command to embed Runtime engine in the .exe"
      textLeft = true
   endwith

   this.NOTEBOOK1.CBUACBUILD = new COMBOBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.CBUACBUILD)
      onChange = class::CBUACBUILD_ONCHANGE
      height = 20.0
      left = 320.0
      top = 77.0
      width = 147.0
      speedTip = "0 - NO UAC option (No UAC option in BUILD command) / 1 - UAC ON in BUILD command / 2 - UAC OFF in BUILD command"
      dataSource = 'array {"0 - NO UAC option","1 - UAC ON","2 - UAC OFF"}'
      style = 1	// DropDown
      dropDownHeight = 132.0
   endwith

   this.NOTEBOOK1.TEXTLABEL9 = new TEXTLABEL(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXTLABEL9)
      height = 20.0
      left = 201.0
      top = 77.0
      width = 119.0
      text = "UAC BUILD option?"
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      alignVertical = 1	// Middle
      speedTip = "Specify INI option to include in BUILD command: STANDARD=INI ON, NONE=INI OFF, ROAM=INI ROAM"
   endwith

   this.NOTEBOOK1.BDEOFFCHECK = new CHECKBOX(this.NOTEBOOK1)
   with (this.NOTEBOOK1.BDEOFFCHECK)
      onChange = class::BDEOFFCHECK_ONCHANGE
      height = 22.0
      left = 498.0
      top = 98.0
      width = 147.0
      text = "Build with NO BDE?"
      speedTip = "Add BDE OFF Option to BUILD Command"
      textLeft = true
   endwith

   this.NOTEBOOK1.TEXT3 = new TEXT(this.NOTEBOOK1)
   with (this.NOTEBOOK1.TEXT3)
      height = 42.0
      left = 27.0
      top = 190.0
      width = 155.0
      colorNormal = "black/BtnFace"
      fontSize = 9.0
      text = "Preprocessor Directives:"
   endwith

   this.NOTEBOOK1.PREPROCESSORS = new EDITOR(this.NOTEBOOK1)
   with (this.NOTEBOOK1.PREPROCESSORS)
      onDrop = {;return false}
      onChange = class::PREPROCESSORS_ONCHANGE
      height = 38.0
      left = 186.0
      top = 189.0
      width = 302.0
      value = ""
      fontSize = 9.0
      speedTip = "Preprocessor directives to be compiled into the application files."
      evalTags = false
      popupEnable = false
   endwith

   this.QVSPLITTER1 = new COREVSPLITTER(this)
   with (this.QVSPLITTER1)
      left = 282.0
      top = 11.0
      width = 6.0
      height = 465.0
      borderStyle = 3	// None
      mousePointer = 14	// Vert.Splitter
   endwith

   this.PROJECTSLOGOCONTAINER = new CONTAINER(this)
   with (this.PROJECTSLOGOCONTAINER)
      left = 10.0
      top = 11.0
      width = 91.0
      height = 465.0
      colorNormal = "0xd1d8d7"
   endwith

   this.PROJECTSLOGOCONTAINER.LOGOBACK1 = new IMAGE(this.PROJECTSLOGOCONTAINER)
   with (this.PROJECTSLOGOCONTAINER.LOGOBACK1)
      height = 200.0
      left = 0.0
      top = 0.0
      width = 85.0
      dataSource = "RESOURCE LogoBackTop :ProjExp:ProjExp.dll"
      pageno = 0
      borderStyle = 3	// None
      anchor = 2	// Top
   endwith

   this.PROJECTSLOGOCONTAINER.LOGOBACK2 = new IMAGE(this.PROJECTSLOGOCONTAINER)
   with (this.PROJECTSLOGOCONTAINER.LOGOBACK2)
      height = 209.0
      left = 0.0
      top = 250.0
      width = 85.0
      dataSource = "RESOURCE LogoBackBott :ProjExp:ProjExp.dll"
      pageno = 0
      borderStyle = 3	// None
      anchor = 1	// Bottom
   endwith

   this.PROJECTSLOGOCONTAINER.PROJECTSLOGO = new IMAGE(this.PROJECTSLOGOCONTAINER)
   with (this.PROJECTSLOGOCONTAINER.PROJECTSLOGO)
      height = 465.0
      left = 0.0
      top = 0.0
      width = 88.0
      dataSource = "RESOURCE ProjectBuilder :ProjExp:PER_2013.dll"
      alignment = 2	// Center
      borderStyle = 3	// None
   endwith

   this.BUTTON_NEW = new IMAGE(this)
   with (this.BUTTON_NEW)
      onLeftMouseDown = class::BUTTON_NEW_ONLEFTMOUSEDOWN
      onLeftMouseUp = class::BUTTON_NEW_ONLEFTMOUSEUP
      height = 44.0
      left = 665.0
      top = 561.0
      width = 44.0
      dataSource = "RESOURCE ButtonNew_EN :ProjExp:PER_2013.dll"
      alignment = 4	// True Size
      borderStyle = 3	// None
      speedTip = "Create New Project"
   endwith

   this.BUTTON_SAVE = new IMAGE(this)
   with (this.BUTTON_SAVE)
      onLeftMouseDown = class::BUTTON_SAVE_ONLEFTMOUSEDOWN
      onLeftMouseUp = class::BUTTON_SAVE_ONLEFTMOUSEUP
      height = 44.0
      left = 714.0
      top = 561.0
      width = 44.0
      dataSource = "RESOURCE ButtonSave_EN :ProjExp:PER_2013.dll"
      alignment = 4	// True Size
      borderStyle = 3	// None
      speedTip = "Save Current Project"
   endwith

   this.BUTTON_CLOSE = new IMAGE(this)
   with (this.BUTTON_CLOSE)
      onLeftMouseDown = class::BUTTON_CLOSE_ONLEFTMOUSEDOWN
      onLeftMouseUp = class::BUTTON_CLOSE_ONLEFTMOUSEUP
      height = 44.0
      left = 763.0
      top = 561.0
      width = 44.0
      dataSource = "RESOURCE ButtonClose_EN :ProjExp:PER_2013.dll"
      alignment = 4	// True Size
      borderStyle = 3	// None
      speedTip = "Close Project Explorer"
   endwith

   this.TREEVIEW1 = new TREEVIEW(this)
   with (this.TREEVIEW1)
      onOpen = {; this.setFocus()}
      onChange = class::TREEVIEW1_ONCHANGE
      onDrop = class::TREEVIEW1_ONDROP
      onRightMouseUp = class::TREEVIEW1_ONRIGHTMOUSEUP
      height = 540.0
      left = 109.0
      top = 10.0
      width = 167.0
      fontSize = 9.0
      borderStyle = 7	// Client
      allowEditLabels = false
      allowEditTree = false
      indent = 19
      trackSelect = false
      imageScaleToFont = true
      imageSize = 16
      allowDrop = true
   endwith

//   this.TREEVIEW2 = new TREEVIEW(this)
//   with (this.TREEVIEW2)
//      height = 88.0
//      left = 469.0
//      top = 231.0
//      width = 56.0
//      indent = 19
//      imageSize = 16
//   endwith


//   this.BNEW = new CONTAINER(this)
//   with (this.BNEW)
//      left = 588.0
//      top = 484.0
//      width = 44.0
//      height = 44.0
//      colorNormal = "0x8b8e8d"
//      borderStyle = 3 // Ohne
//   endwith
//
//   this.BNEW.IMAGE1 = new IMAGE(this.BNEW)
//   with (this.BNEW.IMAGE1)
//      onLeftMouseDown = class::BUTTON_NEW_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_NEW_ONLEFTMOUSEUP
//      height = 44.0
//      left = 0.0
//      top = 0.0
//      width = 44.0
//      dataSource = "RESOURCE Button :ProjExp:ProjExp.dll"
//      alignment = 4   // Wahre Größe
//      mousePointer = 13  // Hand
//      pageno = 0
//      borderStyle = 1 // Relief positiv
//      speedTip = "Create New Project"
//   endwith
//
//   this.BNEW.TEXT1 = new TEXT(this.BNEW)
//   with (this.BNEW.TEXT1)
//      onLeftMouseDown = class::BUTTON_NEW_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_NEW_ONLEFTMOUSEUP
//      height = 14.0
//      left = 12.0
//      top = 17.0
//      width = 23.0
//      colorNormal = "white/BtnFace"
//      alignHorizontal = 1   // Zentriert
//      transparent = true
//      fontSize = 8.0
//      text = "New"
//      borderStyle = 3 // Ohne
//      pageno = 0
//      mousePointer = 13  // Hand
//      speedTip = "Create New Project"
//   endwith
//
//   this.BNEW2 = new CONTAINER(this)
//   with (this.BNEW2)
//      left = 686.0
//      top = 484.0
//      width = 44.0
//      height = 44.0
//      colorNormal = "0x8b8e8d"
//      borderStyle = 3 // Ohne
//   endwith
//
//   this.BNEW2.IMAGE1 = new IMAGE(this.BNEW2)
//   with (this.BNEW2.IMAGE1)
//      onLeftMouseDown = class::BUTTON_CLOSE_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_CLOSE_ONLEFTMOUSEUP
//      height = 44.0
//      left = 0.0
//      top = 0.0
//      width = 44.0
//      dataSource = "RESOURCE BUTTON :ProjExp:ProjExp.dll"
//      alignment = 4   // Wahre Größe
//      mousePointer = 13  // Hand
//      borderStyle = 1 // Relief positiv
//      speedTip = "Close Project Explorer"
//   endwith
//
//   this.BNEW2.TEXT1 = new TEXT(this.BNEW2)
//   with (this.BNEW2.TEXT1)
//      onLeftMouseDown = class::BUTTON_CLOSE_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_CLOSE_ONLEFTMOUSEUP
//      height = 14.0
//      left = 10.0
//      top = 17.0
//      width = 27.0
//      colorNormal = "white/BtnFace"
//      alignHorizontal = 1   // Zentriert
//      transparent = true
//      fontSize = 8.0
//      text = "Close"
//      borderStyle = 3 // Ohne
//      pageno = 0
//      mousePointer = 13  // Hand
//      speedTip = "Close Project Explorer"
//   endwith
//
//   this.BNEW3 = new CONTAINER(this)
//   with (this.BNEW3)
//      left = 637.0
//      top = 484.0
//      width = 44.0
//      height = 44.0
//      colorNormal = "0x8b8e8d"
//      borderStyle = 3 // Ohne
//   endwith
//
//   this.BNEW3.IMAGE1 = new IMAGE(this.BNEW3)
//   with (this.BNEW3.IMAGE1)
//      onLeftMouseDown = class::BUTTON_SAVE_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_SAVE_ONLEFTMOUSEUP
//      height = 44.0
//      left = 0.0
//      top = 0.0
//      width = 44.0
//      dataSource = "RESOURCE BUTTON :ProjExp:ProjExp.dll"
//      alignment = 4   // Wahre Größe
//      mousePointer = 13  // Hand
//      borderStyle = 1 // Relief positiv
//      speedTip = "Save Current Project"
//   endwith
//
//   this.BNEW3.TEXT1 = new TEXT(this.BNEW3)
//   with (this.BNEW3.TEXT1)
//      onLeftMouseDown = class::BUTTON_SAVE_ONLEFTMOUSEDOWN
//      onLeftMouseUp = class::BUTTON_SAVE_ONLEFTMOUSEUP
//      height = 14.0
//      left = 10.0
//      top = 17.0
//      width = 27.0
//      colorNormal = "white/BtnFace"
//      alignHorizontal = 1   // Zentriert
//      transparent = true
//      fontSize = 8.0
//      text = "Save"
//      borderStyle = 3 // Ohne
//      pageno = 0
//      mousePointer = 13  // Hand
//      speedTip = "Save Current Project"
//   endwith
//

   function OpenProcs
      // Open procedure files
      set procedure to :CoreShared:qlanguage.cc persistent
      set procedure to :ProjExp:pbuilder.cc persistent
      set procedure to :ProjExp:pBuilderPlus.pop persistent
      set procedure to :CoreShared:FNSplit.cc persistent
      set procedure to :CoreShared:CoreMouse.CC persistent
      set procedure to :CoreShared:CoreIni.cc persistent
      set procedure to :ProjExp:Resize.cc persistent
      set procedure to :ProjExp:cursor.cc persistent
      set procedure to :ProjExp:pBuilderProp.wfm additive
      return true

      // The following proc files are opened in form constructor
      //set procedure to :ProjExp:Project.cc persistent
      //set procedure to :CoreShared:coreSplitter.cc additive persistent
      //set procedure to :CoreShared:CoreFormViewer.CC additive persistent
      //return true

   function CloseProcs
      // Close procedure files
      try
         close procedure :CoreShared:qlanguage.cc
         close procedure :ProjExp:Project.cc
         close procedure :ProjExp:pbuilder.cc
         close procedure :ProjExp:pBuilderPlus.pop
         close procedure :CoreShared:FNSplit.cc
         close procedure :CoreShared:CoreMouse.CC
         close procedure :CoreShared:CoreIni.cc
         close procedure :CoreShared:coreSplitter.cc
         close procedure :CoreShared:CoreFormViewer.cc
         close procedure :ProjExp:Resize.cc
         close procedure :ProjExp:pBuilderProp.wfm
         close procedure :ProjExp:cursor.cc
      catch (exception e)
      endtry
      return

   function GetShortFolderName(Input)
      Extern culong GetShortPathNameA(cstring,cstring,culong) kernel32
      Output=space(255)
      Laenge=getshortpathnameA(input,output,255)
      Output:=substr(output,1,Laenge)
   return Output

   function init
      this.OpenProcs()
		
      this.Resizer = new Resize( (this) )

      this.startProject = this.cProjectFileName

      this.qLang = new qLanguage()
      this.qLang.SetMembersFromDTF( _app.sourceAliases[ "ProjExp" ] + "\dtf\" + "pBuilderPlus", ( this ), "NL" )
      //this.qLang.loadDTF( _app.sourceAliases[ "ProjExp" ]+"\dtf\" + "pBuilderPlus", "NL" )

      //D.Brooks 11/29/2004 - add ability to translate I_DestFolder1 choices
      this.DestChoices = new Array()
      this.DestChoices.add("")
      this.DestChoices.add(form.qLang.iGetText("Program Files\"))
      this.DestChoices.add(form.qLang.iGetText("Common Files\"))
      this.DestChoices.add(form.qLang.iGetText("Windows\"))
      this.DestChoices.add(form.qLang.iGetText("System\"))
      this.DestChoices.add(form.qLang.iGetText("Root Drive\"))
      this.notebook1.innonotebook.I_DestFolder1.dataSource = 'array this.DestChoices'

      //J.Kwekkeboom 12/18/2004 - added for support ProjExp.dll Bitmaps
      this.ExplorerDllFile=this.GetShortFolderName(_app.sourceAliases[ "ProjExp" ])+"\ProjExp.dll"
		form.getIniSettings() //KK moved up

      //QAID: 5255 - D.Brooks - 02/24/2005
      this.notebook1.innonotebook.CB_XP.value:=false

      class::SetMenuLanguage()

      this.InnoGroupFiles= new Array()

      //for I_Liz_LBOX: license,before and after files
      this.LizArr = new Array()
      //for BDE Folders
      this.BDEArr = new Array()
      this.BDEArr.add("")
      this.BDEArr.add("{userappdata}")
      this.BDEArr.add("{commonappdata}")
      this.BDEArr.add("{app}")
      this.notebook1.innonotebook.AliasFolder.dataSource:="Array this.BDEArr"

      //J.Kwekkeboom 11/14/2005 - go to inno tab.+1 by new included INI
      //this.ScriptIsGenerate=true
      this.ScriptIsGenerate=false

      //J.Kwekkeboom 01/20/2007 - Added new Setup language support
      this.notebook1.innonotebook.I_SETUPLANGRESULT.Value = lower(_app.Language)

      this.LastEditFile="" //get the last editfile source
      this.LastViewFile="" //get the last viewfile

      form.FNSplit = new FNSplit()

      form.qVSplitter1.doubleClickPosition := SPLITTER_DBLCLK_POS
      form.qVsplitter1.onMoved = class::SplitterDropped

      form.notebook1.fileNotebook.dataSource:='ARRAY {"'+form.qLang.iGetText("Details")+'","'+form.qLang.iGetText("Source")+'","'+form.qLang.iGetText("Viewer")+'"}'

      form.notebook1.fileNotebook.reportViewer1.anchor = 6
      form.notebook1.fileNotebook.sourceViewer.anchor = 6
      form.notebook1.fileNotebook.structureGrid.anchor = 6

      form.notebook1.innoNotebook.dataSource:='ARRAY {"'+form.qLang.iGetText("Defaults")+'","'+form.qLang.iGetText("Files")+'","'+form.qLang.iGetText("Group")+'","'+form.qLang.iGetText("Runtime")+'","'+form.qLang.iGetText("License")+'","'+form.qLang.iGetText("BDE Settings")+'","INI","'+ 'UAC Registry Setting","' +  form.qLang.iGetText("Script")+'"}'

      form.bLoading = false
      form.viewer = null
      form.viewerFile = null
      form.editFile = null
      form.structureFile = null
      form.structureFileQuery = null

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor = new Cursor()
      //End QAID: 5176

      // switch off the onChange which will otherwise fire

      form.save = new object()
      form.save.exact = set("exact")
      set exact off
      form.save.fullpath = set("fullpath")
      set fullpath on

      // notebook page designators
      form.nBFilesPage = 2
      form.nBLogPage = 3
      form.nBInnoPage = 5
      if upper(this.cProjectFileName) = 'UNTITLED'
         this.cProjectFileName = class::getNextName('Untitled')
      endif

      form.flatToolBar = true


      // M.Kay - Re-enable call to checktoolbar() - 01/29/2013
      form.checkToolbar()

      form.oMouse = new CoreMouse()

      // create the popup
      if type('form.mainPopup') # 'O'
         form.MainPopup = new pBuilderPlusPopup(Form,"TreePopup")
         form.mainPopup.form = (form)
      endif

      form.bSizing = false

      // M.Kay - added missing inits - 07/13/2013
      form.SaveRspFile = false
      form.Verbose     = true
      form.VerboseLog  = true

      // Get MRU list from Projexp.ini

      class::newProject()

      this.SMFolder="" //Folder to application of Inno Setup or InnoScriptGenerator
      this.SMFolder=this.project.GetSMFolder()

      //28/07/2012 J.Kwekkeboom  
      //Seek for dBaseRuntimeInclude and look at project.GetRunIncludeFolder()
      //old SMFolder -> new dBaseRuntimeInclude
      
      this.ISGDefaultFolder="" //Folder for save ISS files  
      this.NewIncludeExists=false                                               //New Runtime Include folder activ?
      this.ToolsUtilitiesFolder=""                                              //Folder for the UnInsHs utilties
      this.dBaseRuntimeInclude=""                                               //Foldername where all Include files are
      this.dBaseRuntimeInclude := this.project.GetRunIncludeFolder()
      //MsgBox("this.dBaseRuntimeInclude="+this.dBaseRuntimeInclude+chr(13)+"Line 3554")
      if IsDir(form.dBaseRuntimeInclude)                                        //normal dbase runtime folder all must have it...
        if IsDir(form.dBaseRuntimeInclude+"\Include")
           //new Runtime include folder
           //so we get datas form new dBase Runtime include folder
           //MsgBox(form.dBaseRuntimeInclude+"\Include exists")
          form.NewIncludeExists := true
          form.dBaseRuntimeInclude := form.dBaseRuntimeInclude+"\Include"
          form.SMFolder := this.project.GetInnoAppFolder()
          form.ToolsUtilitiesFolder := form.dBaseRuntimeInclude
          //MsgBox("form.ToolsUtilitiesFolder := "+form.ToolsUtilitiesFolder)
          form.ISGDefaultFolder := ''
          
          this.SMVersion = ''
          //this.InnoVersion = this.project.GetInnoVersion()   
        else       
          //MsgBox(form.dBaseRuntimeInclude)
          //new folder not find then
          form.NewIncludeExists := false
          form.ISGDefaultFolder := this.project.GetISGDefFolder()
          if IsDir(form.SMFolder+'\Include')                                    //Inno Script Generator folder ok?            
            form.ToolsUtilitiesFolder := form.SMFolder
            //MsgBox("form.ToolsUtilitiesFolder := "+form.ToolsUtilitiesFolder)
            form.dBaseRuntimeInclude := form.SMFolder+'\Include'                //we set to this old folder
           // MsgBox("this.dBaseRuntimeInclude="+this.dBaseRuntimeInclude+chr(13)+"Line 3572")
          endif
          //D.Brooks - 10/03/2005
          this.SMVersion = this.project.GetSMVersion()
          //this.InnoVersion = this.project.GetInnoVersion()
          //End D.Brooks - 10/03/2005
        endif
      endif
      //msgbox(form.dBaseRuntimeInclude+chr(13)+form.SMFolder+chr(13)+form.ToolsUtilitiesFolder)   
      //////////////////////

      form.UninsHSExeDir = form.ToolsUtilitiesFolder+"\Utilities\UnInsHs"
      //MsgBox("form.UninsHSExeDir="+form.UninsHSExeDir+" 1")
      this.InnoVersion = this.project.GetInnoVersion()
      

      //added for let autosizing of all translated text strings
      //J.Kwekkeboom 14/12/2004
      form.resizer.TransWidth()

      //Resets the display of the Project logo based on ini settings
      form.ProjectsLogoContainer.visible := form.showProjectsLogo
      form.treeview1.left := iif(form.showProjectsLogo, 109.0, 10.0)
      form.splitterDropped()

      //added Italian and german language Buttons
      //J.Kwekkeboom 14/12/2004
      if _app.Language="DE" or _app.Language="IT"
         this.BUTTON_CLOSE.dataSource:="RESOURCE ButtonClose_"+_app.Language+" :ProjExp:ProjExp.dll"
         this.BUTTON_NEW.dataSource:="RESOURCE ButtonNew_"+_app.Language+" :ProjExp:ProjExp.dll"
         this.BUTTON_SAVE.dataSource:="RESOURCE ButtonSave_"+_app.Language+" :ProjExp:ProjExp.dll"
      endif
      return true

   function SetMenuLanguage
      if not(_app.Language="EN")
        //fix for error on below RUN. item in dBase non english language
        //added try ... catch block
        //J.Kwekkeboom 01/16/2007
        try
        with this.root
          with build
            text:=form.qLang.iGetText("&Build")
            build.text:=form.qLang.iGetText("&Build")
            Compile.text:=form.qLang.iGetText("&Compile")
            CompileAll.text:=form.qLang.iGetText("Com&pile All")
            Debug.text:=form.qLang.iGetText("&Debug")
            Deploy.text:=form.qLang.iGetText("Generate &Install Program")
            Execute.text:=form.qLang.iGetText("E&xecute")
            Rebuild.text:=form.qLang.iGetText("Rebuild &All")
            RunProg.text:=form.qLang.iGetText("&Run")
          endwith
          with Editmenu
            text:=form.qLang.iGetText("&Edit")
            CopyOption.text:=form.qLang.iGetText("&Copy")
            CopyOption.statusMessage:= form.qLang.iGetText("Copy current selection")
            CutOption.text:=form.qLang.iGetText("Cu&t")
            CutOption.statusMessage:= form.qLang.iGetText("Copy current selection")
            PasteOption.text:=form.qLang.iGetText("&Paste")
            PasteOption.statusMessage:= form.qLang.iGetText("Paste clipboard contents")
          endwith
          with file
            text:=form.qLang.iGetText("&File")
            Close.text:=form.qLang.iGetText("&Close")
            Compile.text:=form.qLang.iGetText("&Compile")
            NewFile.text:=form.qLang.iGetText("&New")
            OpenFile.text:=form.qLang.iGetText("&Open Existing Project")+"..."
            OpenInDesigner.text:=form.qLang.iGetText("Open in Desi&gner")
            OpenInSourceEditor.text:=form.qLang.iGetText("Open in &Source Editor")
            SaveProjAs.text:=form.qLang.iGetText("Save Project &As")+"..."
            SaveProject.text:=form.qLang.iGetText("&Save Project")
            Run.text:=form.qLang.iGetText("&Run")
          endwith
          with menu44
            text:=form.qLang.iGetText("&Help")
            About.text:=form.qLang.iGetText("&About Project Explorer")
            HelpContents.text:=form.qLang.iGetText("&Contents and Index")
          endwith
          with Project
            text:=form.qLang.iGetText("&Project")
            AddFiles.text:=form.qLang.iGetText("&Add files to Project")+"..."
            RemoveFiles.text:=form.qLang.iGetText("Re&move File from Project")
          endwith
          with View
            text:=form.qLang.iGetText("&View")
            ChangeFolder.text:=form.qLang.iGetText("Change Current &Folder")
            RestoreOriginalSize.text:=form.qLang.iGetText("Restore &Original Size")
          endwith
          with Window
            text:=form.qLang.iGetText("&Window")
            Arrange_icons.text:=form.qLang.iGetText("&Arrange Icons")
            Cascade.text:=form.qLang.iGetText("&Cascade")
            Close_All.text:=form.qLang.iGetText("Close &All")
            Tile_Horizontally.text:=form.qLang.iGetText("&Tile Horizontally")
            Tile_Vertically.text:=form.qLang.iGetText("Tile &Vertically")
            statusMessage:=form.qLang.iGetText("Select active Window")
            Arrange_icons.statusMessage:=form.qLang.iGetText("Arrange the minimized window icons evenly")
            Cascade.statusMessage:=form.qLang.iGetText("Layer the open windows so that the title bar of each is visible")
            Close_All.statusMessage:=form.qLang.iGetText("Close all open windows")
            Tile_Horizontally.statusMessage:=form.qLang.iGetText("Arrange the open windows so widths are greater than heights")
            Tile_Vertically.statusMessage:=form.qLang.iGetText("Arrange the open windows so heights are greater than widths")
          endwith
        endwith
        catch(exception e)
        endtry
      endif
      return

   function I_AddGroupFile_onClick
   Local A,I,X,Z,cFile,cSkeleton,cDefault,bfound
      cSkeleton = 'exe, com, bat, doc, txt, hlp, *'
      cFile=class::DelBackSlash(form.notebook1.innonotebook.I_SourceFolder.value)
      if not empty(cFile)
         cFile+="\*"
      else
         cFile:="*"
      endif
      a = new array()
      a.getFile(cFile,form.qLang.iGetText("Add Files"),true,cSkeleton)
      bFound=false
      Z=0

      for i=1 to a.size
        if file( (a[i]) )
           bFound:=false
           for x=1 to form.InnoGroupFiles.size
               if form.InnoGroupFiles[x].toLowercase()=a[i].toLowercase()
                  bFound:=true
                  exit
               endif
           next
           if not bFound
              form.InnoGroupFiles.Add(a[i])
              IF Z=0
                 Z:=form.InnoGroupFiles.size
              ENDIF
           endif
        endif
      next
      if Z>0
         form.notebook1.innonotebook.I_GROUPFILES.dataSource:="Array form.InnoGroupFiles"
         //form.notebook1.innonotebook.I_GROUPFILES.cursel:=z
         //D.Brooks 11/11/2004 - Make the new selection the selected value
         form.notebook1.innonotebook.I_GROUPFILES.value:=;
            form.InnoGroupFiles[z]
         //D.Brooks 11/11/2004 - Register as change of combobox to check if
         //file exists in current list.
         form.notebook1.innonotebook.I_GROUPFILES.onChange()
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
      endif
      return

   function I_DestFolder_onChange
      if empty(form.notebook1.innonotebook.I_DESTFOLDER1.value) or;
         empty(form.notebook1.innonotebook.I_DESTFOLDER2.value)
         form.project.DestFolder:=""
      else
         //D.Brooks 11/16/2004 - Add new fields.
         //convert I_DestFolder1 value to Inno code
         destFolderValue = ""
         do case
            case form.notebook1.innonotebook.I_DESTFOLDER1.value == form.DestChoices[2]
               destFolderValue = "{pf}\"
            case form.notebook1.innonotebook.I_DESTFOLDER1.value == form.DestChoices[3]
               destFolderValue = "{cf}\"
            case form.notebook1.innonotebook.I_DESTFOLDER1.value == form.DestChoices[4]
               destFolderValue = "{win}\"
            case form.notebook1.innonotebook.I_DESTFOLDER1.value == form.DestChoices[5]
               destFolderValue = "{sys}\"
            case form.notebook1.innonotebook.I_DESTFOLDER1.value == form.DestChoices[6]
               destFolderValue = "{sd}\"
            otherwise
               destFolderValue = form.notebook1.innonotebook.I_DESTFOLDER1.value
         endcase
         form.project.DestFolder:=destFolderValue+;
               form.notebook1.innonotebook.I_DESTFOLDER2.value+;
               iif(empty(form.notebook1.innonotebook.I_DESTFOLDER3.value),"","\"+form.notebook1.innonotebook.I_DESTFOLDER3.value)+;
               iif(empty(form.notebook1.innonotebook.I_DESTFOLDER4.value),"","\"+form.notebook1.innonotebook.I_DESTFOLDER4.value)
      endif
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      return

   function I_DirSubFolder_Add_onClick
      if empty(form.notebook1.innonotebook.I_DIRSUBFOLDER2.value)
         form.qLang.iMsgBox("No Subdir defined","Attention",48)
         form.notebook1.innonotebook.I_DIRSUBFOLDER2.setfocus()
         return
      endif
      Local i,cSearch
      cSearch=Upper(form.notebook1.innonotebook.I_DIRSUBFOLDER1.value+form.notebook1.innonotebook.I_DIRSUBFOLDER2.value)
      for i=1 to form.project.NeedDirs.size
          if cSearch==form.project.NeedDirs[i].toUppercase()
             form.qLang.iMsgBox("Already included!","Information",64)
             return
          endif
      next
      class::freeze()
      form.project.NeedDirs.add(form.notebook1.innonotebook.I_DIRSUBFOLDER1.value+form.notebook1.innonotebook.I_DIRSUBFOLDER2.value)
      //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
      form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.dataSource := NULL
      form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.datasource:="array form.project.NeedDirs"
      form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.cursel:=form.project.NeedDirs.size
      //D.Brooks 11/10/2004 - Enable the delete button if something is added.
      form.notebook1.innonotebook.I_DIRSUBFOLDER_DEL.enabled:=form.project.NeedDirs.size>0
      class::Unfreeze()
      return

   function I_DirSubFolder_Del_onClick
   local aArr
      try
        aArr = form.NOTEBOOK1.INNONOTEBOOK.I_DIRSUBFOLDER_LBOX.selected()
      catch(exception e)
        //not items in there...
        return
      endtry
      if aArr.size>1
         if form.qLang.iMsgBox("Do you want remove the %1 items?","Remove",36,""+aArr.size)#6
            return
         endif
      else
         if form.qLang.iMsgBox("Do you want remove this %1 item?","Remove",36,""+aArr.size)#6
            return
         endif
      endif
      Local i,x,z,cSeek,nCount
      nCount=0
      z=0
      for i=1 to aArr.size
          for x=1 to form.project.NeedDirs.size
             if aArr[i]==form.project.NeedDirs[x]
                if z=0
                   z=x-1
                endif
                form.project.NeedDirs.delete(x)
                nCount++
                exit
             endif
          next
      next
      if nCount>0
         nCount=form.project.NeedDirs.size-nCount
         //D.Brooks 11/10/2004 - resize() cannot have 0 as first parameter.
         if nCount>0
            form.project.NeedDirs.resize(nCount)
         else
            form.project.NeedDirs.size = 0
         endif
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.dataSource:="Array form.project.NeedDirs"
         if Z>0
            form.notebook1.innonotebook.I_DIRSUBFOLDER_LBOX.cursel=z
         endif
      endif
      //D.Brooks 11/10/2004 - Delete button should only be active if there are
      //items in the listbox.
      form.notebook1.innonotebook.I_DIRSUBFOLDER_DEL.enabled:=form.project.NeedDirs.size>0
      return

   function I_DispFlag_onClick
      this.enabled:=false

      //J.Kwekkeboom12/20/2005
      //look of more than one item is selected for the
      //IsReadMe flag
      local aArr
      try
        aArr = form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.selected()
      catch(exception e)
        //not items in there...
        this.enabled:=true
        return
      endtry

      //D.Brooks 11/19/2004 - disable the rectangle
      form.notebook1.innonotebook.rectangle2.visible:=false
      //display all included flags correct ....
      Privat cFlag,cField,i
      cFlag=form.project.NeedFiles[form.notebook1.innonotebook.I_FilesSubfolder_LBox.cursel]
      if at("; flags:",cFlag.toLowercase())>0
         cFlag:=lower(ltrim(Substr(cFlag,at("; flags:",cFlag.toLowercase())+8)))
      else
         cFlag:=""
      endif
      for I=1 to 30  //D.Brooks - 09/28/2005
        cField="form.notebook1.innonotebook.I_Flag.Checkbox"+i+"."
        &cField.value:=at(lower(trim(&cField.text)),cFlag)>0
      next

      //J.Kwekkeboom12/20/2005 Enable/Disable IsReadMe correct
      form.notebook1.innonotebook.I_Flag.Checkbox4.enabled:=false
      if aArr.size=1
         Local cCheckFile
         cCheckFile=form.project.NeedFiles[form.notebook1.innonotebook.I_FilesSubfolder_LBox.cursel]
         cCheckFile:=substr(cCheckFile,1,AT('>',cCheckFile)-1)
         cCheckFile:=ltrim(rtrim(cCheckFile))
         cCheckFile:=Lower(right(cCheckFile,4))
         form.notebook1.innonotebook.I_Flag.Checkbox4.enabled:= ;
         cCheckFile='.txt' or cCheckFile='.rtf' or cCheckFile='.doc'
      endif

      //D.Brooks - 09/30/2005
      form.notebook1.InnoNotebook.I_Flag.Checkbox28.enabled:=form.notebook1.InnoNotebook.I_Flag.Checkbox9.value
      form.notebook1.InnoNotebook.I_Flag.Checkbox29.enabled:=form.notebook1.InnoNotebook.I_Flag.Checkbox27.value
      form.notebook1.InnoNotebook.I_Flag.Checkbox30.enabled:=form.notebook1.InnoNotebook.I_Flag.Checkbox15.value
      //End D.Brooks - 09/30/2005

      //D.Brooks 11/19/2004 - Flags label
      flagName = form.project.NeedFiles[form.notebook1.innonotebook.I_FilesSubfolder_LBox.cursel]
      form.notebook1.innonotebook.I_FLAG.textlabel1.text:=iif(empty(flagName),"Flags","Flags for "+flagName)
      form.notebook1.innonotebook.I_FLAG.visible:=true
      return

   function I_FilesSubFolder_Add_onClick
   local aArr
      try
        aArr = form.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_LBOX.selected()
      catch(exception e)
        //not items in there...
        this.enabled:=false
        return
      endtry
      Local i,x,y,z,a,cFilename,cFlags
      Z=0
      cFlags=""
      cFilename=""
      form.notebook1.innonotebook.I_FILESSUBFOLDER.value:=class::DelBackSlash(form.notebook1.innonotebook.I_FILESSUBFOLDER.value)
      for i=1 to aArr.size
          y=0
          for x=1 to form.project.NeedFiles.size
              if aArr[i]==form.project.NeedFiles[x]
                 Y:=X
                 if Z=0
                    Z=X //For set first selected...
                 endif
                 exit
              endif
          next
          if Y>0
             if AT(">",aArr[i])>0
                cFilename=SUBSTR(aArr[i],1,AT(">",aArr[i])-1)
             else
                cFilename=aArr[i]
             endif
             cFilename=rtrim(cFilename)
             cFlags=""
             if AT("; flags:",aArr[i].toLowercase())>0
                cFlags=Substr(aArr[i],AT("; flags:",aArr[i].toLowercase())+8)
                cFlags=ltrim(trim(cFlags))
             endif

             // 10/27/2005 - Dave Casler - Added space after DestDir:
             //MsgBox("About to add ["+cFileName+"] to NeedFiles"+Y)
             form.project.NeedFiles[Y] = cFilename+" >> DestDir: "+form.notebook1.innonotebook.I_FILESSUBFOLDER.value+iIf(not empty(cFlags),"; Flags: "+cFlags,"")
             class::InnoFolderToPrj(cFilename,form.notebook1.innonotebook.I_FILESSUBFOLDER.value)
          endif
      next
      if Z>0
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:=Z
         class::CreateInnoGroupFilesFromNeedFiles()
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
      endif
      return

   function I_File_Del_onClick
   local aArr
      try
        aArr = form.NOTEBOOK1.INNONOTEBOOK.I_FILESSUBFOLDER_LBOX.selected()
      catch(exception e)
        //not items in there...
        return
      endtry
      if aArr.size=0
         return //no item in there...
      endif
      if aArr.size>1
         if form.qLang.iMsgBox("Do you want remove the %1 items?","Remove",36,""+aArr.size)#6
            return
         endif
      else
         if form.qLang.iMsgBox("Do you want remove this %1 item?","Remove",36,""+aArr.size)#6
            return
         endif
      endif

      Local i,x,z,cSeek,nCount
      nCount=0
      z=0
      for i=1 to aArr.size
          for x=1 to form.project.NeedFiles.size
             if aArr[i]==form.project.NeedFiles[x]
                if z=0
                   if x>0
                      z=x-1
                   endif
                endif
                form.project.NeedFiles.delete(x)
                nCount++
                exit
             endif
          next
      next
      if nCount>0
         nCount:=form.project.NeedFiles.size-nCount
         if nCount>0
            form.project.NeedFiles.resize(nCount)
         else
            form.project.NeedFiles:=new Array()
         endif
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
         if Z>0
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:=z
         endif
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
         class::CreateInnoGroupFilesFromNeedFiles()
         form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
         //D.Brooks 11/09/2004 - Update the Flags button
         form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
      endif
      return

   function DelBackSlash(cObj)
      do while right(cObj,1)="\"
         cObj:=Left(cObj,len(cObj)-1)
      enddo
   return cObj

   function InnoFolderToPrj(cSeek,cReplace)
      if empty(cSeek) or empty(cReplace)
         //can not be....
         return
      endif
      Local j
      j=class::SeekContent(cSeek)
      if j>0
         form.project.contents[j].InnoFolder:=ltrim(trim(cReplace))
      endif
   return

   function InnoNotebook_onSelChange

      do case
         //J.Kwekkebbom 03/09/2007 added for Listbox Repaint Error(!!)
         case this.cursel = 2  //Files Settings tab
              form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
              form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
         //end of adding...

         case this.cursel = 6  //BDE Settings tab
              class::I_SetBDEFolders()
              //J.Kwekkebbom 03/29/2007 added for Listbox Repaint Error(!!)
              form.notebook1.innonotebook.Alias_LBox.dataSource:= NULL
              form.notebook1.innonotebook.Alias_LBox.dataSource:="Array form.project.BDEAlias"
              //end of adding... 

         case this.cursel = 9 //Script tab
            if not form.ScriptIsGenerate //or empty(form.notebook1.innonotebook.I_Script.value)
               //D.Brooks 11/15/2004 - Message box replaced with text label.
               form.notebook1.innonotebook.I_SCRIPTTEXT.text = form.qLang.iGetText("Script has not been updated.")
               //form.qLang.iMsgBox("Script not new generate!","Information",64)
            endif
            //form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=not form.ScriptIsGenerate

            // QAID: 6409 - M.Kay, dBI Inc.- 04/09/2008
            // Skip calling CheckRightFolder for Personal dBASE
            if not "PERSONAL"$upper(version())
               // QAID:5771 - 06/05/2006 - Dave Casler
               // Add test to check if the specified script output folder exists
               class::CheckRightFolder()
            endif

      endcase
      return

   //D.Brooks 12/09/2004 - Prevent duplicate files, code from Jonny Kwekkeboom

   function IfInsideInnoFiles(cFile)
   //QAID:5269 - D.Brooks - 03/30/2005 - create local cFileName
   local j,cRet,cVglFile,cFileName
      cRet=false

      for j=1 to form.project.Needfiles.size

         cFileName = cFile
         cFileName=form.project.getFullPath(cFileName)
         try // kk 04/10/2010 - make sure NeedFiles[j] is character
            cVglFile=form.project.getFullPath( trim(LEFT(form.project.NeedFiles[j],AT(">",form.project.NeedFiles[j])-1)) ) //KK 04/21/2010 added getFullPath()
         catch (exception e)
            return false
         endtry

         //KK 04/21/2010 - not using short name - using full path
         /*
         if AT('\',substr(cVglFile,1,AT('>',cVglFile)-1))==0
            cFileName:=form.project.getShortName(cFileName)
         endif
         */

         xTrueFalse = lower(cVglFile)==lower(cFileName)
         if lower(cVglFile)==lower(cFileName)
            cRet:=true
            exit
         endif
      next
    return cRet

   /*
   function IfInsideInnoFiles(cFile)
   local j,cRet
      cRet=false
      cFile:=lower(cFile)
      for j=1 to form.project.Needfiles.size
          if left(form.project.NeedFiles[j].toLowercase(),len(cFile))==cFile
             cRet:=true
             exit
          endif
      next
   return cRet
   */

   function I_SetBDEFolders
   Local cRett
      cRett = form.notebook1.Innonotebook.AliasFolder.value
      form.BDEArr:= new Array()
      form.BDEArr.Add("")
      form.BDEArr.add("{userappdata}")
      form.BDEArr.add("{commonappdata}")
      form.BDEArr.add("{app}")
      Local I,J,cDestDir,bFound
      cDestDir=""
      bFound=false
      for I=1 to form.project.NeedFiles.size
          bFound=false
          cDestDir:=substr(form.project.NeedFiles[i],AT('DestDir:',form.project.NeedFiles[i])+8)
          cDestDir:=ltrim(rtrim(cDestDir))
          for J=1 to form.BDEArr.size
              if form.BDEArr[j].toLowercase()==cDestDir.toLowercase()
                 bFound:=true
                 exit
              endif
          next
          if not bFound
             form.BDEArr.Add(cDestDir)
          endif
      next
      form.notebook1.Innonotebook.AliasFolder.dataSource:="Array form.BDEArr"
      form.notebook1.Innonotebook.AliasFolder.value:=cRett
   return

   function InnoFileItem(cFile)
   local j,z
      //cFile=lower(cFile) KK 04/15/2010 took out - was modifying files that get added a second time as lower case. and therefore adding them a second time.
      j=0
      for z=1 to form.project.NeedFiles.size
          try
            if at(lower(cFile),lower(form.project.Needfiles[z]))>0
               j:=z
               exit
            endif
          catch(exception e)
            loop // value = bollean
          endtry
          //J.Kwekkeboom 12/18/2004 - will never comes here so removed
          //in try
          /*
          if at(cFile,lower(form.project.Needfiles[z]))>0
             j:=z
             exit
          endif
          */
      endfor
   return j

   function SetAllFilesToInno
   local i,x,cFile,nResize
      cFile=""
      x=0
      nResize=0
      cSourceAlias=""

      for i=1 to form.project.Contents.size
      
         // KK 04/15/2010 added to handle cases where a file may have been deleted
         //      but the contents array may not have been updated yet.
         
         cFile = form.project.Contents[i].FileName

         if empty(trim(cFile))
            loop
         endif

          if form.project.Contents[i].Filetype=".H" or;
             form.project.Contents[i].Filetype=".PRJ" or;
             form.project.Contents[i].Filetype=".GID" or; //help ext. file
             form.project.contents[i].isMain
             loop //dont be incuded
          endif

          //for support Source Aliasing too...
          cFile:=class::CheckSourceAlias(form.project.Contents[i].FileName)

          if left(cFile,1)=":"
             form.qLang.iMsgBox("File not found: %1","Information",64,cFile)
             loop //unknown sourceAlias
          endif

          //J.Kwekkeboom 12/18/2004 - added for get always compiled file name
          if form.project.Contents[i].canBeCompiled
             //get always a compiled version name
             //source will be no deployed ;)
             cFile:=form.project.compiledExt(cFile)
          endif

          if form.project.Contents[i].included
             //if file to be included in exe it can be removed from INNO list (NeedFiles)...
             x:=class::InnoFileItem(cFile)
             if x>0
                form.project.NeedFiles.delete(x)
                nResize++
             endif
          else
             //J.Kwekkeboom 12/18/2004 - can be removed here higher included
             /*
             if form.project.Contents[i].canBeCompiled
                //get always a compiled version name
                //source will be no deployed ;)
                cFile:=form.project.compiledExt(cFile)
             endif
             */

             if class::IfInsideInnoFiles(cFile)
                //file is already included...
                loop
             endif

             form.project.NeedFiles.add(cFile+" >> DestDir: "+form.project.Contents[i].InnoFolder)

             if right(cFile.toUppercase(),3)='DBF'
                cFile2=Substr(cFile,1,len(cFile)-3)
                if file(cFile2+'mdx')
                   if not form.IfInsideInnoFiles(cFile2+'mdx')
                      //J.Kwekkeboom 10/20/2005
                      //Changed so set destdir always to same as DBF file is !
                      //form.project.NeedFiles.add(cFile2+"mdx >> DestDir: {app}")
                     form.project.NeedFiles.add(cFile2+"mdx >> DestDir: "+form.project.Contents[i].InnoFolder)
                   endif
                endif
                if file(cFile2+'dbt')
                   if not form.IfInsideInnoFiles(cFile2+'dbt')
                      //J.Kwekkeboom 10/20/2005
                      //Changed so set destdir always to same as DBF file is !
                      //form.project.NeedFiles.add(cFile2+"dbt >> DestDir: {app}")
                     form.project.NeedFiles.add(cFile2+"dbt >> DestDir: "+form.project.Contents[i].InnoFolder)
                   endif
                endif
             endif
          endif
      next

      if nResize>0
         if form.project.NeedFiles.size-nResize=0
            form.project.NeedFiles:=new Array()
         else
            form.project.NeedFiles.resize(form.project.NeedFiles.size-nResize)
         endif
      endif

      //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
      form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
      form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
   return

   function CreateInnoGroupFilesFromNeedFiles
   Local i,z,cFN,cDestDir
      if form.project.NeedFiles.size=0
         return //nothing to do
      endif
      form.InnoGroupFiles:= new Array()
      form.InnoGroupFiles.Add("")
      z=0
      cFN=""
      cDestDir=""
      class::SetAllInnoFolderToPrj()
      for i=1 to form.project.NeedFiles.size
          cFN:=form.project.NeedFiles[i]
          cFN:=rtrim(Substr(cFN,1,AT("; >",cFN)-1))
          cFN:=substr(cFN,len(left(cFN,rat("\",cFN)))+1)
          cDestDir:=Substr(form.project.NeedFiles[i],AT(">",form.project.NeedFiles[i])+11)
          if At(";",cDestDir)>0
             cDestDir:=rtrim(Substr(cDestDir,1,AT(";",cDestDir)-1))
          endif
          if empty(cDestDir)
             //Added for Destdir relative to MainFilename folder
             //J. Kwekkeboom 10/14/2005
             cDestDir:=form.project.InnoDestinationGetFolder(form.project.NeedFiles[i])
             //cDestDir:="{app}\"
          endif
          cDestDir:=class::DelBackSlash(ltrim(cDestDir))+"\"
          if AT(".exe",cFN.toLowercase())>0 or;
             AT(".com",cFN.toLowercase())>0 or;
             AT(".bat",cFN.toLowercase())>0 or;
             AT(".hlp",cFN.toLowercase())>0 or;
             AT(".doc",cFN.toLowercase())>0 or;
             AT(".txt",cFN.toLowercase())>0
             form.InnoGroupFiles.Add(cDestDir+cFN)
             z:=1
          endif
      next
      if z>0
         form.notebook1.innonotebook.I_GROUPFILES.dataSource:= "Array form.InnoGroupFiles"
      endif

   function CreateInnoGroupFilesFromPrj
   Local i
      form.InnoGroupFiles:= new Array()
      form.InnoGroupFiles.Add("")

      //set all act. Inno DestDir folder into contents....
      class::SetAllInnoFolderToPrj()

      for i=1 to form.project.contents.size
          if ".EXE"==form.project.contents[i].FileType or;
             ".COM"==form.project.contents[i].FileType or;
             ".BAT"==form.project.contents[i].FileType or;
             ".HLP"==form.project.contents[i].FileType or;
             ".DOC"==form.project.contents[i].FileType or;
             ".TXT"==form.project.contents[i].FileType
             form.InnoGroupFiles.add(class::DelBackSlash(form.project.contents[i].InnoFolder)+"\"+form.project.contents[i].shortname)
          endif
      next
      if form.InnoGroupFiles.size = 1
         //only "" is insert so we including the main.exefile
         class::CreateInnoGroupFilesFromNeedFiles()
         local x,cFile
         cFile=lower("{app}\"+form.project.exename)
         for x=1 to  form.InnoGroupFiles.size
             if form.InnoGroupFiles[x].toLowercase()==cFile
                cFile:=""
                exit
             endif
         next
         if not empty(cFile)
            form.InnoGroupFiles.add("{app}\"+form.project.exename)
         endif
      endif
      form.notebook1.innonotebook.I_GROUPFILES.dataSource:="Array form.InnoGroupFiles"
   return

   function SetAllInnoFolderToPrj
      if form.project.Needfiles.size=0
         return //nothing to do
      endif
      Local i,j,cSeek,cReplace
      j=-1
      cSeek=""
      cReplace=""
      for i = 1 to form.project.Needfiles.size
          if AT(">",form.project.Needfiles[i])=0
             loop
          endif
          cSeek:=substr(form.project.Needfiles[i],1,AT(">",form.project.Needfiles[i])-1)
          cReplace:=substr(form.project.Needfiles[i],AT(">",form.project.Needfiles[i])+11)
          class::InnoFolderToPrj(cSeek,class::DelBackSlash(cReplace))
      next
   return

   function SeekContent(cSeek)
      if empty(cSeek)
         //can not be....
         return -1
      endif
      cSeek:=ltrim(trim(cSeek))
      Local i,y
      y=-1
      for i=1 to form.project.contents.size
          if form.project.contents[i].FileName == cSeek
             y:=i
             exit
          endif
      next
   return y

   function I_FilesSubFolder_LBox_onSelChange
   Local aArr, cDestDir
      try
        aArr = this.selected()
      catch(exception e)
        //not items in there...
        this.speedtip:= ""
        return
      endtry
      if aArr.size = 0
         this.speedtip:= ""
         return
      endif
      if aArr.size = 1
         this.speedtip:= this.value
      else
         this.speedtip:= aArr.size + ". selected items"
      endif
      try  // kk 04/13/2010 - sometimes form.project.Needfiles[this.cursel] returns a non-character
         if at(">",form.project.Needfiles[this.cursel])>0
            //Local cDestDir (added above !)
            cDestDir=LTRIM(Substr(form.project.Needfiles[this.cursel],AT(">",form.project.Needfiles[this.cursel])+11))
            if AT(";",cDestDir)>0
               cDestDir:=rtrim(Substr(cDestDir,1,AT(";",cDestDir)-1))
            endif
            form.notebook1.innonotebook.I_FILESSUBFOLDER.value:=cDestDir
         else
            //Added for Destdir relative to MainFilename folder
            //J. Kwekkeboom 10/14/2005
            cDestDir=form.project.InnoDestinationGetFolder(form.project.Needfiles[this.cursel])
            //form.notebook1.innonotebook.I_FILESSUBFOLDER.value:="{app}\"
            form.notebook1.innonotebook.I_FILESSUBFOLDER.value:=cDestDir
         endif
      catch (exception e)
      endtry

      return

   function I_FlagOK_onClick
   local x,y,z,cFlag
   Private I,cField,oField
      form.notebook1.innonotebook.I_FLAG.visible:=false
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=true
      //D.Brooks 11/19/2004 - enable the rectangle
      form.notebook1.innonotebook.rectangle2.visible:=true
      local aArr
      try
        aArr = form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.selected()
      catch(exception e)
        //not items in there...
        return
      endtry
      cFlag=""
      for I=1 to 30
        cField="form.notebook1.innonotebook.I_Flag.Checkbox"+i
        oField = &cField.
        if oField.value and oField.enabled
           cFlag:=cFlag+oField.text.tolowercase()+" "
        endif
      next
      z=0
      for i = 1 to aArr.size
          y=0
          for x = 1 to form.project.NeedFiles.size
              if aArr[i]==form.project.NeedFiles[x]
                 y=x
                 if z=0
                    z=x
                 endif
                 exit
              endif
          next
          if y>0
             if AT("; flags:",form.project.NeedFiles[y].toLowercase())>0
                form.project.NeedFiles[y]:=substr(form.project.NeedFiles[y],1,AT("; flags:",form.project.NeedFiles[y].toLowercase())-1)
             endif
             if not empty(cFlag)
                form.project.NeedFiles[y]:=form.project.NeedFiles[y]+"; Flags: "+cFlag
             endif
          endif
      next
      if Z>0
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:=Z
      endif
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.project.modified:=true
//      form.ScriptIsGenerate:=false
      return

   function I_GetSourceFolder_onClick
   local cPath
      if empty(form.notebook1.Innonotebook.I_SOURCEFOLDER.value)
         class::Set_InnoSourceFolder()
      endif
      cPath=getDirectory(form.notebook1.Innonotebook.I_SOURCEFOLDER.value)
      if not empty(cPath)
         form.notebook1.Innonotebook.I_SOURCEFOLDER.value:=cPath
         form.project.SourceFolder:=cPath
         //D.Brooks 11/10/2004 - Let the application know the value changed.
         class::I_UpdateValues()
      endif
      return

   function I_Group_Box_onSelChange
   local cValue,cSub1,cSub2
      cValue=form.notebook1.innonotebook.I_GROUP_BOX.value
      cSub1=""
      cSub2=""
      with form.notebook1.innonotebook
        cSub1:=rtrim(substr(cValue,1,AT(">",cValue)-1))
        cSub2:=ltrim(substr(cValue,AT(">",cValue)+2))
        I_GROUP1.value:= substr(cSub1,1,AT("}",cSub1)+1)
        I_GROUP2.value:= substr(cSub1,len(I_GROUP1.value)+1)
        I_GROUPFILES.value:=cSub2
      endwith
      return

   function I_GroupAdd_PB_onClick
   local i
      with form.notebook1.innonotebook
         if empty(I_GROUPFILES.value)
            form.qLang.iMsgBox("Missing file entry","Attention",48)
            if empty(I_GROUP1.value)
               I_Group1.value:="{group}\"
            endif
            I_GROUPFILES.setfocus()
            return
         endif
         if empty(I_GROUP2.value) or empty(I_GROUP1.value)
            form.qLang.iMsgBox("Missing group entry","Attention",48)
            if empty(I_GROUP2.value)
               I_GROUP2.setfocus()
            else
               I_GROUP1.setfocus()
            endif
            return
         endif
         I_GROUP2.value:=class::DelBackSlash(I_GROUP2.value)
         for i=1 to form.project.NeedGroup.size
             if AT(lower(I_GROUP1.value+I_GROUP2.value),form.project.NeedGroup[i].toLowercase())>0
                return //already insert
             endif
         next
         form.project.NeedGroup.add(I_GROUP1.value+I_GROUP2.value +" >> "+I_GROUPFILES.value)
         I_GROUP_BOX.dataSource:="Array form.project.NeedGroup"
         I_GROUP_BOX.cursel:=form.project.NeedGroup.size
         I_GROUPDEL_PB.enabled:=(form.project.NeedGroup.size>0)
      endwith
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.project.modified:=true
//      form.ScriptIsGenerate:=false
      return

   function I_GroupDel_PB_onClick
   local aArr
      try
        aArr = form.NOTEBOOK1.INNONOTEBOOK.I_GROUP_BOX.selected()
      catch(exception e)
        //not items in there...
        return
      endtry
      if aArr.size=0
         //not items in there...
         return
      endif
      if aArr.size>1
         if form.qLang.iMsgBox("Do you want remove the %1 items?","Remove",36,""+aArr.size)#6
            return
         endif
      else
         if form.qLang.iMsgBox("Do you want remove this %1 item?","Remove",36,""+aArr.size)#6
            return
         endif
      endif
      Local i,x,z,cSeek,nCount
      nCount=0
      z=0
      for i=1 to aArr.size
          for x=1 to form.project.NeedGroup.size
             if aArr[i]==form.project.NeedGroup[x]
                if z=0
                   if x>0
                      z=x-1
                   endif
                endif
                form.project.NeedGroup.delete(x)
                nCount++
                exit
             endif
          next
      next
      if nCount>0
         nCount:=form.project.NeedGroup.size-nCount
         if nCount > 0
            form.project.NeedGroup.resize(nCount)
            form.notebook1.innonotebook.I_GROUP_BOX.dataSource:="Array form.project.NeedGroup"
            if Z>0
               form.notebook1.innonotebook.I_GROUP_BOX.cursel:=z
            endif
         else
            form.project.NeedGroup:=new Array()
            form.notebook1.innonotebook.I_GROUP_BOX.dataSource:="Array form.project.NeedGroup"
            form.notebook1.innonotebook.I_groupFiles.value:=""
            form.notebook1.innonotebook.I_group1.value:="{group}\"
            form.notebook1.innonotebook.I_group2.value:=""
         endif
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
      endif
      form.notebook1.innonotebook.I_GROUPDEL_PB.enabled:=(form.project.NeedGroup.size>0)
      return

   function I_GroupFiles_onChange
      if len(this.value)=0
         return
      endif
      Local i,bFound,cDestDir,cFN
      bFound=false
      cDestDir=left(this.value,rat("\",this.value)-1)
      cFN=substr(this.value,rat("\",this.value)+1)
      for i = 1 to form.project.NeedFiles.size
          //KK - 03/30/2010 take out .toUpperCase and use UPPER() instead
          if AT(Upper(cDestDir),upper(form.project.NeedFiles[i]))>0 and;
             AT(UPPER(cFN),UPPER(form.project.NeedFiles[i]))>0
             bFound:=true
             exit
          endif
      next
      if not bFound
         if form.qLang.iMsgbox("Missing file %1 in Filelist! Add file to Filelist?","Add file to Filelist",36,cFN)==6
            //D.Brooks 11/11/2004 - Add selected filename to file list, not the exename
            form.project.NeedFiles.Add(this.value+" >> DestDir: "+cDestDir)
            //form.project.NeedFiles.Add(form.project.Getfullpath(form.project.exename)+" >> DestDir: "+left(this.value,rat("\",this.value)-1))
            //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:=form.project.NeedFiles.size
            form.notebook1.innonotebook.cursel-=1
         endif
      endif
      if empty(form.NOTEBOOK1.INNONOTEBOOK.I_GROUP1.value)
         form.NOTEBOOK1.INNONOTEBOOK.I_GROUP1.value:="{group}\"
         form.NOTEBOOK1.INNONOTEBOOK.I_GROUP2.value:="{#AppName}"
      endif
      form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
      return

   function INICOMBO_onChange
      //KK - 12/08/2010
      //if Standard or Roaming ini file chosen
      //make sure INI options under INNO are set correctly
      if this.value=="STANDARD" OR this.value=="ROAMING"
         form.notebook1.innonotebook.iniCheck.enabled := true
      else
         form.notebook1.innonotebook.iniCheck.value := false
         form.notebook1.innonotebook.iniCheck.enabled := false
//         form.notebook1.innonotebook.
      endif
      
      DO CASE
      CASE this.value == "STANDARD"
         form.project.inioption = 1
      CASE this.value == "ROAMING"
         form.project.inioption = 2
      CASE this.value == "NONE"
         form.project.inioption = 0
      ENDCASE
      form.INICHECK_onChange()
      form.I_UpdateValues()
      return

   function INICHECK_onChange
      //KK - 12/08/2010
      //set additional INNO options for INI files
      //based on this value.
      //MsgBox("INICHECK_onChange Fired")

      with form.notebook1.innonotebook
         form.project.INNOINI := INICHECK.value
         if INICHECK.value 
         //MsgBox("inicheck is "+inicheck.value)      
            I_INI_ERRORHAND_INC.enabled:= true
            I_INI_NOBDE.enabled:= true
            INITHEMECOMBO.enabled:=true //KK added 02/26/2014 for 9.0.0.0
            INILARGEBUTTONCHECK.enabled:=true //KK added 02/26/2014 for 9.0.0.0
            AppThemeTitle.colorNormal:="BtnText/BtnFace" //KK added 02/26/2014 for 9.0.0.0
            //MsgBox("options enabled")
         else
         //MsgBox("inicheck is false")
            I_INI_ERRORHAND_INC.value := false
            I_INI_ERRORHAND_INC.enabled:= false
            I_INI_NOBDE.value := false
            I_INI_NOBDE.enabled:= false
            INITHEMECOMBO.enabled:= false   //KK added 02/26/2014 for 9.0.0.0
            INILARGEBUTTONCHECK.enabled:=false //KK added 02/26/2014 for 9.0.0.0
            AppThemeTitle.colorNormal:="Gray/BtnFace" //KK added 02/26/2014 for 9.0.0.0
            //Msgbox("options disabled")
         endif

         I_INI_TRAP.enabled:= I_INI_ERRORHAND_INC.enabled and I_INI_ERRORHAND_INC.value
         I_INI_IGNORETRAP.enabled:= I_INI_ERRORHAND_INC.enabled and I_INI_ERRORHAND_INC.value
         //Msgbox("initrap and ignoretrap set")
         //   IS IT JUST A MATTER OF SETTING INIStandard IF EITHER ROAM OR STANDARD?
         //    OR DO WE NEED TO CREATE ADDITIONAL PROPERTIES FOR INIroam AND INIoff???
         form.project.INIErrorHandling:= I_INI_ERRORHAND_INC.value 
         
         //End D.Brooks - 09/28/2005
         form.project.INITrap:=          iif(I_INI_TRAP.value=true,0,1)
         form.project.ININoBDE:=         I_INI_NOBDE.value

         //KK added 02/26/2014 for 9.0.0.0 IDE options
         form.project.INIfullThemeName = INITHEMECOMBO.value
         form.project.iniAppThemeType = LEFT(ltrim(INITHEMECOMBO.value),1)
         form.project.iniLargeButtons = INILARGEBUTTONCHECK.value
         //MsgBox("fullThemeName="+form.project.fullThemeName+chr(13)+"iniAppThemeType="+form.project.iniAppThemeType+"iniLargeButtons="+form.project.iniLargeButtons)
         
      endwith

      return

      //D.Brooks 12/06/2004 - component has been removed.
//   function I_LangFile_PB_onClick
//   Local cFile,cSkeleton,cSearch
//      cSkeleton = 'isl'
//      cSearch=""
//      cFile=form.notebook1.innonotebook.I_LANGFILE.value
//      if empty(cFile)
//         cFile:=class::DelBackSlash(form.notebook1.innonotebook.I_SourceFolder.value)
//         cFile+="\*.isl"
//      endif
//      cFile:=getfile(cFile,form.qLang.iGetText("Add Files"),true,cSkeleton)
//      if empty(cFile)
//         return
//      endif
//      if right(cfile.toLowercse(),3)#"isl"
//         form.qLang.iMsgBox("Wrong extension (%1)","Alert",16,"ISL")
//         return
//      endif
//      form.notebook1.innonotebook.I_LANGFILE.value:=cFile
//      cSearch:=upper(left(form.notebook1.innonotebook.LANG_CB.value,2))
//      do case
//         case cSearch="ES"
//              form.project.ESLanguagefile:=cFile
//         case cSearch="JA"
//              form.project.JALanguagefile:=cFile
//         case cSearch="IT"
//              form.project.ITLanguagefile:=cFile
//      endcase
//      //D.Brooks 11/24/2004 - use method instead
//      class::I_UpdateValues()
////      form.ScriptIsGenerate:=false
////      form.project.Modified:=true


//      return
   function I_Group1_onChange
   Local cValue
      cValue=""
      if this.value="{commonQuickLaunch}"
         cValue:="{commonappdata}\Microsoft\Internet Explorer\Quick Launch\{#AppName}"
         form.notebook1.innonotebook.I_GROUP2.value:="{commonappdata}\Microsoft\Internet Explorer\Quick Launch\{#AppName}"
         form.notebook1.innonotebook.I_GROUPFILES.value:=form.project.Getfullpath(form.project.exeName)
      elseif this.value="{userQuickLaunch}"
         cValue:="{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#AppName}"
         form.notebook1.innonotebook.I_GROUP2.value:="{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#AppName}"
         form.notebook1.innonotebook.I_GROUPFILES.value:=form.project.Getfullpath(form.project.exeName)
      else
         cValue:=form.notebook1.innonotebook.I_GROUP1.value+form.notebook1.innonotebook.I_GROUP2.value
      endif
      if empty(form.notebook1.innonotebook.I_GROUP2.value) or;
         empty(form.notebook1.innonotebook.I_GROUPFILES.value)
         return //Missing second or third entry
      endif
      Local i,bFound
      bFound=false
      for i=1 to form.project.NeedGroup.size
          if at(cValue.toUppercase(),form.project.NeedGroup[i])>0
             bFound:=true
             exit
          endif
      next
      if bFound
         return //already inside
      endif
      form.project.NeedGroup.add(cValue+" >> "+form.notebook1.innonotebook.I_GROUPFILES.value)
      form.notebook1.innonotebook.I_GROUP_BOX.datasource:="Array form.project.NeedGroup"
      form.notebook1.innonotebook.I_GROUP_BOX.cursel:=form.project.NeedGroup.size
      //D.Brooks 11/18/2004 - Update the delete button
      form.notebook1.innonotebook.I_GROUPDEL_PB.enabled:=(form.project.NeedGroup.size>0)
      return

   function I_Group2_key(nChar, nPosition,bShift,bControl)
      form.notebook1.innonotebook.I_GROUPADD_PB.enabled:=;
         not empty(form.notebook1.innonotebook.I_GROUP2.value) and;
         not empty(form.notebook1.innonotebook.I_GROUPFILES.value)
      return

   function I_Group2_onChange
      if left(this.value,1)="\"
         this.value:=substr(this.value,2)
      endif
      form.notebook1.innonotebook.I_GROUPADD_PB.enabled:=;
         not empty(form.notebook1.innonotebook.I_GROUP2.value) and;
         not empty(form.notebook1.innonotebook.I_GROUPFILES.value)
      return

   function I_Lang_onChange
   Local cLang
      cLang="All"
      if this.value#"All languages"
         cLang:=upper(Left(this.value,2))
      endif
      if right(this.name,1)="1"
         //Engine included...
         form.project.dBASELang:=cLang
      else
         //sep, runtime files including...
         //multiple languages supported eg "EN DE" or "All"
         if cLang="All"
            form.project.dBASELang:=cLang
            form.notebook1.innonotebook.c2.LANGEF.value:=cLang
         elseif AT(cLang,form.notebook1.innonotebook.c2.LANGEF.value)=0
            if form.notebook1.innonotebook.c2.LANGEF.value="All"
               form.notebook1.innonotebook.c2.LANGEF.value:=""
            endif
            form.notebook1.innonotebook.c2.LANGEF.value+=" "+cLang
            if len(form.notebook1.innonotebook.c2.LANGEF.value)>14
               form.notebook1.innonotebook.c2.LANGEF.value:="All"
            endif
            form.project.dBASELang:=ltrim(form.notebook1.innonotebook.c2.LANGEF.value)
         endif
      endif
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.modified:=true
      return

   function I_ScriptCallSM_onClick(cComp)
      Local cStartFileName, cFile
      cStartFileName=''
      
      if file(form.SMFolder+'\InnoScriptGenerator.exe')
        cStartFileName := form.SMFolder+'\InnoScriptGenerator.exe'
      else
        cStartFileName := form.SMFolder+'\Compil32.exe'
      endif

      if not file(form.project.InnoScriptname)
         if not empty(form.project.InnoScriptname)
            form.qLang.iMsgbox("File %1 not found","Alert",48,form.project.InnoScriptname)
         else
            form.qLang.iMsgbox("Filename not defined","Alert",48)
         endif
         form.notebook1.innonotebook.I_SCRIPTNAME.setfocus()
         return
      endif
      //D.Brooks 11/17/2004 - Check for exe file
      if not file(form.Project.getFullPath(form.Project.exename))
         if not empty(form.Project.exename)
            form.qLang.iMsgbox("%1 not found","Alert",48,form.Project.exename)
         else
            form.qLang.iMsgbox("no exe file found","Alert",48)
         endif
         return
      endif
      //changed for check needed dBase Engine installer correct there
      //07/28/2012  J.Kwekkeboom
      if form.notebook1.innonotebook.RB1.Value
        //Ok user want include Engine installer check of file exists
        //and not plusrun or db2krun
        cFile = form.notebook1.innonotebook.c1.I_DBENGINENAME.Value
        if Empty(cFile)
          form.qLang.iMsgbox("%1 not specified.","Alert",48,"dBase Runtime Engine Installer")
          return
        endif
        if not file(cFile)
          form.qLang.iMsgbox("%1 dBase Runtime Engine Installer file not found","Alert",48,cFile+chr(13))
          return
        endif
        if lower(form.project.getShortName(cFile))='plusrun.exe' or ;
           lower(form.project.getShortName(cFile))='db2krun.exe'
            //!!!cannot be so this are the normal dBase Runtime files!!!!
            form.qLang.iMsgBox("%1 is not a dBase Runtime Installer Engine file","Alert",16,cFile+chr(13))
            return
        endif
      endif

      //for display in dbase editor and make file avaible for ScriptMaker...
      class::Freeze()
      form.notebook1.innonotebook.I_SCRIPT.value:=class::I_EditorText(form.project.InnoScriptname)
      class::UnFreeze()
      //J.Kwekkeboom changed for ISG 01/15/2007
      if cComp = 'CompAndRun'
         run(.T.,(cStartFileName+' "'+form.project.InnoScriptname+'" "Compile"'))         
      else
         run(.T.,(cStartFileName+' "'+form.project.InnoScriptname+'"'))
      endif
      //run(.T.,(form.SMFolder+'\ScriptMaker.exe "'+form.project.InnoScriptname+'"'))      
      return

   function I_EditorText(cFN)
   Local f,t
      t=""
      if not file(cFN)
         return t
      endif
      f=new file()
      f.open(cFN)
      do while not f.eof()
         t+=f.gets()+chr(13)
      enddo
      f.close()
   return t

   function I_File_Add_onClick
   local a,cFile
      cFile="*"
      cDestDir=form.notebook1.innonotebook.I_FILESSUBFOLDER.value
      if empty(cDestDir)
         cDestDir:="{app}"
      endif
      a = new array()
      a.getFile(cFile,form.qLang.iGetText("Add Files")+" >> "+cDestDir,true,"*")
      if a.size=0
        return
      endif
      Local i,x,z,bFound
      bFound=false
      Z=0
      for i = 1 to a.size
          bFound:=false
          for x=1 to form.project.NeedFiles.size
              if at(a[i].toLowercase(),form.project.NeedFiles[x].toLowercase())>0
                 bFound:=true
                 exit
              endif
          next
          if not bFound
             form.project.NeedFiles.Add(a[i]+" >> DestDir: "+cDestDir)
             IF Z=0
                Z=form.project.NeedFiles.size
             ENDIF
          endif
      next
      if Z>0
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:= "Array form.project.NeedFiles"
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:=z
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.ScriptIsGenerate:=false
//         form.project.modified:=true
      endif
      form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
      return
		

   function I_ScriptGenerate_onClick
      Local cFileName, cTF, h1, cLangAdd, cPath

      if form.notebook1.innonotebook.rb1.value
        if not file(form.notebook1.innonotebook.C1.I_DBENGINENAME.value)     
         form.qLang.iMsgbox("Missing required Plus Runtime Engine filename","Alert",16)
         form.notebook1.innonotebook.cursel:=4
         form.notebook1.innonotebook.C1.I_DBENGINENAME.setfocus()
         return
        endif
      endif
      if empty(form.project.AppName)
         form.qLang.iMsgbox("Missing required application name","Alert",16)
         form.notebook1.innonotebook.cursel:=1
         form.notebook1.innonotebook.I_APPNAME.setfocus()
         return
      endif
      if empty(form.project.DestFolder)
         form.qLang.iMsgbox("Missing required Destination folder","Alert",16)
         form.notebook1.innonotebook.cursel:=1
         form.notebook1.innonotebook.I_DESTFOLDER2.setfocus()
         return
      endif
      //D.Brooks 11/09/2004 - Add check for Source Folder value
      if empty(form.project.SourceFolder)
         form.qLang.iMsgbox("Missing required Source folder","Alert",16)
         form.notebook1.innonotebook.cursel:=1
         form.notebook1.innonotebook.I_SOURCEFOLDER.setfocus()
         return
      endif
      //D.Brooks 11/09/2004 - Add check for Application Version value
      if empty(form.project.AppVersion)
         form.qLang.iMsgbox("Missing required Application Version","Alert",16)
         form.notebook1.innonotebook.cursel:=1
         form.notebook1.innonotebook.I_VERSION.setfocus()
         return
      endif
      //D.Brooks 11/17/2004 - Checks for BDE fields
      if form.project.BDEUseSettings
         do case
            case empty(form.project.BDEMaxFileHandle)
               form.qLang.iMsgbox("Missing BDE Max File Handle","Alert",16)
               form.notebook1.innonotebook.cursel:=6
               form.notebook1.innonotebook.BDE_MAXFILEHANDLE.setfocus()
               return
            case empty(form.project.BDELangDriver)
               form.qLang.iMsgbox("Missing BDE Lang Driver","Alert",16)
               form.notebook1.innonotebook.cursel:=6
               form.notebook1.innonotebook.BDE_LANGDRIVER.setfocus()
               return
            case empty(form.project.BDELevel)
               form.qLang.iMsgbox("Missing BDE Level","Alert",16)
               form.notebook1.innonotebook.cursel:=6
               form.notebook1.innonotebook.BDE_LEVEL.setfocus()
               return
            case empty(form.project.BDEMemoBlockSize)
               form.qLang.iMsgbox("Missing BDE Memo Block Size","Alert",16)
               form.notebook1.innonotebook.cursel:=6
               form.notebook1.innonotebook.BDE_MEMOBLOCKSIZE.setfocus()
               return
            case empty(form.project.BDEMDXBlockSize)
               form.qLang.iMsgbox("Missing BDE MDX Block Size","Alert",16)
               form.notebook1.innonotebook.cursel:=6
               form.notebook1.innonotebook.BDE_MDXBLOCKSIZE.setfocus()
               return
         endcase
      endif
      cLangAdd=""
      cFileName = form.project.InnoScriptName
      //D.Brooks 11/11/2004 - the code what retrieving the wrong part of the
      //string and therefore always asked for the user to choose a filename.
      //if empty(cFileName) or left(cFilename.toLowercase(),4)#'.iss'
      //KK - changed to get rid of default \project\ folder - which doesn't exist and causes an error 03/07/2013
      
      if empty(cFileName) or right(cFilename.toLowercase(),4)#'.iss'
          cFileName = putFile(form.qLang.iGetText("New Inno script"),form.ISGDefaultFolder+"\*","iss")
          if empty(cFileName)
            return
          endif
      endif
      //D.Brooks 11/22/2004 - move to after file generated
//      form.notebook1.innonotebook.I_ScriptGenerate.enabled:=false
//      //D.Brooks 11/15/2004 - Update script text
//      form.notebook1.innonotebook.I_ScriptText.text = "Script has been updated."
//      form.ScriptIsGenerate:=TRUE
      // we write all the info to a temp file always
      cTF = funique("iss???.iss")
      h1 = new file()
      //KK 09/15/2012 - added try catch because if in a dir that is protected by UAC 
      //funique returns an empty string and all of the backup files will not be able to be created
      try
         h1.create(cTF)
         lContinue = true
      catch (exception e)
         form.qLang.iMsgBox("Unable to create new files in this directory due to security restraints."+chr(13)+"Please re-start dBASE Plus with Administrator Rights and try again.","Alert",16)
         lContinue = false
      endtry
      if lContinue
         h1.puts("[_TopOfScript]")
         if _app.language="DE"
            h1.puts("; Dies ist ein Innoskript generiert mit dBASE PLUS Project Explorer")
         else
            h1.puts("; This is a Innoscript generated by dBASE PLUS Project Explorer")
         endif

         //added if empty form.project.Author so ?? get it out PLUS.INI file
         //J.Kwekkeboom 12/16/2004
         if empty(form.project.Author)
            form.project.Author:='Unknown Author'
         endif

         with form.notebook1.innonotebook
           h1.puts("")
           h1.puts("[_Project]")
           h1.puts("ProjectNr="+form.project.AppVersion)
           h1.puts("ProjectName="+form.project.ProjectName)
           h1.puts("ProjectExeFileName="+form.project.getFullPath(form.project.exename))
           h1.puts("ProjectMainFileName="+form.project.InnoScriptname)
           h1.puts("ProjectAuthor=Copyright © "+Year(date())+" "+form.project.Author)
           if empty(form.project.LastCreateDate)
              form.project.LastCreateDate:=DTOC(Date())+" "+Time()
           endif
           h1.puts("ProjectCreateDate="+form.project.LastCreateDate)
           h1.puts("ProjectAccessDate="+DTOC(Date())+" "+Time())
           //D.Brooks 12/02/2004 - version cannot have part in ( )
           local versionStr
           if at('(',version(1)) > 0
               versionStr = trim(left(version(1),at('(',version(1))-1))
           else
               versionStr = version(1)
           endif
        
           h1.puts("ProjectdBaseVersion="+versionStr)
           //h1.puts("ProjectdBaseVersion="+version(1))
           h1.puts("ProjectLastdBaseRuntimeVersion="+form.project.LastDBVersion)
           h1.puts("ProjectLastdBaseRuntimeLanguage="+form.project.LastDBLanguage)
           h1.puts("ProjectdBasePRJFilename="+form.project.getFullPath(form.project.ProjectFileName))
           h1.puts("")
           //J. Kwekkeboom 01/19/2007 - changed for ISG
           h1.puts("[ISPP]")
           //h1.puts("[_ISPP]")
           h1.puts("#pragma option -v+")
           h1.puts("#pragma verboselevel 9 ;Macro and functions successfull call acknowledgements")
           h1.puts("#define Debug")
           h1.puts('#define AppName "'+form.project.AppName+'"')
           h1.puts('#define AppVersion "'+form.project.AppVersion+'"')
           h1.puts('#define AppId "'+form.project.AppName+'_ID"')
           //D.Brooks 12/02/2004 - missing end quote
           h1.puts('#define AppCopyright "'+'Copyright © '+Year(date())+" "+form.project.Author+'"')
           //h1.puts('#define AppCopyright "'+'Copyright ¸ '+Year(date())+" "+form.project.Author)
           h1.puts('#define AppUninstallDir "{app}\Uninstall Information"')
           h1.puts("")

           if not RB3.value
              h1.puts("[dBASERuntime]")
              //J. Kwekkeboom 01/19/2007 - fixed for ISG
              //if file(form.SMFolder+'\Include\dbaseRuntime.txt')
              if file(form.dBaseRuntimeInclude+'\dbaseRuntime.inc')
                 h1.puts('#define SM_dBASERuntime "true"')
              else
                 //cant find the needed include txt file!!!!
                 //so we disable the runtime settings now...
                 h1.puts('#define SM_dBASERuntime "false"')
              endif
              h1.puts('#define dBPlus "'+''+form.project.dBPlus+'"')
              h1.puts('#define dBSeparat "'+RB2.value+'"') 
              h1.puts('#define Resource "'+form.project.Resource+'"')
              h1.puts('#define dBASELang "'+form.project.dBASELang+'"')
              //J.Kwekkeboom 01/21/2007 - Changed ONLY folder without engine.exe name
              /*
              if RB1.Value 
                 h1.puts('#define dBaseRuntimeDir "'+form.project.dBaseRuntimeDir+'"')
              else
                 if AT('.exe',form.project.dBaseRuntimeDir)>0
                    form.project.dBaseRuntimeDir:=Substr(form.project.dBaseRuntimeDir,1,rat("\",form.project.dBaseRuntimeDir)-1)
                 endif
                 h1.puts('#define dBaseRuntimeDir "'+form.project.dBaseRuntimeDir+'"')
              endif
              */
              //KK (08/20/2012) - replacing the above with references to dBaseRuntimeInstDir
              if RB1.Value 
				       //KK 03/25/2015 - this is now handled in the [RUN] section of the inno script see [RUN] section below
						 
                 h1.puts('#define dBaseRuntimeInstDir "'+form.project.dBaseRuntimeInstDir+'"')
                 if AT('.exe',form.project.dBaseRuntimeInstDir)>0
                   //KK 09/18/2012
                   //Add reference to the runtime installr version
                   if file(form.project.dBaseRuntimeInstDir)
                      cInstFile = form.project.dBaseRuntimeInstDir
                      //MsgBox("rat -b - "+ rat("-b",cInstFile))
                      if rat("-b",cInstFile)>0
                          cBuildNo = Substr(cInstFile,rat("-b",cInstFile)+2,4)
                      else
                          cBuildNo = 'unknown'
                      endif

                      h1.puts('#define dBaseRuntimeInstVer "'+cBuildNo+'"')
                   else
                      h1.puts('#define dBaseRuntimeInstVer " noFile')
                      
                   endif
                    
                 endif
                 
              else   // RB1.value
				  
                 form.project.dBaseRuntimeInstDir:=Substr(form.project.dBaseRuntimeInstDir,1,rat("\",form.project.dBaseRuntimeInstDir)-1)
                 h1.puts('#define dBaseRuntimeInstDir "'+form.project.dBaseRuntimeInstDir+'"')
                 h1.puts('#define dBaseRuntimeInstVer " 0')
              endif

             

              h1.puts('#define dBaseRuntimeDir "'+form.project.dBaseRuntimeDir+'"')

              //J.Kwekkeboom 12/17/2004 - added individual Engine name
              //h1.puts('#define dBaseEngineName "'+form.project.dBASEEngineName+'"')
              h1.puts('#define dBaseBuild "'+form.project.dBaseBuild+'"')

              //J.Kwekkeboom fixed for always the right versionsnumber
              if len(form.project.dBaseVersion)#4
                if len(form.project.dBaseVersion)<4
                   do while len(this.dBaseVersion)<4
                      form.project.dBaseVersion+="0"
                   enddo
                else
                   form.project.dBaseVersion:= left(form.project.dBaseVersion,4)
                endif
              endif
              h1.puts('#define dBaseVersion "'+form.project.dBaseVersion+'"')

              //D.Brooks 12/08/2004 - update version number
              //h1.puts('#define dBaseVersion "2510"')
              //h1.puts('#define dBaseVersion "2220"')

              //J.Kwekkeboom removed in ISG 01/15/2007
              //h1.puts('#define dBDestName "'+form.project.dBDestName+'"')
              //h1.puts('#define SepDestDir "'+form.project.SepDestDir+'"')
              h1.puts('#define BDEGroupEntries "'+form.project.BDEGroupEntries+'"')
              //J.Kwekkeboom removed in ISG 01/15/2007
              //h1.puts('#define BDEVersion "'+form.project.BDEVersion+'"')
              h1.puts('#define dBProgressbar "'+form.project.dBProgressbar+'"')
              h1.puts('#define dBProgressbox "'+form.project.dBProgressbox+'"')
              h1.puts('#define dBSilent "'+form.project.dBSilent+'"')
              //J.Kwekkeboom added in ISG 01/15/2007
              //For support Runtime uninstall on uninstall Application
              //!!Will not called if dBase Original on user machine!!
              h1.puts('#define dBUninstall "true"')
              h1.puts('#define dBDestRuntime "'+form.project.dBDestRuntime+'"')
              h1.puts('#define dBDestBDE "'+form.project.dBDestBDE+'"')
              h1.puts('#define dBMainFile "'+form.project.exename+'"')
              h1.puts('#define DBuac "'+form.project.UACRB+'"')
              //J.Kwekkeboom changed for ISG 01/15/2007
              //h1.puts('#include "'+form.SMFolder+'\Include\dbaseRuntime.txt"')
           
              //Added for support Vista and XP mainifest files
              //Jonny Kwekkeboom 09/03/07
              //"Admin" or "Highest" or "Invoker" or "" (NO Vista)
              //need ISG 1.0.2.3 or higher and Inno 5.1.11 or higher
              //XP Manifest will always be installed automatically (ONLY on XP)
              //Vista Manifest file ONLYon Vista machines
              //Including ALSO for BDEAdmin.exe in all variations!!!!!!!!!!!!
              if form.project.XPLook
                 if form.NOTEBOOK1.INNONOTEBOOK.RBADMIN.Value
                    h1.puts('#define dbVista "Admin"')
                 elseif  form.NOTEBOOK1.INNONOTEBOOK.RBHIGHEST.Value
                    h1.puts('#define dbVista "Highest"')
                 elseif  form.NOTEBOOK1.INNONOTEBOOK.RBINVOKER.Value
                    h1.puts('#define dbVista "Invoker"')
                 else
                    h1.puts('#define dbVista ""')
                 endif
              else
                 h1.puts('#define dbVista ""')
              endif
              //end of Adding lines

              if form.NewIncludeExists

                if I_UNINS_ICONUTIL.value             
                  h1.puts('#define UninsHS "true"')

                  if empty(form.project.UninsHSLanguages)
                     form.project.UninsHSLanguages:="All"
                  endif
                  do case
                     case AT("all",form.project.UninsHSLanguages.tolowercase())>0
                       h1.puts('#define UninsHSLanguages "DE EN IT ES FR"')
                     case AT("JA",form.project.UninsHSLanguages)>0
                       if AT("EN",form.project.UninsHSLanguages)>0
                         form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "")
                           h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                       else
                         form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "EN")
                           h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                       endif
                     otherwise
                        h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                  endcase
                endif
              endif  
              //MsgBox("form.UninsHSExeDir="+form.UninsHSExeDir+" 2")
              h1.puts('#define UninsHSExeDir "'+form.UninsHSExeDir+'"')         
              h1.puts('#include "'+form.dBaseRuntimeInclude+'\dbaseRuntime.inc"')
              h1.puts("")
           endif 
			  //if NOT rb3

           //KK 09/12/2012 - copied from above -- these settings should be include wether or not the Runtime is being installed
           if form.NewIncludeExists

                if I_UNINS_ICONUTIL.value             
                  h1.puts('#define UninsHS "true"')

                  if empty(form.project.UninsHSLanguages)
                     form.project.UninsHSLanguages:="All"
                  endif
                  do case
                     case AT("all",form.project.UninsHSLanguages.tolowercase())>0
                       h1.puts('#define UninsHSLanguages "DE EN IT ES FR"')
                     case AT("JA",form.project.UninsHSLanguages)>0
                       if AT("EN",form.project.UninsHSLanguages)>0
                         form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "")
                           h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                       else
                         form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "EN")
                           h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                       endif
                     otherwise
                        h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                  endcase
                endif
              //MsgBox("form.UninsHSExeDir="+form.UninsHSExeDir+" 2")
              h1.puts('#define UninsHSExeDir "'+form.UninsHSExeDir+'"')         
           //   h1.puts('#include "'+form.dBaseRuntimeInclude+'\dbaseRuntime.inc"')
              h1.puts("")
           endif //new include exists
           ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

           if not form.NewIncludeExists //then Old ISG version 

             //J. Kwekkeboom 01/08/2005 added for UninsHs support...
             if I_UNINS_ICONUTIL.value
                //D.Brooks - 10/03/2005
                if form.SMVersion >= 5154
                   h1.puts('[ISI IncPlugin]')
                else
                   h1.puts('[ISS Include]')
                endif
                //End D.Brooks - 10/03/2005
                h1.puts('#Define ISSI_Support')
                h1.puts('#Define ISSI_AppName AppName')
                h1.puts('#Define ISSI_AppVersion AppVersion')
                h1.puts('#Define ISSI_AppID AppId')
                h1.puts('#Define ISSI_DoNotIncludeLanguagesSection')
                h1.puts('#Define ISSI_UnInsHs "'+form.ToolsUtilitiesFolder+'\Utilities\UninsHS"')
                h1.puts('#Define ISSI_IncludePath "'+form.dBaseRuntimeInclude+'\ISSI\"')
                //J. Kwekkeboom 01/18/2005 added multilanguage support for UninsHs

                if empty(form.project.UninsHSLanguages)
                   form.project.UninsHSLanguages:="All"
                endif
                do case
                   case AT("all",form.project.UninsHSLanguages.tolowercase())>0
                     h1.puts('#define ISSI_UninsHSLanguages "DE EN IT ES FR"')
                   case AT("JA",form.project.UninsHSLanguages)>0
                        if AT("EN",form.project.UninsHSLanguages)>0
                           form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "")
                           h1.puts('#define ISSI_UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                        else
                           form.project.UninsHSLanguages:=;
                           STUFF(form.project.UninsHSLanguages,;
                             AT("JA",form.project.UninsHSLanguages),;
                             2, "EN")
                           h1.puts('#define ISSI_UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                        endif
                   otherwise
                      h1.puts('#define ISSI_UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                endcase
                //****
                h1.puts('#Include "'+form.dBaseRuntimeInclude+'\ISSI\_issi_pro.isi"')
                h1.puts('')
             endif
          endif //not form.NewIncludeExists

           /*

           //J. Kwekkeboom 01/08/2005 removed and changed to ISSI supporting...
        
           h1.puts('[UnInsHs]')
           if I_UNINS_ICONUTIL.enabled
              //added Info for user there also needed ISSI-Pro in Scriptmaker
              //Jonny Kwekkeboom 16/12/2004
              h1.puts(';NOTE: If ISSI-Pro is needed also then set this to false!')
              h1.puts(';      and include entry ISSI_UninsHs in [ISS Include] section!')
              h1.puts('#define UninsHS "'+form.project.UninsHS+'"')
           else
              h1.puts('#define UninsHS "false"')
           endif
           h1.puts('#define UninsHSAppName "'+form.project.AppName+'"')
           h1.puts('#define UninsHSAppId "'+form.project.AppName+'_ID"')

           //removed for get all languages
           //Jonny Kwekkeboom 16/12/2004
           //form.project.UninsHSLanguages:=form.project.dBASELang
           if empty(form.project.UninsHSLanguages)
              form.project.UninsHSLanguages:="All"
           endif
           do case
              case AT("all",form.project.UninsHSLanguages.tolowercase())>0
                   h1.puts('#define UninsHSLanguages "DE EN IT ES FR"')
              case AT("JA",form.project.UninsHSLanguages)>0
                   if AT("EN",form.project.UninsHSLanguages)>0
                      //D.Brooks 11/11/2004 - 3rd parameter of STUFF needs to be numeric
                      //STUFF(form.project.UninsHSLanguages,;
                      //AT("JA",form.project.UninsHSLanguages),;
                      //  "JA", "")
                      form.project.UninsHSLanguages:=;
                      STUFF(form.project.UninsHSLanguages,;
                      AT("JA",form.project.UninsHSLanguages),;
                        2, "")
                      h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                   else
                      //D.Brooks 11/11/2004 - 3rd parameter of STUFF needs to be numeric
                      //STUFF(form.project.UninsHSLanguages,;
                      //AT("JA",form.project.UninsHSLanguages),;
                      //  "JA", "EN")
                      form.project.UninsHSLanguages:=;
                      STUFF(form.project.UninsHSLanguages,;
                      AT("JA",form.project.UninsHSLanguages),;
                        2, "EN")
                       h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
                   endif
              otherwise
                 h1.puts('#define UninsHSLanguages "'+form.project.UninsHSLanguages+'"')
           endcase
           h1.puts('#define UninsHSExeDir "'+form.dBaseRuntimeInclude+'\Utilities\UninsHs"')
           //h1.puts('#include "'+form.dBaseRuntimeInclude+'\Include\UnInsHs.txt"')
           h1.puts("") 
           */
           //end of removing...

           h1.puts("[LangOptions]")
           h1.puts("LanguageCodePage=0")
           h1.puts("")

           h1.puts("[Setup]")
           class::Set_InnoSourceFolder()
           h1.Puts("SourceDir="+form.project.SourceFolder)
           if form.project.iconFileName#"<none>"
              //KK 04/21/2010 added getFullPath
              h1.puts( "SetupIconFile="+form.project.getFullPath(form.project.iconFileName) )
           endif
           h1.puts("AppId={#AppId}")
           h1.puts("AppName={#AppName}")
           h1.puts("AppVersion={#AppVersion}")
           h1.puts("AppVerName={#AppName} Version {#AppVersion}")
           h1.puts("AppCopyright={#AppCopyright}")
           h1.puts("DefaultDirName="+form.project.DestFolder)
           h1.puts("DefaultGroupName={#AppName}")
           h1.puts("PrivilegesRequired=admin")
           h1.puts("ShowLanguageDialog=false")
           h1.puts("VersionInfoVersion={#AppVersion}")
           h1.puts("VersionInfoDescription={#AppName} Setup")
           h1.puts("VersionInfoCompany={#AppCopyright}")
           //added new Setup Versioninfo for copyright must be INNO 5.1.5 !!!
           //D.Brooks - 10/03/2005
           if form.InnoVersion >= 5150
              h1.puts("VersionInfoCopyright={#AppCopyright}")
           endif
           //End D.Brooks 10/03/2005
           h1.puts("VersionInfoTextVersion=Version {#AppVersion}")
           h1.puts("UninstallFilesDir={#AppUninstallDir}")
           //added new Setup Wizard images...
           //D.Brooks - 10/03/2005
           if form.InnoVersion >= 5150
              h1.puts("WizardImageFile=compiler:WizModernImage-IS.bmp")
              h1.puts("WizardSmallImageFile=compiler:WizModernSmallImage-is.bmp")
           endif
           //End D.Brooks 10/03/2005
           h1.puts("")

           h1.puts("[Languages]")
           //J.Kwekkeboom 01/20/2007 - Added if AT( statement for not always include all 
           if AT('en',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 or ;
              Empty(form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)
           h1.puts("Name: en; MessagesFile: compiler:Default.isl"+;
                  iIf(empty(form.project.ENLicense),"","; LicenseFile: "+form.project.ENLicense)+;
                  iIf(empty(form.project.ENBefore),"","; InfoBeforeFile: "+form.project.ENBefore)+;
                  iIf(empty(form.project.ENAfter),"","; InfoAfterFile: "+form.project.ENAfter))
           endif
           if AT('de',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: de; MessagesFile: compiler:Languages\German.isl"+;
                  iIf(empty(form.project.DELicense),"","; LicenseFile: "+form.project.DELicense)+;
                  iIf(empty(form.project.DEBefore),"","; InfoBeforeFile: "+form.project.DEBefore)+;
                  iIf(empty(form.project.DEAfter),"","; InfoAfterFile: "+form.project.DEAfter))
           endif
           //D.Brooks 12/08/2004 - ES, IT, JA now available in ScriptMaker
           if AT('es',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: es; MessagesFile: compiler:Languages\Spanish.isl"+;
                  iIf(empty(form.project.ESLicense),"","; LicenseFile: "+form.project.ESLicense)+;
                  iIf(empty(form.project.ESBefore),"","; InfoBeforeFile: "+form.project.ESBefore)+;
                  iIf(empty(form.project.ESAfter),"","; InfoAfterFile: "+form.project.ESAfter))
           endif
           if AT('it',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: it; MessagesFile: compiler:Languages\Italian.isl"+;
                  iIf(empty(form.project.ITLicense),"","; LicenseFile: "+form.project.ITLicense)+;
                  iIf(empty(form.project.ITBefore),"","; InfoBeforeFile: "+form.project.ITBefore)+;
                  iIf(empty(form.project.ITAfter),"","; InfoAfterFile: "+form.project.ITAfter))
           endif
           if AT('ja',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: ja; MessagesFile: compiler:Languages\Japanese.isl"+;
                  iIf(empty(form.project.JALicense),"","; LicenseFile: "+form.project.JALicense)+;
                  iIf(empty(form.project.JABefore),"","; InfoBeforeFile: "+form.project.JABefore)+;
                  iIf(empty(form.project.JAAfter),"","; InfoAfterFile: "+form.project.JAAfter))
           endif
   //        if not empty(form.project.ESLanguagefile)
   //           cLangAdd+=" es"
   //           h1.puts("Name: es; MessagesFile: "+form.project.ESLanguagefile+;
   //               iIf(empty(form.project.ESLicense),"","; LicenseFile: "+form.project.ESLicense)+;
   //               iIf(empty(form.project.ESBefore),"","; InfoBeforeFile: "+form.project.ESBefore)+;
   //               iIf(empty(form.project.ESAfter),"","; InfoAfterFile: "+form.project.ESAfter))
   //        endif
   //        if not empty(form.project.ITLanguagefile)
   //           cLangAdd+=" it"
   //           h1.puts("Name: it; MessagesFile: "+form.project.ITLanguagefile+;
   //               iIf(empty(form.project.ITLicense),"","; LicenseFile: "+form.project.ITLicense)+;
   //               iIf(empty(form.project.ITBefore),"","; InfoBeforeFile: "+form.project.ITBefore)+;
   //               iIf(empty(form.project.ITAfter),"","; InfoAfterFile: "+form.project.ITAfter))
   //        endif
   //        if not empty(form.project.JALanguagefile)
   //           cLangAdd+=" ja"
   //           h1.puts("Name: ja; MessagesFile: "+form.project.JALanguagefile+;
   //               iIf(empty(form.project.JALicense),"","; LicenseFile: "+form.project.JALicense)+;
   //               iIf(empty(form.project.JABefore),"","; InfoBeforeFile: "+form.project.JABefore)+;
   //               iIf(empty(form.project.JAAfter),"","; InfoAfterFile: "+form.project.JAAfter))
   //        endif

           if AT('fr',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: fr; MessagesFile: compiler:Languages\French.isl"+;
                  iIf(empty(form.project.FRLicense),"","; LicenseFile: "+form.project.FRLicense)+;
                  iIf(empty(form.project.FRBefore),"","; InfoBeforeFile: "+form.project.FRBefore)+;
                  iIf(empty(form.project.FRAfter),"","; InfoAfterFile: "+form.project.FRAfter))
           endif
           if AT('nl',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
           h1.puts("Name: nl; MessagesFile: compiler:Languages\Dutch.isl"+;
                  iIf(empty(form.project.NLLicense),"","; LicenseFile: "+form.project.NLLicense)+;
                  iIf(empty(form.project.NLBefore),"","; InfoBeforeFile: "+form.project.NLBefore)+;
                  iIf(empty(form.project.NLAfter),"","; InfoAfterFile: "+form.project.NLAfter))
           endif
           if AT('dk',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
              h1.puts("Name: dk; MessagesFile: compiler:Languages\Danish.isl"+;
                  iIf(empty(form.project.DKLicense),"","; LicenseFile: "+form.project.DKLicense)+;
                  iIf(empty(form.project.DKBefore),"","; InfoBeforeFile: "+form.project.DKBefore)+;
                  iIf(empty(form.project.DKAfter),"","; InfoAfterFile: "+form.project.DKAfter))
           endif
           if AT('pl',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0
              h1.puts("Name: pl; MessagesFile: compiler:Languages\Polish.isl"+;
                  iIf(empty(form.project.PLLicense),"","; LicenseFile: "+form.project.PLLicense)+;
                  iIf(empty(form.project.PLBefore),"","; InfoBeforeFile: "+form.project.PLBefore)+;
                  iIf(empty(form.project.PLAfter),"","; InfoAfterFile: "+form.project.PLAfter))
           endif 
           h1.puts("")

           if not empty(form.project.Author)
              h1.puts("[Messages]")
              h1.puts("BeveledLabel=Copyright © "+YEAR(Date())+' '+form.project.Author)
              h1.puts("")
           endif
           //QAID: 5254 - D.Brooks - 02/23/2005
           if I_Desktop.value or I_QuickLaunch.value
               h1.puts("[Tasks]")
               // QAID: 6237 - J.Kwekkeboom 04/19/2007
               //- Fix for include only for chosen language
               if I_Desktop.value
                  h1.puts("Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}")

                  // QAID:6398 - 03/18/2008 - Kathy Kolosky
                  // Removed "or" condition that was causing datatype mismatch error
                  if AT('en',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0// "or ;" only works if the first condition is true KK 03/18/08
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: en")
                     h1.puts("Name: desktopicon\common; Description: For all users; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: en")
                  endif
                  if AT('de',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: Nur für aktuellen Benutzer; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: de")
                     h1.puts("Name: desktopicon\common; Description: Für alle Benutzer; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: de")               
                  endif
                  if AT('it',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08
                     h1.puts("Name: desktopicon\user; Description: Solo per l'utente corrente; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: it")
                     h1.puts("Name: desktopicon\common; Description: Per tutti gli utenti; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: it")               
                  endif
                  if AT('es',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: es")
                     h1.puts("Name: desktopicon\common; Description: For all users; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: es")
                  endif
                  if AT('fr',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: fr")
                     h1.puts("Name: desktopicon\common; Description: For all users; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: fr")
                  endif
                  if AT('ja',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: ja")
                     h1.puts("Name: desktopicon\common; Description: For all users; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: ja")
                  endif
                  if AT('nl',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: Alleen voor de huidige gebruiker; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: nl")
                     h1.puts("Name: desktopicon\common; Description: Voor alle gebruikers; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: nl")               
                  endif
                  if AT('pl',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: pl")
                     h1.puts("Name: desktopicon\common; Description: Dla dowolnego u¿ytkownika komputera; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: pl")
                  endif
                  if AT('dk',form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.Value)>0 // "or ;" only works if the first condition is true KK 03/18/08 
                     h1.puts("Name: desktopicon\user; Description: For the current user only; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive Unchecked; Languages: dk")
                     h1.puts("Name: desktopicon\common; Description: For all users; GroupDescription: {cm:AdditionalIcons}; Flags: Exclusive; Languages: dk")
                  endif 
                  // end QAID:6398 - 03/18/2008 - Kathy Kolosky              

               endif
               if I_QuickLaunch.value
                  h1.puts("Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: Unchecked")
               endif
               h1.puts("")
           endif

           // QAID:5570 - 10/28/2005 - Dave Casler
           // Moved cIniFileName here from top of function
           Local i,cSource,cDestDir, cIniFileName


           //D.Brooks 11/24/2004 - only do this section if BDE_UseSettings is selected
           if form.project.BDEUseSettings and;
              (not empty(form.project.BDELangDriver) or;
              not empty(form.project.BDEMaxFileHandle) or;
              not empty(form.project.BDELevel) or;
              not empty(form.project.BDEMemoBlockSize) or;
              not empty(form.project.BDEMDXBlockSize))
              h1.puts("[Registry]")
              h1.puts(";BDE Settings")
              if not empty(form.project.BDELangDriver)
                 for i = 1 to alen(form.bde_langdriver2,1)
                     if form.project.BDELangDriver==form.bde_langdriver2[i,1]
                        h1.puts("Root: HKLM; Subkey: SOFTWARE\Borland\Database Engine\Settings\DRIVERS\DBASE\INIT; ValueType: String; ValueName: LANGDRIVER; ValueData: "+form.bde_langdriver2[i,2]+"; Flags: PreserveStringType DontCreateKey UninsDeleteKeyIfEmpty")
                        exit
                     endif
                 next
              endif
              if not empty(form.project.BDEMaxFileHandle)
                 h1.puts("Root: HKLM; Subkey: SOFTWARE\Borland\Database Engine\Settings\System\INIT; ValueType: String; ValueName: MAXFILEHANDLES; ValueData: "+form.project.BDEMaxFileHandle+"; Flags: PreserveStringType DontCreateKey UninsDeleteKeyIfEmpty")
              endif
              if not empty(form.project.BDELevel)
                 h1.puts("Root: HKLM; Subkey: SOFTWARE\Borland\Database Engine\Settings\DRIVERS\DBASE\TABLE CREATE; ValueType: String; ValueName: LEVEL; ValueData: "+form.project.BDELevel+"; Flags: PreserveStringType DontCreateKey UninsDeleteKeyIfEmpty")
              endif
              if not empty(form.project.BDEMDXBlockSize)
                 h1.puts("Root: HKLM; Subkey: SOFTWARE\Borland\Database Engine\Settings\DRIVERS\DBASE\TABLE CREATE; ValueType: String; ValueName: MDX BLOCK SIZE; ValueData: "+form.project.BDEMDXBlockSize+"; Flags: PreserveStringType DontCreateKey UninsDeleteKeyIfEmpty")
              endif
              if not empty(form.project.BDEMemoBlockSize)
                 h1.puts("Root: HKLM; Subkey: SOFTWARE\Borland\Database Engine\Settings\DRIVERS\DBASE\TABLE CREATE; ValueType: String; ValueName: MEMO FILE BLOCK SIZE; ValueData: "+form.project.BDEMemoBlockSize+"; Flags: PreserveStringType DontCreateKey UninsDeleteKeyIfEmpty")
              endif
              h1.puts("")
           endif

           if form.project.NeedGroup.size > 0 or I_UNINS_ICON.value
              local cGroup,cFile,cWorkingDir
              cGroup=""
              cFile=""
              cWorkingDir=""
              h1.puts("[Icons]")
              for i = 1 to form.project.NeedGroup.size
                  cGroup:=substr(form.project.NeedGroup[i],1,AT(">",form.project.NeedGroup[i])-1)
                  cFile:=ltrim(substr(form.project.NeedGroup[i],AT(">",form.project.NeedGroup[i])+2))
                  cWorkingDir:=left(cFile,rat("\",cFile)-1)
                  h1.puts("Name: "+cGroup+"; Filename: "+Trim(cFile)+"; WorkingDir: "+cWorkingDir)
              next

              //J.Kwekkeboom 14/02/2005 - added Desktop and Quicklaunch support
              if I_Desktop.value
                 cFile=form.project.GetShortName(form.project.exeName)
                 h1.Puts('Name: {commondesktop}\{#AppName}; Filename: {app}\'+cFile+;
                         '; WorkingDir: {app}; IconFilename: {app}\'+cFile+;
                         '; Tasks: desktopicon\common')
                 h1.Puts('Name: {userdesktop}\{#AppName}; Filename: {app}\'+cFile+;
                         '; WorkingDir: {app}; IconFilename: {app}\'+cFile+;
                         '; Tasks: desktopicon\user')
              endif
              if I_QuickLaunch.value
                 cFile=form.project.GetShortName(form.project.exeName)
                 h1.Puts('Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\{#AppName}; Filename: {app}\'+cFile+;
                         '; WorkingDir: {app}; IconFilename: {app}\'+cFile+;
                         '; Tasks: quicklaunchicon')
              endif

              if I_UNINS_ICON.value
                 h1.puts("#if 'false' == UninsHS")
                 //added for can also be defined in ISSI-Pro!
                 //Jonny Kwekkeboom 12/16/2004
                 if not form.NewIncludeExists //Old ISG support
                   h1.puts("    #ifndef ISSI_UninHs")
                   h1.puts("        Name: {group}\{cm:UninstallProgram,{#AppName}}; Filename: {uninstallexe}")
                   h1.puts("    #endif")
                 else
                   h1.puts("  Name: {group}\{cm:UninstallProgram,{#AppName}}; Filename: {uninstallexe}")                
                 endif
                 h1.puts("#endif")
              endif
           endif
           h1.puts("")

           if form.project.NeedDirs.size>0
              h1.puts("[Dirs]")
              for i = 1 to form.project.NeedDirs.size
                  h1.puts("Name: "+form.project.NeedDirs[i]+"; Flags: UninsAlwaysUninstall")
              next
              h1.puts("")
           endif

           // Needed to detect right Standard INI file name and Destdir

           // QAID:5570 - 10/28/2005 - Dave Casler
           // Set the ini file default name in the "{app}\" directory
           //cIniFileName=substr(form.project.exeName,1,len(form.project.exeName)-3)+'ini'
           cSource = form.project.exeName

           //form.project.inioption = 1 Standard 2 Raming 3 none
           if form.project.inioption = 1
             cIniFileName := "{localappdata} \"
           else if form.project.inioption = 2
             cIniFileName := '{userappdata}'
           else cIniFileName := '{app}'
           endif
         
           cIniFileName += form.project.getShortNameWithOutExt(cSource)
           cIniFileName += ".ini"

           // msgbox("Msg01:cIniFileName = "+cIniFileName)
           // end QAID:5570

			  h1.puts("[Files]")
			  //KK 03/25/2015 - add rumtime installer to temp directory listing in Files
			  if rb1.value
				  h1.puts("; dBASE Runtime Installer")
				  h1.puts([Source: "]+form.project.dBASERuntimeInstDir+["; DestDir: "{tmp}"; Flags: ignoreversion deleteafterinstall])
			  else
				//msgBox("rb1.value = "+rb1.value)
			  endif
			  
			  if ckbdeonlyinstall.value
				  h1.puts("; BDE Only Installer")
				  h1.puts([Source: "]+form.project.bdeinstallfile+["; DestDir: "{tmp}"; Flags: ignoreversion deleteafterinstall])
			  endif
			  
			  if form.project.BDEAlias.size > 0
              //QAID: 5255 - D.Brooks - 02/24/2005
              //if form.project.NeedFiles.size = 0 and not form.project.XPLook
              //   h1.puts("[Files]")
              //endif
              h1.puts(";BDE Settings")
              //J.Kwekkeboom 08/12/2012 - Changed name for new Include folder so ISG dont needed
              if form.NewIncludeExists
                h1.puts("Source: "+form.ToolsUtilitiesFolder+"\Utilities\BDE\AddAlias.exe; DestDir: {tmp}; DestName: dBase_AddAlias.exe")
              else
                //J.Kwekkeboom 01/19/2007 - Changed destination name to new ISG and actual Folder name
                h1.puts("Source: "+form.ToolsUtilitiesFolder+"\Utilities\BDE\AddAlias.exe; DestDir: {tmp}; DestName: ISG_AddAlias.exe")
                //D.Brooks 11/30/2004 - Script change from Jonny
                //h1.puts("Source: "+form.SMFolder+"\BDE\AddAlias.exe; DestDir: {tmp}; DestName: SM_AddAlias.exe")
                //h1.puts("Source: "+form.SMFolder+"\BDE\AddAlias.exe; DestDir: {tmp}")
              endif
				  
              h1.puts("")

//              Local cRootEntry,cEndEntry,cText,cDestDir,cAlias,cDriver,cAll,cQuotes
//
//              cText=form.qLang.iGetText('Install BDE Alias')
//              //J.Kwekkeboom 08/12/2012 - Changed name for new Include folder so ISG dont needed
//              if form.NewIncludeExists
//                cRootEntry='Filename: {tmp}\dBase_AddAlias.exe; Parameters: """'             
//              else
//                //J.Kwekkeboom 01/19/2007 - Changed destination name to new ISG
//                cRootEntry='Filename: {tmp}\ISG_AddAlias.exe; Parameters: """'
//                //D.Brooks 11/30/2004 - Script change from Jonny
//                //cRootEntry='Filename: {tmp}\SM_AddAlias.exe; Parameters: """'
//                //cRootEntry='Filename: {tmp}\AddAlias.exe; Parameters: """'
//              endif
//              cEndEntry='"""; WorkingDir: {tmp}; StatusMsg: '+cText+'; Flags: SkipIfDoesntExist'
//              cDestDir=""
//              cDriver=""
//              cAlias=""
//              cAll=""
//              cQuotes='"" ""'
//              for i=1 to form.project.BDEAlias.size
//                  cAll:=form.project.BDEAlias[i]
//                  cDestDir:=Substr(cAll,AT("Folder:",cAll)+7)
//                  cDestDir:=Substr(cDestDir,1,AT(";",cDestDir)-1)
//                  cDestDir:=ltrim(trim(cDestDir))
//                  cDriver:=Substr(cAll,AT("Driver:",cAll)+7)
//                  cDriver:=Substr(cDriver,1,AT(";",cDriver)-1)
//                  cDriver:=lTrim(trim(cDriver))
//                  cAlias:=Substr(cAll,AT("Alias:",cAll)+6)
//                  cAlias:=Substr(cAlias,1,AT(";",cAlias)-1)
//                  cAlias:=ltrim(trim(cAlias))
//                  h1.puts(cRootEntry+cAlias+cQuotes+cDestDir+cQuotes+cDriver+cEndEntry)
//              next
//              h1.puts("")
            endif  //BDE alias in [Files] section
			  
           if form.project.NeedFiles.size>0

              Local cProjSource  // QAID:5614 - 11/01/2005 - Dave Casler

              
              class::Set_InnoSourceFolder()
				
              for i=1 to form.project.NeedFiles.size
                 cSource=rtrim(substr(form.project.NeedFiles[i],1,AT(">",form.project.NeedFiles[i])-1))

              
                 //KK - 04/13/2010 - use full path for inni list
                 // inno script generator will not be able to recognize
                 // :sourceAlias: and there may be issues with relative
                 // paths
                 cSource = class::checkSourceAlias(cSource)
                 cSource = form.Project.getFullPath(cSource)
                 
                 //dBase headerfiles dont be deployed...
                 if right(cSource.toUppercase(),2)==".H"
                    loop
                 endif


                 // QAID:5614 - 11/01/2005 - Dave Casler
                 // Fix problem when project path is a substring of another
                 // source path as in following example:
                 // - Project Source Path = c:\myapp\main
                 // - This Source Path = c:\myapp\main-test\data
                 // If the "\" is not included in the compare, then the
                 // resulting cSource = "-test\data" instead of the full path
                 cProjSource := Lower(form.project.SourceFolder) + "\"
                 
                 // msgbox("Msg101:cSource = "+cSource+"  ProjectSource: = "+cProjSource)

                 if left(Lower(cSource),Len(cProjSource)) == cProjSource
                    // This path matches the project source path, so make this
                    // file's source relative to the project source path by
                    // removing the project source path from this path
                    cSource:=substr(cSource,len(cProjSource)+1)

                    // msgbox("Msg102:cSource = "+cSource)

                    if left(cSource,1)="\"
                       cSource:=substr(cSource,2)
                    endif
                 endif

                 // msgbox("Msg103:cSource = "+cSource)
                 // end QAID:5614

                 cDestDir="DestDir: {app}"
                 if AT(">>",form.project.NeedFiles[i])>0
                    cDestDir:=ltrim(substr(form.project.NeedFiles[i],AT(">",form.project.NeedFiles[i])+2))
                    //than missing text for Destdir here!
                    //fixed 10/14/2005 J. Kwekkeboom
                    if AT("DestDir:",cDestDir)=0
                       cDestDir:="DestDir: "+cDestDir
                    endif
                 endif
                 if cSource==form.project.exeName
                    //D.Brooks - 09/27/2005
                    //cIniFileName:=cDestDir+"\"+form.project.getShortNameWithOutExt(cSource)+'.ini'
                    //cIniFileName:="{app}\"+form.project.getShortNameWithOutExt(cSource)+'.ini'


                    // QAID:5570 - 10/28/2005 - Dave Casler
                    //--- 10/28/2005 - New Code from J.Kwekkeboom ---
                    // This code should handle the case where the exe an ini file
                    // need to be in a sub-folder of {app}
                    Local index

                    // msgbox("Msg02:cIniFileName = "+cIniFileName)

                    cIniFileName := cDestDir
                    // msgbox("Msg03:cIniFileName = "+cIniFileName)

                    index = AT("DestDir:",cIniFileName)
                    if index>0
                       // "DestDir:" found, so get the remaining string to
                       // the right and remove any left blanks
                       cIniFileName := ltrim(Substr(cIniFileName,index+8))
                    endif
                    // msgbox("Msg04:cIniFileName = "+cIniFileName)

                    index = AT(';',cIniFileName)
                    if index>0
                       // ';' found means Flags found, so get substring before
                       // the ';'  and Flags and remove any right blanks
                       cIniFileName := rtrim(substr(cIniFileName,1,index-1))
                    endif
                    // msgbox("Msg05:cIniFileName = "+cIniFileName)

                    if right(cIniFileName,1) # '\'
                       // There is no '\' on the right, so add one
                       cIniFileName += '\'
                    endif
                    // msgbox("Msg06:cIniFileName = "+cIniFileName)

                    cIniFileName += form.project.getShortNameWithOutExt(cSource)
                    cIniFileName += ".ini"
                    // msgbox("Msg07:cIniFileName = "+cIniFileName)

                    // end QAID:5570
                 endif

                 if not empty(cSource)
                    if at("flags:",cDestDir.toLowercase())=0
                       if at(".mdx",cSource.toLowercase())=0 and;
                          at(".dbf",cSource.toLowercase())=0 and;
                          at(".dbt",cSource.toLowercase())=0
                          h1.puts("Source: "+cSource+"; "+cDestDir+"; Flags: IgnoreVersion")
                       else
                          h1.puts("Source: "+cSource+"; "+cDestDir+"; Flags: OnlyIfDoesntExist")
                       endif
                    else
                       h1.puts("Source: "+cSource+"; "+cDestDir)
                    endif
                 endif
              next
              h1.puts("")
           endif
        
           //03-09-2007 XP Maonfest can completed removed !!
           //Not more needed so Vista/XP support in new property dbVista
           /*
           //New XP Manifestfile
           //QAID: 5255 - D.Brooks - 02/24/2005
           //if RB1.Value
           if form.project.XPLook
              form.project.CreateXPManiFest()
              if form.project.NeedFiles.size = 0
                 h1.puts("[Files]")
              endif
              h1.puts(";XP-Style support")
              //cSource="Source: "+_app.sourceAliases[ "Samples" ]+'\PlusRun.exe.manifest'
              cSource = "Source: " + form.project.sourceFolder + "\PLUSrun.exe.manifest"
              //cSource += "; DestDir: {app}; MinVersion: 0,5.01.2600"
              cSource+="; DestDir: {code:GetRuntimeFolder}; MinVersion: 0,5.01.2600; Check: dBExist"
              h1.puts(cSource)
              h1.puts("")
           endif
           //endif
           */
           

//            if form.notebook1.INICOMBO.value == "STANDARD" or form.notebook1.INICOMBO.value == "ROAMING"
//              // QAID:5570 - 10/28/2005 - Dave Casler
//              // Path is added to cIniFileName in code above
//              cIniFileName := "Filename: "+cIniFileName
//              // msgbox("Msg99:cIniFileName = "+cIniFileName)
//              // QAID:5570
//              //form.project.inioption = 1 Standard 2 Raming 3 none
//              h1.puts("[INI]")
//              h1.puts(cIniFileName+'; Section: Toolbars; Flags: UninsDeleteSection')
//              h1.puts(cIniFileName+'; Section: Toolbars; Key: Standard; String: 0')
//              h1.puts(cIniFileName+'; Section: Toolbars; Key: StandardFloat; String: 0')
//              h1.puts(cIniFileName+'; Section: Toolbars; Key: StandardStyle; String: 0')
//              h1.puts(cIniFileName+'; Section: Desktop; Flags: UninsDeleteSection')
//              h1.puts(cIniFileName+'; Section: Desktop; Key: Maximized; String: 0')
//              h1.puts(cIniFileName+'; Section: Desktop; Key: StatusBar; String: 0')
//              h1.puts(cIniFileName+'; Section: CommandWindow; Flags: UninsDeleteSection')
//              h1.puts(cIniFileName+'; Section: CommandWindow; Key: Open; String: 0')
//              //added to make sure deolist is added to the ini file 
//              //KK 10/23/2012
//              if form.project.DEOList.size>0
//              nObjPath = 0
//                 for i = 1 to form.project.DEOList.size
//                     DEOLib = substr(form.project.DEOlist[i],3)
//                     if not empty( DEOLib )
//                        h1.puts(cIniFileName+'; Section: ObjectPath; Key: objPath'+nObjPath+'; String: '+DEOLib)
//                     endif
//                     nObjPath++
//                 next
//              endif
//              //D.Brooks - 09/28/2005
//              if form.project.INIErrorHandling
//                 h1.puts(cIniFileName+'; Section: ErrorHandling; Flags: UninsDeleteSection')
//                 h1.puts(cIniFileName+'; Section: ErrorHandling; Key: ErrorTrapFilter; String: '+form.project.INITrap)
//              endif
//              //End D.Brooks - 09/28/2005
//              if form.project.ININoBDE
//                 h1.puts(cIniFileName+'; Section: DataEngine; Flags: UninsDeleteSection')
//                 h1.puts(cIniFileName+'; Section: DataEngine; Key: DefaultEngine; String: None')
//              endif
//              if form.project.INNOINI //if using default ini 
//                 h1.puts(cIniFileName+'; Section: AppTheme; Flags: UninsDeleteSection')
//                 h1.puts(cIniFileName+'; Section: AppTheme; Key: Type; String: '+form.project.INIAppthemeType)
//              endif
//              if form.project.INNOINI //if using default ini 
//                 h1.puts(cIniFileName+'; Section: Tools; Flags: UninsDeleteSection')
//                 h1.puts(cIniFileName+'; Section: Tools; Key: LargeButtons; String: '+iif(form.project.INILargeButtons,1,0))
//              endif
//              
//				  h1.puts("")
//				  
//				  //J.Kwekkeboom added new so if createing INI we deleted also on uninstall always..
//              //08/12/2012
//              h1.puts("[UninstallDelete]")
//              h1.puts("Type: files; Name: "+cIniFileName)
//              h1.puts("")
//            endif  //ini 
				  
			  //KK 03/25/2015 - adding [RUN] sectionhere
			  
			  if rb1.value OR ckbdeonlyinstall.value OR Form.project.BDEAlias.size > 0
				  h1.puts("[RUN]")
			  endif

			  
			  if form.project.BDEAlias.size > 0

			  Local cRootEntry,cEndEntry,cText,cDestDir,cAlias,cDriver,cAll,cQuotes

              cText=form.qLang.iGetText('Install BDE Alias')
              //J.Kwekkeboom 08/12/2012 - Changed name for new Include folder so ISG dont needed
              if form.NewIncludeExists
                cRootEntry='Filename: {tmp}\dBase_AddAlias.exe; Parameters: """'             
              else
                //J.Kwekkeboom 01/19/2007 - Changed destination name to new ISG
                cRootEntry='Filename: {tmp}\ISG_AddAlias.exe; Parameters: """'
                //D.Brooks 11/30/2004 - Script change from Jonny
                //cRootEntry='Filename: {tmp}\SM_AddAlias.exe; Parameters: """'
                //cRootEntry='Filename: {tmp}\AddAlias.exe; Parameters: """'
              endif
              cEndEntry='"""; WorkingDir: {tmp}; StatusMsg: '+cText+'; Flags: SkipIfDoesntExist'
              cDestDir=""
              cDriver=""
              cAlias=""
              cAll=""
              cQuotes='"" ""'
              for i=1 to form.project.BDEAlias.size
                  cAll:=form.project.BDEAlias[i]
                  cDestDir:=Substr(cAll,AT("Folder:",cAll)+7)
                  cDestDir:=Substr(cDestDir,1,AT(";",cDestDir)-1)
                  cDestDir:=ltrim(trim(cDestDir))
                  cDriver:=Substr(cAll,AT("Driver:",cAll)+7)
                  cDriver:=Substr(cDriver,1,AT(";",cDriver)-1)
                  cDriver:=lTrim(trim(cDriver))
                  cAlias:=Substr(cAll,AT("Alias:",cAll)+6)
                  cAlias:=Substr(cAlias,1,AT(";",cAlias)-1)
                  cAlias:=ltrim(trim(cAlias))
                  h1.puts(cRootEntry+cAlias+cQuotes+cDestDir+cQuotes+cDriver+cEndEntry)
              next
			  endif
			  				
			  if ckbdeonlyinstall.value
			     if FILE(form.project.bdeinstallfile)
					  //KK currently only installing to default dir without user interaction
					  cRunFileName = RIGHT(form.project.bdeinstallfile,LEN(form.project.bdeinstallfile) - RAT("\",form.project.bdeinstallfile))
					  cFileRun = [Filename: {tmp}\]+cRunFileName+[; Parameters: /S; StatusMsg: "Installing dBASE Runtime and BDE..."; Flags: runascurrentuser; WorkingDir: {tmp};]
					  h1.puts(cFileRun)	
					else
					   form.qlang.iMsgbox("File not found: "+form.project.bdeinstallfile,"")
					endif	
			  endif
			  
			  
			  if rb1.value				     
				  cRunFileName = RIGHT(form.project.dBaseRuntimeInstDir,LEN(form.project.dBaseRuntimeInstDir) - RAT("\",form.project.dBaseRuntimeInstDir))
				  cFileRun = [Filename: {tmp}\]+cRunFileName
				  if c1.cb3.value OR NOT EMPTY(form.project.dbDestRuntime) OR NOT EMPTY(form.project.dBDestBDE)  //silent OR runtimepath included or BDE path included
					  cFileRun += [; Parameters: "]
					  if c1.cb3.value //Silent
						  cFileRun += [/S ]
					  endif
					  //MsgBox("dbDestRuntime and dbDestBDE " + form.project.dbDestRuntime + " : " + form.project.dbDestBDE) //KK msgbox
					  if NOT EMPTY(form.project.dbDestRuntime) //runtime directory set manually
							cFileRun += [/X ""]+form.project.dbDestRuntime+["" ]
					  endif
					  if NOT EMPTY(form.project.dBDestBDE) //bde direrctory set manually
						  cFilerun += [/V COMMONBDEDIR ""]+form.project.dBDestBDE+["" ]
					  endif
					  cFilerun += [ /done "; StatusMsg: "Installing dBASE Runtime and BDE..."; Flags: runascurrentuser; WorkingDir: {tmp};]
				  endif
				  h1.puts(cFileRun)
			  endif
			  
			  h1.puts(" ")
			  
			  if (form.notebook1.INICOMBO.value == "STANDARD" or form.notebook1.INICOMBO.value == "ROAMING") ;
			      AND form.notebook1.innonotebook.inicheck.value = true //if not checked don't add any ini settings
              // QAID:5570 - 10/28/2005 - Dave Casler
              // Path is added to cIniFileName in code above
              cIniFileName := "Filename: "+cIniFileName
              // msgbox("Msg99:cIniFileName = "+cIniFileName)
              // QAID:5570
              //form.project.inioption = 1 Standard 2 Raming 3 none
              h1.puts("[INI]")
              h1.puts(cIniFileName+'; Section: Toolbars; Flags: UninsDeleteSection')
              h1.puts(cIniFileName+'; Section: Toolbars; Key: Standard; String: 0')
              h1.puts(cIniFileName+'; Section: Toolbars; Key: StandardFloat; String: 0')
              h1.puts(cIniFileName+'; Section: Toolbars; Key: StandardStyle; String: 0')
              h1.puts(cIniFileName+'; Section: Desktop; Flags: UninsDeleteSection')
              h1.puts(cIniFileName+'; Section: Desktop; Key: Maximized; String: 0')
              h1.puts(cIniFileName+'; Section: Desktop; Key: StatusBar; String: 0')
              h1.puts(cIniFileName+'; Section: CommandWindow; Flags: UninsDeleteSection')
              h1.puts(cIniFileName+'; Section: CommandWindow; Key: Open; String: 0')
              //added to make sure deolist is added to the ini file 
              //KK 10/23/2012
              if form.project.DEOList.size>0
              nObjPath = 0
                 for i = 1 to form.project.DEOList.size
                     DEOLib = substr(form.project.DEOlist[i],3)
                     if not empty( DEOLib )
                        h1.puts(cIniFileName+'; Section: ObjectPath; Key: objPath'+nObjPath+'; String: '+DEOLib)
                     endif
                     nObjPath++
                 next
              endif
              //D.Brooks - 09/28/2005
              if form.project.INIErrorHandling
                 h1.puts(cIniFileName+'; Section: ErrorHandling; Flags: UninsDeleteSection')
                 h1.puts(cIniFileName+'; Section: ErrorHandling; Key: ErrorTrapFilter; String: '+form.project.INITrap)
              endif
              //End D.Brooks - 09/28/2005
              if form.project.ININoBDE
                 h1.puts(cIniFileName+'; Section: DataEngine; Flags: UninsDeleteSection')
                 h1.puts(cIniFileName+'; Section: DataEngine; Key: DefaultEngine; String: None')
              endif
              if form.project.INNOINI //if using default ini 
                 h1.puts(cIniFileName+'; Section: AppTheme; Flags: UninsDeleteSection')
                 h1.puts(cIniFileName+'; Section: AppTheme; Key: Type; String: '+form.project.INIAppthemeType)
              endif
              if form.project.INNOINI //if using default ini 
                 h1.puts(cIniFileName+'; Section: Tools; Flags: UninsDeleteSection')
                 h1.puts(cIniFileName+'; Section: Tools; Key: LargeButtons; String: '+iif(form.project.INILargeButtons,1,0))
              endif
              
				  h1.puts(" ")
				  
				  //J.Kwekkeboom added new so if createing INI we deleted also on uninstall always..
              //08/12/2012
              h1.puts("[UninstallDelete]")
              h1.puts("Type: files; Name: "+cIniFileName)
              h1.puts("")
            endif  //ini 
				  
			   h1.puts(" ")	
            h1.puts("[_EndOfScript]")
            //J.Kwekkeboom 08/12/2012 - Changed name for new Include folder so ISG dont needed
            if form.NewIncludeExists
              h1.puts("; © dBase Portions by Jonny Kwekkeboom © 2002-"+Year(date()))           
            else
              h1.puts("; © HiSoft2000 http://www.Hisoft2000.de Mail: HiSoft2000@HiSoft2000.de © 2002-"+Year(date()))         
            endif
            h1.puts("; Visual dBase, dB2K, dBase SE and dBase Plus © dataBased Intelligence.Inc Homepage: http://www.databi.com/")
            h1.puts("; dQuery for Delphi,C++,dBASE PLUS © dataBased Intelligence.Inc see also Homepage: http://www.dQuery.com/")
            h1.puts("")
            if not RB3.value
               //Need for call runtime include file....
               h1.puts("[Code]")
               if I_DISPGROUPATEND.value
                  h1.puts("var FinishedInstall: Boolean;")
                  h1.puts("")
                  h1.puts("procedure InitializeWizard();")
                  h1.puts("begin")
                  h1.puts("  FinishedInstall:= false")
                 h1.puts("end;")
                  h1.puts("")
               endif
               h1.puts("procedure CurPageChanged(CurPageID: Integer);")
               h1.puts("begin")
               //J.Kwekkeboom 01/18/2007 - Changed for new ISG adding
               //h1.puts("   #if 'true' == SM_dBASERuntime")
               //h1.puts("      if CurPageID=wpReady Then")
               //h1.puts("          CalldBASERuntimeSetup;")
               //h1.puts("   #endIf")
               h1.Puts("  dBase_CurPageChanged(CurPageID); {INFO: Added for dBase Runtime start}")

               if I_DISPGROUPATEND.value
                  h1.puts("  if CurPageID = wpFinished then FinishedInstall:= True;")
               endif

               if not form.NewIncludeExists //old ISG support
                 //J.Kwekkeboom 01/18/2005 added for Uninshs removed to ISSI
                 if I_UNINS_ICONUTIL.value
                    h1.puts("  #ifdef ISSI_Support")
                    h1.puts("     IssiCurPageChanged(CurPageID);")
                    h1.puts("  #endif")
                 endif
               endif

               h1.puts("end;")
               h1.puts("")
            else
               if I_DISPGROUPATEND.value or;
                  I_UNINS_ICONUTIL.value
                  //Need if user want display program group at end of setup....
                  h1.puts("[Code]")
                  if I_DISPGROUPATEND.value
                     h1.puts("var FinishedInstall: Boolean;")
                     h1.puts("")
                     h1.puts("procedure InitializeWizard();")
                     h1.puts("begin")
                     h1.puts("  FinishedInstall:=false")
                     h1.puts("end;")
                     h1.puts("")
                  endif
                  h1.puts("procedure CurPageChanged(CurPageID: Integer);")
                  h1.puts("begin")
                  if I_DISPGROUPATEND.value
                     h1.puts("  if CurPageID = wpFinished then FinishedInstall:= True;")
                  endif
                  if not form.NewIncludeExists //old ISG support
                    //J.Kwekkeboom 01/18/2005 added for Uninshs removed to ISSI
                    if I_UNINS_ICONUTIL.value
                       h1.puts("  #ifdef ISSI_Support")
                       h1.puts("     IssiCurPageChanged(CurPageID);")
                       h1.puts("  #endif")
                    endif
                  endif
                  h1.puts("end;")
                  h1.puts("")
               endif
            endif
            if I_DISPGROUPATEND.value or;
               I_UNINS_ICONUTIL.value
               h1.puts("procedure DeInitializeSetup( );")
               if I_DispGroupAtEnd.value
                  h1.puts("var ErrorCode: Integer;")
               endif
               h1.puts("begin")
               if I_DispGroupAtEnd.value
                  h1.puts("  if FinishedInstall then")
                  h1.puts("    #if VER >= 0x05000100")
                  h1.puts("      ShellExec('open',ExpandConstant('{group}'),'',ExpandConstant('{group}'), SW_SHOWNORMAL, ewNoWait, ERRORCODE);")
                  h1.puts("    #else")
                  h1.puts("      InstShellExec(ExpandConstant('{group}'), '', '', SW_SHOWNORMAL, ERRORCODE);")
                  h1.puts("    #endIf")
               endif
               if not form.NewIncludeExists //old ISG support
                 //J.Kwekkeboom 01/18/2005 added for Uninshs removed to ISSI
                 if I_UNINS_ICONUTIL.value
                    h1.puts("  #ifdef ISSI_Support")
                    h1.puts("     ISSIDeInitializeSetup();")
                    h1.puts("  #endIf")
                 endif
               endif
               h1.puts("end;")
               h1.puts("")
            endif
            //added for let Setup.exe not double started by enduser
            //J.Kwekkeboom 12/16/2004
            h1.puts("function InitializeSetup(): Boolean;")
            h1.puts("var S: String;")
            h1.puts("begin")
            h1.Puts(" (** Create a Mutex so we can not double call this Setup.exe file **)")
            h1.Puts("  S:='{#AppName}';")
            h1.puts("  Result:= true;")
            h1.puts("  if CheckForMutexes(S+'_SetupMutex')=false")
            h1.puts("  then Createmutex(S+'_SetupMutex')")
            if form.NewIncludeExists 
              h1.puts("  else Result:=False;")
            else
              h1.puts("  else begin")
              h1.puts("     Result:=False;")
              h1.puts("     Exit;")
              h1.puts("  end;")
              //J.Kwekkeboom 01/18/2005 added for Uninshs removed to ISSI
              if I_UNINS_ICONUTIL.value
                 h1.puts("  #ifdef ISSI_Support")
                 h1.puts("     Result := ISSIInitializeSetup();")
                 h1.puts("     if not Result then exit;")
                 h1.puts("  #endif")
              endif
            endif
            h1.Puts("end;")

            //J.Kwekkeboom 01/18/2007 - Added for Runtime Uninstall support
            h1.puts("")
            h1.puts("#ifdef dBaseRuntimeInstDir")    //KK 09/12/2012 added for when runtime installer isnot included
            h1.puts("procedure DeinitializeUninstall();")
            h1.puts("begin")
            h1.puts("  dBase_DeinitializeUninstall();  (** INFO: Added for dBase Runtime uninstall **)")
            h1.puts("end;")
            h1.puts("#endif")

            //J.Kwekkeboom 02/05/2005 - Added for XP-Style Support
            //if RB1.Value
            if form.project.XPLook
               h1.puts("")
               h1.puts("function dBExist(): Boolean;")
               h1.puts("var ResultStr: String;")
               h1.puts("begin")
               h1.puts("  Result:=false;")
               if form.project.dBPlus
                  h1.puts("  if RegQueryStringValue(HKLM,'SOFTWARE\dBASE\PLUS\series10','RuntimePath',ResultStr) then")
               else
                  h1.puts("  if RegQueryStringValue(HKLM,'SOFTWARE\dBASE\dB2K\0.1','RuntimePath',ResultStr) then")
               endif
               h1.puts("     Result:=true;")
               h1.puts("end;")
               h1.puts("")
               h1.puts("function GetRuntimeFolder(Default: String): String;")
               h1.puts("var ResultStr: String;")
               h1.puts("begin")
               h1.puts("   Result:='{app}';")
               if form.project.dBPlus
                  h1.puts("  if RegQueryStringValue(HKLM,'SOFTWARE\dBASE\PLUS\series10','RuntimePath',ResultStr) then")
               else
                  h1.puts("  if RegQueryStringValue(HKLM,'SOFTWARE\dBASE\dB2K\0.1','RuntimePath',ResultStr) then")
               endif
               h1.puts("     Result:=ResultStr")
               h1.puts("end;")
            endif
            //endif
            //h1.puts("[/Code]")  //not needed anymore
            h1.close()
            // now make a backup of the old project file and rename the temp file
            if file(cFileName)
               x=rat("\",cFileName)
               if x>0
                  backupFileName = left(cFileName,x) + form.qLang.iGetText("Backup of ") + substr(cFileName,x+1)
               else
                  backupFileName = form.qLang.iGetText("Backup of ") + cFileName
               endif
               if file(backupFileName)
                  erase (backupFileName)
               endif
               rename (cFileName) to (backupFileName)
            endif
            //D.Brooks 11/22/2004 - try/catch in case directory is invalid
            try
               rename (cTF) to (cFileName)
            catch(exception e)
               form.qlang.iMsgbox("Could not save, make sure script path is correct","")
               return
            endtry
            form.notebook1.innonotebook.I_ScriptGenerate.enabled:=false
            //D.Brooks 11/15/2004 - Update script text
            form.notebook1.innonotebook.I_ScriptText.text = form.qLang.iGetText("Script has been updated.")
            form.ScriptIsGenerate:=TRUE
            I_ScriptName.value:=cFilename
            form.project.InnoScriptname:=cFilename
            class::Freeze()
            I_SCRIPT.value:=class::I_EditorText(form.project.InnoScriptname)
            class::UnFreeze()
         endwith
			
      endif //lContinue
      
      return

   function I_ScriptName_But_onClick
      local cFileName
      cFilename=form.project.InnoScriptname
      if empty(cFilename)
         cFileName:= putFile(form.qLang.iGetText("New Inno script"),form.ISGDefaultFolder+"\*","iss")
      else
         cFileName:= putFile(form.qLang.iGetText("New Inno script"),cFilename,"iss")
      endif
      if empty(cFileName)
         return
      endif
      form.project.InnoScriptname:=cFilename
      // QAID:5771 - 06/05/2006 - Dave Casler
      // Add test to check if the specified script output folder exists
      class::CheckRightFolder()
      form.notebook1.innonotebook.I_SCRIPTNAME.value:=form.project.InnoScriptname
      //D.Brooks 12/01/2004 - update to reflect the change
      class::I_UpdateValues()
      form.notebook1.innonotebook.I_SCRIPTTEXT.text = form.qLang.iGetText("Script has not been updated.")
      return

   function I_ScriptName_onChange
      if right(this.value.ToLowercase(),4)#".iss"
         form.qLang.iMsgBox("Wrong extension (%1)","Attention",16,"ISS")
         this.setfocus()
         return
      endif
      form.project.InnoScriptname:=this.value
      form.project.Modified:= true
      // QAID:5771 - 06/05/2006 - Dave Casler
      // Add test to check if the specified script output folder exists
      class::CheckRightFolder()
      return

   function I_SourceFolder_onChange
      form.project.SourceFolder:= this.value
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:= true
      return

   //D.Brooks 11/24/2004
   //method to update values that a new script needs to be generated
   //and the project has changed.

   function I_UpdateValues
      form.ScriptIsGenerate:=false
      form.project.Modified:=true
      //activate the generate script menu item & button
      if not form.notebook1.webapp.value
         form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=not form.ScriptIsGenerate
      endif
      //J.Kwekkeboom 03/09/2007 added for Vista Manifest
      form.NOTEBOOK1.INNONOTEBOOK.RBADMIN.enabled:=   form.notebook1.innonotebook.cb_xp.value
      form.NOTEBOOK1.INNONOTEBOOK.RBHIGHEST.enabled:= form.notebook1.innonotebook.cb_xp.value
      form.NOTEBOOK1.INNONOTEBOOK.RBINVOKER.enabled:= form.notebook1.innonotebook.cb_xp.value
      return
		

   function open
      form.qvsplitter1.left := form.SplitterLeft
      form.SplitterDropped()
      return super::open()
		

   function form_onOpen

      form.startProject = form.cProjectFileName
      if not empty(form.startProject) and ;
         upper(substr(form.startProject,1,8)) # 'UNTITLED'

         if not form.loadProject(form.startProject)
           class::newProject()
         endif
      endif
      // M.Kay - Test Change 11/4/2004
      //if file(form.Project.getFullPath(form.Project.exename)) and;
      //   not form.project.webApplication
      if not form.project.webApplication
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO","Inno"}'
         class::Set_InnoSourceFolder()
      else
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO"}'
      endif
      form.treeview1.tRoot.select()
      class::treeview1_onChange()
      form.Project.SetAllBDE()

      // QAID: 6409 - Changes for Personal dBASE - M.Kay, 04/08/2008
      if "PERSONAL"$upper(version())
         with this.NOTEBOOK1
            DEOAPPLICATIONCHECK.enabled    := false
            WEBAPP.enabled                 := false
            TEXTLABEL7.colorNormal         := "graytext/BtnFace"
            EXENAME.enabled                := false
            BUT_SEL_EXE.enabled            := false

            TEXTLABEL8.colorNormal         := "graytext/BtnFace"
            DEOFOLDERS.enabled             := false
            DEOTARGET.enabled              := false
            BUT_SEL_DEOFOLDER.enabled      := false
            BUT_DEOCLEAR.enabled           := false
            TEXT1.colorNormal              := "graytext/BtnFace"

            FILENOTEBOOK.DEOOBJECT.enabled := false
            FILENOTEBOOK.DEOTARGET.enabled := false
         endwith

         DisableInnoNotebook( this.NOTEBOOK1.INNONOTEBOOK )

         this.root.BUILD.DEPLOY.enabled := false

      endif

      // M.Kay - TEST - 07/16/2013
      //form.ROOT.ROOT_OnInitMenu()

      return true

   function SplitterDropped
      form.Freeze()
      form.Resizer.SplitterDropped()
      form.UnFreeze()
      form.RePaint()
      return true

   //------------------ Method: form_onSize ----------------------------//
   // Purpose, resizes form

   function form_onSize(nSizeType, nWidth, nHeight)
      if nSizeType = 0 or nSizeType = 2
         form.onSize = null
         //form.Freeze()
         //KK 05/07/2013 - when form is closing it's onSize fires but, in form's onClose event the resizer is released
         try
            form.Resizer.resizeForm(nSizeType, nWidth, nHeight)
         catch (exception e)
         endtry
         //form.unFreeze()
         //form.rePaint()
         form.onSize = class::form_onSize
      endif
      return true

   function BUT_SEL_EXE_onClick
      LOCAL fn
      cDefExeName = ""
      if not empty(form.notebook1.projectname.value)
         cDefExeName = trim(form.notebook1.projectName.value)+'.exe'
      endif
      fN=putfile("Executable File Name",cDefExeName,".exe",true,'.exe')
      if empty(fN)
        return
      endif
      form.notebook1.exename.value = fN
      class::exeName_onChange()
      return

   function BUT_SEL_LOGFILE_onClick
      LOCAL fn
      cDefLogName = ""
      if not empty(form.notebook1.projectname.value)
         cDefLogName = trim(form.notebook1.projectName.value)+'.txt'
      endif
      fN=putfile("Log File Name",cDefLogName,".txt",true,'.txt')
      if empty(fN)
        return
      endif
      form.notebook1.logfilename.value = fN
      class::logFileName_onChange()
      return

   function DEOAPPLICATIONCHECK_onChange
      if this.value
         if form.Verbose
            // If they have second thoughts
            if form.qLang.iMsgBox('All program files except >Main< will be marked >External< and %1 will not be packaged into the program executable. Continue?','Build Change',36,""+chr(13)) # 6
               this.value = false
               return false
            endif
         endif

         form.updateDEOFiles(true)

      else
         if form.Verbose
            // If they have second thoughts
            if form.qLang.iMsgBox('All program files will be marked to be included within the executable %1 Continue?','Not DEO',36,""+chr(13)) # 6
               this.value = true
               return false
            endif
         endif

         form.updateDEOFiles(false)
      endif

      if type('form.currentFileObject') = 'O'
         form.notebook1.fileNotebook.fileIncluded.value = form.currentFileObject.included
         form.notebook1.fileNotebook.DEOObject.enabled = not form.currentFileObject.included
      endif

      form.project.deoOption = this.value
      form.project.Modified := true

      return true

   function BUTTON_CLOSE_onLeftMouseDown(flags, col, row)
      this.borderStyle = 2
      return

   function BUTTON_CLOSE_onLeftMouseUp(flags, col, row)
      //Changed MJR 02/06/2013 - 1 to 3 (none)
      this.borderstyle = 3
      form.close()
      return

   function BUTTON_NEW_onLeftMouseDown(flags, col, row)
      this.borderStyle = 2
      return

   function BUTTON_NEW_onLeftMouseUp(flags, col, row)
      class::newProject()
      //Changed MJR 02/06/2013 - 1 to 3 (none)
      this.borderstyle = 3
      return

   function BUTTON_SAVE_onLeftMouseDown(flags, col, row)
      this.borderstyle = 2
      return

   function BUTTON_SAVE_onLeftMouseUp(flags, col, row)
      class::saveProject()
      class::form_onSize(2, form.Width, form.Height)
      //D.Brooks 11/11/2004 - bNew3 replaced in merge
      //Changed MJR 02/06/2013 - 1 to 3 (none)
      this.borderstyle = 3
      //form.bNew3.borderStyle:= 1
      return

   function CB2_onChange
      with form.notebook1.innonotebook.c2
        if empty(CB2.value)
           if empty(EF1.value)
              form.project.SepDestDir:="{app}"
              CB2.value:="{app}\"
           else
              form.project.SepDestDir:=class::DelBackSlash(EF1.value)
           endif
        else
           form.project.SepDestDir:=class::DelBackSlash(CB2.value)+"\"+class::DelBackSlash(EF1.value)
        endif
        //D.Brooks 11/24/2004 - use method instead
        class::I_UpdateValues()
//        form.project.modified:=true
//        form.ScriptIsGenerate:=false
      endwith
      return

   function CB4_onChange
      with form.notebook1.innonotebook.c1
        EF1.enabled:=this.value
        EF2.enabled:=this.value
        //D.Brooks 11/17/2004 - change color of labels
        if this.value
            TL1.colorNormal = "black/BtnFace"
            TL2.colorNormal = "black/BtnFace"
        else
            TL1.colorNormal = "gray/BtnFace"
            TL2.colorNormal = "gray/BtnFace"
        endif
        if this.value
           form.project.dBDestRuntime:="{app}"
           form.project.dBDestBDE:="{cf}\Borland\BDE"
           EF1.value:=form.project.dBDestRuntime
           EF2.value:=form.project.dBDestBDE
        else
           EF1.value:=""; form.project.dBDestRuntime:=""
           EF2.value:=""; form.project.dBDestBDE:=""
        endif
      endwith

      return

   function DESCRIPTION_onChange
      form.project.Description := this.value
      form.project.Modified := true
      return

   function Set_InnoSourceFolder
   Local cPath
     if not empty(form.NOTEBOOK1.INNONOTEBOOK.I_SOURCEFOLDER.value)
        return
     endif
     //D.Brooks 11/24/2004 - get full path
     cPath=form.project.getFullPath(form.NOTEBOOK1.MAINFILENAME.value)
     cPath=left(cPath,rat("\",cPath)-1)
     form.NOTEBOOK1.INNONOTEBOOK.I_SOURCEFOLDER.value:=cPath
     form.project.SourceFolder:=cPath

   function ExeName_onChange
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.project.Modified:= true
//      form.ScriptIsGenerate:=false
      // form.currentFileObject.exeName := form.notebook1.exename.value
      //form.notebook1.exename.value := ltrim(trim(form.notebook1.exename.value))
      form.project.exename:= ltrim(trim(form.notebook1.exename.value))

      //D.Brooks 11/10/2004 - Let inno tab be visible if no exe built
      //if file(form.Project.getFullPath(form.Project.exename)) and;
      //   not form.project.webApplication
      if not form.project.webApplication
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO","Inno"}'
         //D.Brooks 11/18/2004 - only do if already empty
         if empty(form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value)
            form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value:=form.Project.getShortNameWithOutExt(form.Project.getFullPath(form.Project.exename))
            form.project.AppName:=form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value
            form.project.UninsHSAppName:=form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value
         endif
         class::Set_InnoSourceFolder()
      else
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO"}'
      endif
      return

   function FILEINCLUDED_onChange
      // add the changed information to the tree item and the contents array
      form.currentFileObject.Included := form.notebook1.filenotebook.fileIncluded.value
      form.notebook1.fileNotebook.DEOObject.enabled = not form.currentFileObject.included
      form.notebook1.fileNotebook.DEOTarget.enabled = form.notebook1.fileNotebook.DEOObject.value

      //J.Kwekkeboom 12/18/2004 - also need than in Inno files
      class::SetAllFilesToInno()

      form.project.Modified := true
      return

   function FILENAME_onChange
      local fn
      fn = trim(this.value)
      if file(form.Project.getFullPath(fn))
         class::fileSelected(fn)
         return
      endif
      form.qLang.iMsgbox("Invalid Filename","Cannot Complete",16)
      this.onLostFocus = {;this.value = form.currentFileObject.filename;this.onLostFocus=null}
      return

   function FILENOTEBOOK_canSelChange(nNewSel)
      local bCanChange
      bCanChange = true
      //form.oMouse.setCursor(11)

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor.beginWait()
      hourglass(true, _app.FrameWin.hWnd)
      //End QAID: 5176

      do case
      case nNewSel = 1    // file Details
         class::assignValidDeoTargets()
      case nNewSel = 2    // source view
        do case
        case form.TreeView1.selected.typ = 'H'
           bCanChange = true
        case form.currentFileObject.canBeEdited = true
           class::endSourceEdit()
           class::newEditFile()
           form.notebook1.fileNotebook.structureGrid.visible = false
           form.notebook1.fileNotebook.sourceViewer.visible = true
           form.notebook1.fileNotebook.sourceViewer.datalink = "file "+;
               form.editFile
        case form.currentFileObject.FileType = ".DBF"  or form.currentFileObject.filetype = ".DB"
           bCanChange = false
        otherwise
          // the tab cannot be used for non-editable files
           bCanChange = false
        endcase
      otherwise               // forms or report viewer
        // test if the current file can be displayed in the viewer
        do case
        case form.TreeView1.selected.typ = 'H'
           bCanChange = true
        case upper(form.currentFileObject.Designer) = "FORM"
          class::startFormViewer()
        case upper(form.currentFileObject.Designer) = "REPORT" or ;
             upper(form.currentFileObject.designer) = 'LABEL'
          class::startReportViewer()
        case upper(form.currentFileObject.Designer) = 'IMAGE'
          class::startImageViewer()
        case form.currentFileObject.FileType = ".DBF"  or form.currentFileObject.filetype = ".DB"
           class::endStructureDisplay()
           form.notebook1.fileNotebook.sourceViewer.visible = false
           form.notebook1.fileNotebook.structureGrid.visible = true
           class::newStructureDisplay()
        otherwise
          // can't be opened if not a form
           bCanChange = false
        endcase
      endcase
      //form.oMouse.resetCursor()

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor.endWait()
      hourGlass(false)
      //End QAID: 5176
      return bCanChange

   function newEditFile()
      LOCAL h1, cFN
      // to show the source files a temp file is used
      if form.editFile = null
         form.editFile = funique("prj?????.txt")
         h1=new file()
         h1.create(form.editFile)
         h1.close()
      endif
      cFN = form.project.getFullPath(form.currentFileObject.FileName)
      if not file(cFN)
        return
      endif
      form.LastEditFile:=cFN
      set safety off
      copy file (cFN) to (form.EditFile)
      set safety on
      return

   function endSourceEdit()
      // close, release and delete any temporary source-edit file
      try
        form.notebook1.fileNotebook.sourceViewer.datalink= null
      catch ( exception e )
      endtry
      if file (form.editfile)
        erase (form.editFile)
        form.editFile = null
      endif
      return

   Function newStructureDisplay()
      form.notebook1.fileNotebook.tlNoReportView.visible := false
      // display the structure of the current file if type dbf
      try
          // do this with xdml
          select select()
          use (form.currentFileObject.fileName)
          if empty(form.structureFile)
            form.structureFile = funique("prjst???.dbf")
          endif
          copy to (form.structureFile) structure extended
          use
          form.structureFileQuery = new query()
          form.structureFileQuery.sql = "select * from '"+form.structureFile+"'"
          form.structureFileQuery.active = true
          form.notebook1.fileNotebook.structureGrid.datalink = form.structureFileQuery.rowset
       catch ( exception e )
       endtry
       return

   function endStructureDisplay()
       if type("form.structureFileQuery") = "O"
         form.structureFileQuery.active = false
       endif
       if file(form.structureFile)
         erase (form.structureFile)
         form.structureFile = null
       endif
       form.notebook1.fileNotebook.structureGrid.visible = false
       form.notebook1.fileNotebook.structureGrid.datalink = ""
       return

   function startImageViewer
      // If a form is already being viewed, close it.
      form.notebook1.fileNoteBook.FormViewer1.closeCurrentForm()
      form.notebook1.fileNotebook.tlNoReportView.visible := false
      // open the form in the viewer
      form.notebook1.fileNotebook.formViewer1.visible = false
      form.notebook1.fileNotebook.imageViewer.visible = true
      //D.Brooks 11/11/2004 - make sure file exists before opening it
      try
         form.notebook1.fileNotebook.imageViewer.dataSource = 'FILE '+form.project.getFullpath(form.currentFileObject.filename)
         form.notebook1.fileNoteBook.setFocus()
      catch(exception e)
      endtry
      return

   function endImageViewer
      form.notebook1.fileNotebook.imageViewer.visible = false
      form.notebook1.fileNotebook.imageViewer.dataSource = null

   function startFormViewer()
      form.notebook1.fileNotebook.tlNoReportView.visible := false
      // If a form is already being viewed, close it.
      // ONLY if file changed inside treeview1 !! (Jonny)
      if form.LastViewFile==trim(form.currentFileObject.FileName)
      else
         form.notebook1.fileNoteBook.FormViewer1.closeCurrentForm()
      endif

      // open the form in the viewer
      form.notebook1.fileNotebook.formViewer1.visible = true
      if form.LastViewFile==trim(form.currentFileObject.FileName)
      else
         form.notebook1.fileNoteBook.FormViewer1.display(form.currentFileObject.FileName)
         form.LastViewFile:=form.currentFileObject.FileName
      endif
      form.notebook1.fileNoteBook.setFocus()
      return

   function EndFormViewer
      try
        //QAID: 5319 - D.Brooks - 04/11/2005
        //if form.LastViewFile==trim(form.currentFileObject.FileName)
        //else
           form.notebook1.fileNotebook.FormViewer1.closeCurrentForm()
        //endif
        //end QAID: 5319
      catch(exception e)
        //form.currentFileObject not defined...
      endtry
      form.notebook1.fileNotebook.formViewer1.visible = false
      return

   function startReportViewer
      // If a report is already being viewed, close it.
      form.notebook1.fileNoteBook.reportViewer1.filename = ""
      form.notebook1.fileNotebook.reportViewer1.visible = true

      // open the report in the viewer
      try
        form.notebook1.fileNoteBook.reportViewer1.filename = form.currentFileObject.Filename
        form.notebook1.fileNotebook.tlNoReportView.visible := false
      catch ( exception e )
        msgbox(e.message,form.qLang.iGetText('Cannot View'),16)
        form.notebook1.fileNotebook.tlNoReportView.visible := true
      endtry
      form.notebook1.fileNoteBook.setFocus()
      return

   function endReportViewer()
      form.notebook1.fileNotebook.reportViewer1.fileName = ""
      form.notebook1.fileNotebook.reportViewer1.visible = false
      form.notebook1.fileNotebook.tlNoReportView.visible := false
      return

   function form_canClose
      if not class::checkSave()
         return false
      endif
      // Make sure to kill circular reference
      if type('form.project') = 'O'
         form.project.form = null
      endif
      return true

   function form_onClose
      LOCAL hNew, hCurrent, cCurrPath, cNewPath, bIniExists, i
      PRIVATE e, cSafety
      form.Ini.setValue("Preferences","ShowProjectsLogo",''+form.ShowProjectsLogo)

      form.Ini.setValue("Position","Top",''+max(form.Top,0))
      form.Ini.setValue("Position","Left",''+max(form.Left,0))
      form.Ini.setValue("Position","Height",''+max(form.Height,MIN_HEIGHT))
      form.Ini.setValue("Position","Width",''+max(form.Width,MIN_WIDTH))
      form.Ini.setValue("Position","Splitter",''+max(form.qVSplitter1.left,MIN_SPLITLEFT))

      form.Ini.setValue('MRU',"MRU1",form.aMRU[1])
      form.Ini.setValue('MRU',"MRU2",form.aMRU[2])
      form.Ini.setValue('MRU',"MRU3",form.aMRU[3])
      form.Ini.setValue('MRU',"MRU4",form.aMRU[4])
      form.Ini.setValue('MRU',"MRU5",form.aMRU[5])

      form.Ini.flush()

      // M.Kay - Added cleanup for coreini object
      form.Ini.release()
      form.Ini = null


//      ////////////////// Write ini file
//      //store current "set safety" settings so deletes will not be verbose
//      cSafety = set("SAFETY")
//      set safety off
//
//
//      // Set up paths for both new and current .ini files
//      cCurrPath  = _app.sourceAliases["ProjExp"]+"\projexp.ini"
//      cNewPath   = _app.sourceAliases["ProjExp"]+"\temp.ini"
//
//      // Set up the file object for the -current- inifile
//      hCurrent = new file()
//
//
//      // default var to see if there is ini file
//      bIniExists = true
//
//      Try
//
//         // try to open current ini file
//         hCurrent.open(cCurrPath)
//
//      catch( exception e)
//
//         bIniExists = false
//         // do nothing, this has failed
//
//      endTry
//
//
//      // If the temp.ini exists, delete it
//
//      if file(cNewPath)
//
//         dele file (cNewPath)
//
//      endif
//
//
//
//      // Try to create a new temp file
//      try
//
//
//         hNew  = new File()
//         hNew.create(cNewPath)
//
//      catch(exception e)
//
//         // if it cannot create temp ini file,
//         // no reason to continue
//         hCurrent.close()
//         hCurrent = null
//         hNew = null
//         return false
//
//      endTry
//
//
//      hNew.puts('[Position]')
//      hNew.puts('Top='+form.top)
//      hNew.puts('Left='+form.left)
//      hNew.puts('Width='+form.width)
//      hNew.puts('Height='+form.height)
//      hNew.puts('')
//
//      // Put in the ini header
//      hNew.puts('[MRU]')
//
//     // Put in the ini items
//      for i = 1 to 5
//         hNew.puts('MRU'+i+'='+form.aMRU[i])
//      next
//
//      // If the original ini file exists, bring over everything BUT
//      // the MRU items
//
//      if bIniExists
//         do while not hCurrent.eof()
//            cRecord = hCurrent.gets()
//
//            // if there is no reference to MRU in the item
//            if at('MRU',cRecord) = 0 and ;
//               upper(cRecord) # '[POSITION]' and ;
//               substr(upper(cRecord),1,4) # "TOP=" and ;
//               substr(upper(cRecord),1,5) # "LEFT=" and ;
//               substr(upper(cRecord),1,6) # "WIDTH=" and ;
//               substr(upper(cRecord),1,7) # "HEIGHT="
//               hNew.puts(cRecord)
//            endif
//
//         enddo
//      endif
//
//      // Close all open files
//      hNew.close()
//      if bIniExists
//         hCurrent.close()
//      endif
//      hNew = null
//      hCurrent = null
//
//
//
//      try
//         // If current exists, delete it
//         if bIniExists
//            dele file (cCurrPath)
//
//         endif
//
//         // Rename temp to projexp.ini
//         rename (cNewPath) to (cCurrPath)
//
//      catch(exception e)
//
//         // silent, no action
//      endTry
//
//      if file(cNewPath)
//         dele file (cNewPath)
//      endif
//
//      set safety &cSafety.

      // if all is ok then delete the old ini and rename the new one
      // Put it in a try...catch in case file is readonly

      if (type("form.tBar") == "O") and (not empty(form.tBar)) and;
                            (not empty(form.tBar.form))
         try
            form.tBar.detach(form)
         catch(exception e)
            // Ignore any error from detach.
         endTry
      endIf

      // M.Kay - cleanup before releasing toolbar
      // Upgraded Toolbar class does not have any events yet.
      // It should have onUpdate() and beforeRelease() events

      //KK 04/01/2013
      //make sure form.tBar is still an object before calling beforeRelease
      //it's possible the toolbar is closed at this point.
      if type("form.tBar") == "O"
         form.tBar.beforeRelease()
      endif

      form.tBar = null

      e = form.save.exact
      set exact &e.
      e = form.save.fullpath
      set fullpath &e.

      form.mainPopup.form = null

      class::endFormViewer()
      if file(form.editFile)
         class::endSourceEdit()
      endif
      class::endStructureDisplay()

      form.notebook1.logEditor.datalink = null

      // Clean up orphaned file
      if file('_._x' )
         dele file _._x
      endif

      // Close any tables opened for browsing
      use in 200
      select select()

      if form.cTalk = "ON"
         set talk on
      else
         set talk off
      endif


      // Resizer object has a form reference!
      form.Resizer.release()

      return

   function form_BeforeRelease

      form.popupMenu = null

      form.menuFile  = ""

      // Resizer object has a form reference!
      //form.Resizer.release()
      form.CloseProcs()
      return

   function form_onDrop(nLeft, nTop, cType, cName)
      class::checkDropped(cType,cName)
      return false

   function FORM_OnGotFocus
      class::checkToolBar()
      set talk off
      return true

   function onLostFocus
      if form.cTalk = "ON"
         set talk on
      else
         set talk off
      endif
      return true

   function clearForm()
      form.customProject = ""         // unused
      form.project.Modified := false
      form.currentContentsNo = 0      // No of the last file displayed
      form.currentFileObject = null   // the current form.contents object

      form.mainFilesList=new array()
      form.mainFilesList.add("<none>")
      form.project.MainFileName = ""

      form.iconFilesList=new array()
      form.iconFilesList.add("<none>")
      form.splashFilesList=new array()
      form.splashFilesList.add("<none>")

      form.notebook1.iconFileName.datasource = "array form.iconFilesList"
      form.notebook1.splashFileName.datasource = "array form.splashFilesList"
      form.notebook1.mainFileName.datasource = "array form.mainFilesList"
      form.notebook1.deoFolders.datasource = "array form.project.deoList"

      class::buildTree()
      form.notebook1.projectName.value = ""
      form.notebook1.mainFileName.value = "<none>"
      form.notebook1.Author.value = ""
      form.notebook1.logFileName.value = ""
      form.notebook1.exeName.value = ""
      form.notebook1.iconFileName.value = "<none>"
      form.notebook1.splashFileName.value = "<none>"
      form.notebook1.webapp.value = false
      form.notebook1.description.value = ""

      with form.notebook1
        store "" to projectName.value,;
        Author.value,logFileName.value,;
        exeName.value,description.value
        store "<none>" to mainFileName.value,;
              iconFileName.value,splashFileName.value
        webapp.value:= false
      endwith

      with form.notebook1.Innonotebook
         //D.Brooks 12/01/2004 - enabled script buttons/menu items & show Inno tab
         form.notebook1.innonotebook.I_ScriptGenerate.enabled:=true
         form.notebook1.innonotebook.I_SCRIPTCALLSM.enabled:=true
         Local TransText1,TransText2
         TransText1=form.qLang.iGetText("Project")
         TransText2=form.qLang.iGetText("File Details")
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+TransText1+'","'+TransText2+'","Log","DEO","Inno"}'
         I_AppName.value:=form.Project.getShortNameWithOutExt(form.Project.getFullPath(form.Project.exename))
         //D.Brooks 11/12/2004 - shouldn't change project values here because then
         //loading will not work right.
         //form.project.AppName:=form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value
         //form.project.UninsHSAppName:=form.NOTEBOOK1.INNONOTEBOOK.I_APPNAME.value
         store "" to  I_Sourcefolder.value,;
               I_DestFolder2.value,I_DestFolder3.value,I_DestFolder4.value,I_DirSubFolder2.value,;
               I_FilesSubFolder.value,I_DirSubFolder_lBox.dataSource,;
               I_FilesSubFolder_lBox.dataSource
         //D.Brooks 11/17/2004 - set up defaults
         form.project.BDEAlias=new Array()
         Alias_LBox.dataSource:= NULL
         Alias_LBox.dataSource:="Array form.project.BDEAlias"
         store "{app}\" to I_DirSubFolder1.value
         store form.DestChoices[2] to I_DestFolder1.value
         //store "Program Files\" to I_DestFolder1.value
         store "'ascii' ANSI" to BDE_LangDriver.value
         store "7" to BDE_Level.value
         store "1024" to BDE_MemoBlockSize.value
         //D.Brooks 11/22/2004 - Update the defaults
         BDE_MAXFILEHANDLE.value = 255
         BDE_MDXBLOCKSIZE.value = 1024
         //D.Brooks 11/24/2004 - Add BDE_UseSettings checkbox
         BDE_UseSettings.value = false
         BDE_MaxFileHandle.enabled = false
         BDE_LangDriver.enabled = false
         BDE_Level.enabled = false
         BDE_MemoBlockSize.enabled = false
         BDE_MDXBlockSize.enabled = false

         I_Version.value:="1.0.0.0"
         I_FILESSUBFOLDER.value:="{app}"
         //D.Brooks 11/12/2004 - Set_InnoSourceFolder changes project values,
         //just clear the field instead
         form.NOTEBOOK1.INNONOTEBOOK.I_SOURCEFOLDER.value:=""
         //class::Set_InnoSourceFolder()
         RB3.Value:=true
         //D.Brooks 12/22/2004 - dBASEEngineName replaced with dBASERuntimeDir
         //KK (08/20/2012) - replaced dBASERuntimeDir with dBaseRuntimeInstDir
         C1.I_DBEngineName.value:=form.Project.dBASERuntimeInstDir
         //C1.I_DBEngineName.value:=form.Project.dBASEEngineName
      endwith

      form.notebook1.cursel = 1
      form.NotePage = 1
      return

   function IconFileName_onChange
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.project.Modified := true
//      form.ScriptIsGenerate:=false
      form.project.iconFileName := this.value
      return

   function BuildTree
     LOCAL FolderIcon, OpenFolderIcon, holdLoading,cExDll
     Local nCurrentTop,nCurrentWidth

     FolderIcon = "resource Foldr45a "+form.ExplorerDllFile
     OpenFolderIcon = "resource Foldr45b "+form.ExplorerDllFile

     /*
     //cExDll=Space(1)+_app.sourceAliases[ "ProjExp" ]+"\ProjExp.dll"
     if val(form.project.dBaseBuild)>=1759
        //let display new suported 256 color icons...
        FolderIcon = "filename :ProjExp:Foldr45a.ICO"
        OpenFolderIcon = "filename :ProjExp:Foldr45b.ICO"
     else
        FolderIcon = "filename :ProjExp:Foldr45a.ICO"
        OpenFolderIcon = "filename :ProjExp:Foldr45b.ICO"
     endif
     */
     nCurrentTop = form.treeview1.top
     nCurrentWidth = form.treeview1.width
     form.bLoading = true
     if type('form.treeview1.troot') = 'O'
        //form.treeview1.troot = null
        form.treeview1.troot.select()
     endif

     form.treeview1.tRoot = new treeItem(form.treeview1)
     form.treeview1.tRoot.text = form.qLang.iGetText("Project Files")

     //form.treeview1.tRoot.image := "filename :ProjExp:Project.ico"//BMM workaround for QAID 4798
     //form.treeview1.tRoot.selectedImage := "filename :ProjExp:Project.ico"
     form.treeview1.tRoot.image = "resource Project "+form.ExplorerDllFile
     form.treeview1.tRoot.selectedImage = "resource Project "+form.ExplorerDllFile
     form.treeview1.tRoot.Typ = "H"

     form.treeFileTypes = new array()

     //class::addFileType("Forms", FolderIcon, openFolderIcon,"Form")
     class::addFileType("Forms", "Resource PRF1 "+form.ExplorerDllFile,"Resource PRF2 "+form.ExplorerDllFile,"Form")
     class::addFileType("Reports", FolderIcon, openFolderIcon,"Report")
     //class::addFileType("Progs", FolderIcon, openFolderIcon,"Program")
     class::addFileType("Progs", "Resource PRP1 "+form.ExplorerDllFile,"Resource PRP2 "+form.ExplorerDllFile,"Program")
     class::addFileType("Tables", FolderIcon, openFolderIcon,"Desktop Tables")
     class::addFileType("SQL", FolderIcon, openFolderIcon,"SQL")
     class::addFileType("Datamodule", FolderIcon, openFolderIcon,"Datamodule")
//     class::addFileType("Graphic", FolderIcon, openFolderIcon,"Graphic")

//     class::addFileType("Graphic","filename :ProjExp:PRA.ico","filename :ProjExp:PRB.ico","Graphic")
     class::addFileType("Graphic","Resource PRA "+form.ExplorerDllFile,"Resource PRB "+form.ExplorerDllFile,"Graphic")

     class::addfileType("DLL/OCX",FolderIcon, openFolderIcon,'DLL/OCX')
     class::addFileType("Other", FolderIcon, openFolderIcon,"Other")
     form.treeview1.tRoot.expanded = true
     form.bLoading = false
     form.treeview1.troot.select()
     form.tCount = 0     // to apply unique names for branches later

     return

   function BUT_DEOCLEAR_onClick
      LOCAL n
      n = form.notebook1.deoFolders.cursel
      // incomplete we need to check if any files are still assigned to this target
      if not empty(n)
        for i = 1 to alen(form.project.contents)
          if form.project.contents[i].deoLibNo = ltrim(str(n-1,1))
             form.qLang.iMsgbox("Target Folder cannot be removed because there are still files assigned to it","Cannot Remove",16)
             return
          endif
        next
        form.project.deoList[n] = ltrim(str(n-1)) + "="
      endif
      form.notebook1.deoFolders.datasource = "array form.project.deoList"
      form.project.modified := true
      return

   function BUT_FILE_SELECT_onClick
      // select a specific file to replace an existing one
      // for example if the file is in the project-file but no
      // longer available
      local fNam
      fNam=class::CheckSourceAlias(form.currentFileObject.filename)
      if empty(fNam)
         fNam:="*.*"
      endif
      fNam:=getfile(fNam)
      if empty(fNam)
        return
      endif
      class::fileSelected(fNam)
      return

   function ReplaceInnofile(cOrig,cfn)
   Local i,cDestDir
     if cOrig=form.NOTEBOOK1.MAINFILENAME.value
        cOrig=Substr(cOrig,1,rat(".",cOrig))+"exe"
        cFn=Substr(cFn,1,rat(".",cFn))+"exe"
     endif
     for i=1 to form.project.NeedFiles.size
         if at(cOrig.toLowercase(),form.project.Needfiles[i])>0
            cDestDir=substr(form.project.Needfiles[i],AT(">>",form.project.Needfiles[i]))
            form.project.Needfiles[i]:=cfn+" "+cDestDir
            exit
         endif
     next
   return

   function FileSelected(fn)
      // a file was selected either using the files dialog or entering the name
      // directly
      LOCAL x, ext, oGroup, oPos
      form.project.Modified := true
      class::ReplaceInnofile(form.currentFileObject.FileName,fn)
      form.currentFileObject.FileName := fn

      x=rat("\",fn)
      if x > 0
        shortName = substr(fn,x+1)
      else
        shortname = fn
      endif

      form.currentFileObject.Shortname := shortName

      // determine the file type
      x=rat(".",shortName)
      if x > 0
        ext = upper(substr(shortName,x))
      else
        ext = ""
      endif
      form.currentFileObject.FileType :=  ext

      oGroup = form.currentFileObject.FileGroup

      // determine if the file selected is in the same group
      // reset all other properties
      form.project.setFileProperties(form.currentFileObject)
      if oGroup <> form.currentFileObject.FileGroup
         // the file selected belongs to another group
         // remove the old branch
         // removing a branch will cause the onChange event of the treeview to fire
         // this messes everything up, so we switch it off here
         form.bLoading = true
         oPos = form.treeview1.selected.contentsNo
         form.treeview1.selected.release()
         form.treeview1.onChange = class::treeview1_onChange
         current = class::addFileToTree(form.currentFileObject, oPos)
         current.select()
         class::showFileInfo(form.currentFileObject)
      else
          oC = form.currentFileObject
          t = oC.tree
          t.Text = shortName
          class::showFileInfo(oC)
      endif
      // set marker for main program

      form.bLoading = false
      return

   function BUT_SEL_DEOFOLDER_onClick
      LOCAL fn, n
      fN=getDirectory()
      if empty(fN)
        return
      endif
      local n
      n = form.notebook1.deoFolders.cursel
      if empty(n)
        n = 1
      endif
      form.project.deoList[n] = ltrim(str(n-1)) + "=" +fN
      form.notebook1.deoTarget.value = fN
      form.notebook1.deoFolders.datasource = "array form.project.deoList"
      form.notebook1.deoFolders.cursel = n
      form.project.Modified := true
      class::assignValidDeoTargets()
      return

   function addFileType(cN, cI, csI, cT)
     LOCAL l
     // make a branch for a fileType heading
     form.treeFileTypes.add(new treeItem(form.treeview1.tRoot, "t"+cN))
     l=alen(form.treeFileTypes,1)   // saves typing
     form.treeFileTypes[l].text = form.qLang.iGetText(cT)
     form.treeFileTypes[l].image = cI
     form.treeFileTypes[l].selectedImage = cSI
     form.treeFileTypes[l].Typ = "H"      // heading
     return

   function TREEVIEW1_onChange
      if form.bLoading
         return false
      endif
      //form.oMouse.setCursor(11)

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor.beginWait()
      hourGlass(true, _app.FrameWin.hWnd)
      //End QAID: 5176

      class::releaseAllViewers()

      if form.treeview1.selected.typ = "H"    // a heading branch
        if form.notebook1.cursel = form.nBFilesPage
          form.notebook1.cursel = 1
        endif
        form.currentContentsNo = 0
        form.currentFileObject = null
        form.notebook1.fileNotebook.visible := false
        form.NOTEBOOK1.NODETAILSTEXT.visible := true
      else
        form.NOTEBOOK1.NODETAILSTEXT.visible := false
        form.notebook1.fileNotebook.visible := true
        // determine the position in the contents array
        form.currentContentsNo = form.treeview1.selected.ContentsNo
        form.currentFileObject = form.project.contents[form.currentContentsNo]
        class::showFileInfo(form.currentFileObject)
      endif
      /*
      if form.treeview1.selected.typ = "H"    // a heading branch
        // dont display the files details page if a heading line has focus
        if form.notebook1.cursel = form.nBFilesPage
          form.notebook1.cursel = 1
        endif
        form.currentContentsNo = 0
        form.currentFileObject = null
      else
        // determine the position in the contents array
        form.currentContentsNo = form.treeview1.selected.ContentsNo
        form.currentFileObject = form.project.contents[form.currentContentsNo]
        class::showFileInfo(form.currentFileObject)
      endif
      */

      form.notebook1.fileNotebook.canselchange(form.notebook1.fileNotebook.cursel)
      form.treeview1.setFocus()
      //form.oMouse.resetCursor()

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor.endWait()
      hourGlass(false)
      //End QAID: 5176

      return true

   function releaseAllViewers
        // when the file changes then all viewers must first be released
        // Viewers also released if a build command is issued to free the datalinked files
        class::endSourceEdit()
        class::endFormViewer()
        class::endImageViewer()
        class::endReportViewer()
        class::endStructureDisplay()
      return

   function CheckSourceAlias(cFN)
      if pcount()=0
         return ""
      endif
      Local cFile, cSourceAlias
      cFile=ltrim(trim(cFN))
     
      if empty(cFile)
         return cFile
      endif

      if left(cFile,1)=":" and AT(":",cFile,2)>0
         //so we get the complett fullpath
         cSourceAlias=Substr(cFile,2,AT(":",cFile,2)-2)
         try
           cFile =_app.sourceAliases[cSourceAlias]+Substr(cFile,AT(":",cFile,2)+1)
         catch(exception e)
           //unknown SourceAlias ...
           cFile =ltrim(trim(cFile))
         endtry
      endif

   return cFile

   function SetSourceAlias(cFn)
       if pcount()=0
         return ""
      endif
      Local cFile, cPath
      cFile=ltrim(trim(cFN))
      if empty(cFile)
         return cFile
      endif
      if left(cFile,1)=":"
         //already included
         return cfile
      endif
      Local cKey,cFolder, numaliases, srcaliaslen, loadarray

      cKey=_app.sourceAliases.firstKey
      cFolder=""

      // QAID: 6589 - M.Kay - 05/28/2010
      // Strip filename from path so filename is not used to search for
      //  source alias.
      cPath = substr(cFile, 1, rat('\',cFile)-1 )

      // Create array of sourcealias lengths so we can search longest
      // source alias paths first.
      numaliases = _app.sourceAliases.count()
      loadarray  = false
      if type("form.srcaliaslen")="A"
         // array already exists check if # of rows in array
         // match # of aliases in sourceAliases assocarray.
         if numaliases <> alen(form.srcaliaslen,1)
            // # of sourcealiases has changed, so
            // empty array and setup to reload.
            form.srcaliaslen.size := 0
            loadarray = true
         endif
      endif


      if type("form.srcaliaslen")<>"A"
         // array doesn't exist yet, so create it
         form.srcaliaslen = new array( numaliases, 2 )
         loadarray = true
      endif


      if loadarray
         // Add row to srcaliaslen for each source alias
         //   col 1 = length of source alias path
         //   col 2 = source alias name (as stored in _app.sourceAliases)
         for ctr=1 to numaliases
            form.srcaliaslen[ ctr, 1 ] = len(_app.sourceAliases[ckey])
            form.srcaliaslen[ ctr, 2 ] = ckey

            try
              cKey:= _app.sourceAliases.nextKey(cKey)
            catch(exception e)
              cKey:="" //out
            endtry
         next

         // Sort array so that shortest length source alias is in row 1
         //  and longest is in last row.
         form.srcaliaslen.sort(1)  // sort by column 1 - length of source aliases
      endif


      // Search from longest source alias paths to shortest
      for ctr=numaliases to 1 step -1
         cKey    := form.srcaliaslen[ctr,2]  // get source alias name from array
         cFolder := _app.sourceAliases[cKey] // lookup source alias path

         if len(cFolder) <= len(cPath)
            // source alias path is shorter or equal in length to file's path
            if at( cFolder.toLowercase(), cPath.toLowercase() ) > 0
               // file's path contains source alias path
               cFile:= ":"+cKey+":"+substr(cFile,len(cFolder)+1)
               exit           
            endif
         endif
      next


//      cKey=_app.sourceAliases.firstKey
//      do while not empty(cKey)
//         cFolder:=_app.sourceAliases[cKey]
//
//         if at( cFolder.toLowercase(), cPath.toLowercase() )>0
//            cFile:= ":"+cKey+":"+substr(cFile,len(cFolder)+1)
//
//            //            msgbox(cFile)  // Removed trap - M.Kay, dBI Inc. - 11/01/2004
//            exit
//         endif
//         try
//           cKey:= _app.sourceAliases.nextKey(cKey)
//         catch(exception e)
//           cKey:="" //out
//         endtry
//      enddo

   return cFile

   function showFileInfo(oCurrent)
      LOCAL a, nF
      // display the details of a selected file on the notebook
      // go to files details page of notebook
      form.notebook1.cursel = form.nBFilesPage

      form.notebook1.filenotebook.filename.value = oCurrent.FileName
      // get the file information and display it
      a = new array()
      //BMM nF = a.Dirext(trim(form.notebook1.filenotebook.filename.value))
      nF = a.Dirext(form.Project.getFullPath(form.notebook1.filenotebook.filename.value))
      if oCurrent.custom = true     // unused
         WarningText:=form.qLang.iGetText("Custom File")+" "
      else
         WarningText = ""
      endif
      form.notebook1.fileNotebook.fileIncluded.enabled = true

      // check if the main program and set the checkbox indicators
      form.notebook1.filenotebook.MainProg.value     = oCurrent.Ismain
      form.notebook1.filenotebook.fileIncluded.value = oCurrent.Included
      form.notebook1.filenotebook.deoObject.value    = oCurrent.deoObject
      form.notebook1.fileNotebook.deoTarget.value    = oCurrent.deoLibNo

      if nF = 0   // file not found
         form.notebook1.fileNotebook.fileIncluded.value   := oCurrent.Included
         form.notebook1.fileNotebook.fileIncluded.enabled := oCurrent.canBeIncluded
         with form.notebook1.filenotebook
           //QAID: 5390 - D.Brooks - 07/18/2005
           //fileSize.value     := ""
           //fileModified.value := ""
           //fileCreated.value  := ""
           fileSize.text      := ""
           fileModified.text  := ""
           fileCreated.text   := ""
           //End QAID: 5390
           MainProg.enabled   := false
         endwith
         Warningtext:=Iif(empty(Warningtext),form.qLang.iGetText("File")+" ",Warningtext)
         form.notebook1.filenotebook.fileWarning.text:= form.qLang.iGetText("%1 no longer available",WarningText+oCurrent.FileName)
         return
      endif
      with form.notebook1.filenotebook
        //QAID: 5390 - D.Brooks - 07/18/2005
        //fileSize.value     := ltrim(str(a[1,2])) + " "+form.qLang.iGetText("Bytes")
        //fileModified.value := dtoc(a[1,3]) + " " + a[1,4]
        //fileCreated.value  := dtoc(a[1,7]) + " " + a[1,8]
        fileSize.text      := ltrim(str(a[1,2])) + " "+form.qLang.iGetText("Bytes")
        fileModified.text  := dtoc(a[1,3]) + " " + a[1,4]
        fileCreated.text   := dtoc(a[1,7]) + " " + a[1,8]
        //End QAID: 5390
        deoObject.enabled  := true
        deoTarget.enabled  := true
      endwith

      do case
      case oCurrent.isMain

        form.notebook1.filenotebook.fileIncluded.value = true
        form.notebook1.fileNotebook.fileIncluded.enabled = false
        form.notebook1.fileNotebook.deoObject.value = false
        form.notebook1.fileNotebook.deoTarget.value = ""
        form.notebook1.filenotebook.deoObject.enabled = false
        form.notebook1.fileNotebook.deoTarget.enabled = false
        form.notebook1.fileNotebook.deoTarget.value = " "

      case oCurrent.deoObject
        form.notebook1.filenotebook.fileIncluded.enabled = false
        form.notebook1.filenotebook.fileIncluded.value = false

      otherwise

         if oCurrent.included
            form.notebook1.fileNotebook.deoObject.value = false
            form.notebook1.fileNotebook.deoObject.enabled = false
            form.notebook1.fileNotebook.deoTarget.value = ""
            form.notebook1.fileNotebook.deoTarget.enabled = false
         else
            form.notebook1.fileNotebook.deoObject.value = oCurrent.deoObject
            form.notebook1.fileNotebook.deoTarget.value = oCurrent.deoLibNo
         endif

         form.notebook1.filenotebook.deoObject.value = oCurrent.deoObject
      endcase

      form.notebook1.filenotebook.fileWarning.text = WarningText
      // switch the mainprog checkbox on or off according to the file type
      form.notebook1.filenotebook.MainProg.enabled = oCurrent.canBeMain
      if type('form.tBar') = 'O'
         form.tBar.checkEnabledStatus()
      endif

      *//This cannot be so the notebook Tab is set on the topline of this
      *//function: form.notebook1.cursel = form.nBFilesPage
      *//So deactivate this below code line with ** (Jonny)
      // can be sorry....
      // reinstate the viewers if positioned on a viewer page
      form.notebook1.fileNotebook.canselChange(form.notebook1.fileNotebook.cursel)
      return

   function TREEVIEW1_onDrop(nLeft, nTop, cType, cName)
      class::checkDropped(cType, cName)
      return false

   function TREEVIEW1_onRightMouseUp(flags, col, row)
     // only if the mouse is on a valid file branch and not a heading line
//      if type("form.treeview1.selected") = "O" and ;
        form.treeview1.selected.typ <> "H"
        form.MainPopup.left = col+ this.left
        form.MainPopup.top = row + this.top
        form.MainPopup.open()

//      endif
      return

   function WebApp_onChange
      form.project.WebApplication:= this.value
      form.project.Modified:= true
      Local TransText1,TransText2
      TransText1=form.qLang.iGetText("Project")
      TransText2=form.qLang.iGetText("File Details")
      if not this.value
         //D.Brooks 11/10/2004 - Let inno tab be visible even if exe not built
         //if file(form.project.getFullPath(form.project.exename))
            form.NOTEBOOK1.dataSource:= 'ARRAY {"'+TransText1+'","'+TransText2+'","Log","DEO","Inno"}'
         //else
         //   form.NOTEBOOK1.dataSource:= 'ARRAY {"'+TransText1+'","'+TransText2+'","Log","DEO"}'
         //endif

         //D.Brooks 12/01/2004 - update the menu items related to Inno
         form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=true
         form.notebook1.innonotebook.I_SCRIPTCALLSM.enabled:=true
      else
         form.NOTEBOOK1.dataSource:= 'ARRAY {"'+TransText1+'","'+TransText2+'","Log","DEO"}'
         form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=false
         form.notebook1.innonotebook.I_SCRIPTCALLSM.enabled:=false
      endif
      return

   function openProject(cFileName)
      local cFN
      cFN = iif(empty(cFileName),'',cFileName)
      class::checkSave()
      if empty(cFN)
         cFN=getfile("*.prj","Project")
         if empty(cFN)
            return false
         endif
      endif
      if not class::loadProject(cFN)
        return false
      endif
      class::assignValidDeoTargets()
      class::exename_onChange()
      return true

   function PARAMETERS_onChange
      // the parameters must be on a single line
      local cString, c
      cString = ""
      for i = 1 to len(this.value)
        c = substr(this.value,i,1)
        do case
        case c = chr(13)
          cString += " "
        case c = chr(10)
        otherwise
          cString += c
        endcase
      next
      form.project.ParameterList := cString
      this.value = cString
      form.project.Modified      := true
      return

   function PREPROCESSORS_onChange()
         // the parameters must be on a single line
      local cString, c
      cString = ""
      for i = 1 to len(this.value)
        c = substr(this.value,i,1)
        do case
        case c = chr(13)
          cString += " "
        case c = chr(10)
        otherwise
          cString += c
        endcase
      next
      form.project.PreprocessorDirectives := cString
      this.value = cString
      form.project.Modified      := true
      return

   function PROJECTNAME_onChange
      if empty(form.notebook1.exeName.value) and not empty(form.notebook1.projectName.value)
        form.notebook1.exeName.value = trim(form.notebook1.projectName.value) + ".exe"
      endif
      class::EXENAME_onChange()
      form.project.ProjectName := this.value
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.modified    := true
      //inno Tab
      if empty(form.notebook1.innonotebook.I_APPNAME.Value)
         form.notebook1.innonotebook.I_APPNAME.Value:=this.value
         form.project.AppName:=this.value
         form.project.UninsHSAppName:=this.value
      endif
      //
      return

   function OpenLogInSourceEditor_onClick
      private projlogfile
      //projlogfile = trim(rtrim(form.NOTEBOOK1.LOGFILENAME.value))
      projlogfile = substr(form.NOTEBOOK1.LOGEDITOR.datalink, 6)
      if file( projlogfile )
         modify file (projlogfile)
      else
         msgbox("File: "+projlogfile+" not found", "Cannot Open Project File",16)
      endif
      return

   function I_AllInnoRuntimeRB_onChange
      with form.notebook1.innonotebook

        do CASE
        CASE this.name = "RB1"
           form.project.INNO_RBoption=1
        CASE this.name = "RB2"
           form.project.INNO_RBoption=2
        CASE this.name = "RB3"
           form.project.INNO_RBoption=3
        ENDCASE
        c1.visible:= rb1.value
        c2.visible:= rb2.value
        rectangle4.visible:= not rb3.value
		  
		  if rb1.value //if installing our runtime installer start with silent mode
		     c1.cb3.value = true
			  ckbdeonlyinstall.enabled = false
			  ckbdeonlyinstall.value = false
			  form.project.bdeonlyinstall = false
		  else
			  c1.cb3.value = false
			  ckbdeonlyinstall.enabled = true
		  endif
		  
        //D.Brooks 11/12/2004 - check to see if runtime true or false
        if rb3.value == true
            form.project.SM_dBASERuntime = false
        else
            form.project.SM_dBASERuntime = true
        endif

        //KK - added for support of the runtine.exe.manifest files
        cb_xp.enabled := rb2.value
        cb_xp.value := false
        rbadmin.enabled := rb2.value
        rbhighest.enabled := rb2.value
        rbinvoker.enabled := rb2.value
      endwith
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
      return

   function FMTFilePath( cFilePath, nMaxLen )
      local cFront, cBack
      if rat("\",cFilePath) > nMaxLen
         cFront = left(cFilePath,nMaxLen)
         cBack = substr(cFilePath,rat("\",cFilePath)+1)
         return cFront+"..."+cBack
      else
         return cFilePath
      endif

   function getNewProjObj
      local o
      o = new Project((form))
      o.SaveRspFile := form.SaveRspFile
      o.Verbose := form.Verbose
      o.VerboseLog := form.VerboseLog
      return o

   function loadProject(cF, lCustom)
      LOCAL i
      form.repaint()

      //QAID: 5176 - D.Brooks -09/23/2005
      //form.Cursor.beginWait()
      hourGlass(true, _app.FrameWin.hWnd)
      //End QAID: 5176

      form.freeze()

      //QAID: 5176 - D.Brooks -09/23/2005
      //form.Cursor.beginWait()
//      hourGlass(true, _app.FrameWin.hWnd)
      //End QAID: 5176

      form.bLoading = true
      form.project.NeedDirs:= new Array()
      form.project.NeedFiles:= new Array()
      form.project.NeedGroup:= new Array()
      form.BDEArr:= new Array()
      form.LizArr:= new Array()

      //D.Brooks 12/1/2004 - move clearForm to before project is loaded
      class::clearForm()

      // use the project class load method
      form.Project = form.getNewProjObj()
      if not form.Project.load(cF, false)

         form.bLoading = false
         form.unfreeze()

         //QAID: 5176 - D.Brooks - 09/23/2005
         //form.Cursor.endWait()
         hourGlass(false)
         //End QAID: 5176

         return false

      endif

      form.startProject = form.project.fileName
      form.titlebarUpdate()
      //class::clearForm()

      form.notebook1.projectName.value   = form.project.projectName
      //QAID: 5390 - D.Brooks - 07/18/2005
      form.Notebook1.ProjectStatus.text = form.project.projectStatus
      //form.Notebook1.ProjectStatus.value = form.project.projectStatus
      //End QAID: 5390
      form.notebook1.parameters.value    = form.project.ParameterList
		form.notebook1.preprocessors 		  = form.project.PreprocessorDirectives
      form.notebook1.Author.value        = form.project.Author
      form.notebook1.description.value   = form.project.Description
      form.notebook1.logFileName.value   = form.project.LogFileName
      form.notebook1.exeName.value       = form.project.exeName
      form.notebook1.webapp.value        = form.project.WebApplication

      form.bLoading:=true

      form.notebook1.deoApplicationCheck.value:= form.project.deoOption
      //Removed to new UAC form
		if form.project.enableuac = 0
			cUACvalue = "0 - NO UAC option"
		elseif form.project.enableuac = 1
			cUACvalue = "1 - UAC ON"
		elseif form.project.enableuac = 2
			cUACvalue = "2 - UAC OFF"
		else
			cUACvalue = "0 - NO UAC option"
		endif	
		form.notebook1.cbuacbuild.value = cUACvalue
		
      form.notebook1.runtimeinbuildcheck.value := iif(form.project.runtimeinbuild=0,false,true)
		
		form.notebook1.bdeoffcheck.value := iif(form.project.bdeoption=0,true,false)
      
      DO CASE
      CASE form.project.inioption == 0
         form.notebook1.INICOMBO.value := "NONE"
      CASE form.project.inioption == 1
         form.notebook1.INICOMBO.value := "STANDARD"
      CASE form.project.inioption == 2
         form.notebook1.INICOMBO.value := "ROAMING"
      ENDCASE
		
		if form.project.runtimeinbuild = 1
		   form.notebook1.innonotebook.rb1.enabled = false //(Include Runtime Engine?)
			form.notebook1.innonotebook.rb2.enabled = false //(Include Runtime Files?)
		else
			form.notebook1.innonotebook.rb1.enabled = true //(Include Runtime Engine?)
			form.notebook1.innonotebook.rb2.enabled = true //(Include Runtime Files?)
		endif	
      
      // now loop thru the files and build various lists
      for i = 1 to alen(form.project.contents)
         if form.project.contents[i].canBeMain
            form.mainFilesList.add(form.project.contents[i].FileName)
            if form.project.contents[i].isMain
              form.notebook1.mainFileName.value = form.project.contents[i].FileName
              form.project.MainFileName = form.project.contents[i].FileName
            endif
         endif
         // the following two properties are hard coded
         if form.project.contents[i].FileType = ".ICO"
            form.iconFilesList.add(form.project.contents[i].FileName)
         endif
         if form.project.contents[i].FileType = ".BMP"
            form.splashFilesList.add(form.project.contents[i].FileName)
         endif
      next
      // set the value for the icon file only if the file was found in the contents
      if form.iconFilesList.scan(form.project.iconFileName) > 0
        form.notebook1.iconFileName.value = form.project.iconFileName
      endif

      if form.splashFilesList.scan(form.project.splashFileName) > 0
        form.notebook1.splashFileName.value = form.project.splashFileName
      endif

      //Inno Settings
      with form.notebook1.innonotebook

  
         //Jonny Kwekkeboom 03/09/2997 for Listbox Repaint error
         I_LIZ_LBOX.dataSource:= Null
         I_LIZ_LBOX.dataSource:= "Array form.LizArr"
         //D.Brooks 12/22/2004 - if AppName empty, try projectName
         if not empty(form.project.AppName)
            I_AppName.value:= form.project.AppName
         else
            I_AppName.value:= form.project.projectName
            form.project.AppName:= form.project.projectName
            form.project.UninsHSAppName:= form.project.projectName
         endif
         I_Version.value:= form.project.AppVersion
         I_DESTFOLDER1.value:= "{pf}\"
         I_DESTFOLDER2.value:= "{#AppName}"
         //D.Brooks 11/12/2004 - don't call this before values are loaded
         //class::Set_InnoSourceFolder()
         I_SourceFolder.value:=form.project.SourceFolder
         //D.Brooks 11/17/2004 - update parsing to use new fields.
         if left(form.project.DestFolder,1)="{"
            //I_DestFolder1.value:=Substr(form.project.DestFolder,1,AT("\",form.project.DestFolder))
            destFolderValue = Substr(form.project.DestFolder,1,AT("\",form.project.DestFolder))
            do case
               case destFolderValue == "{pf}\"
                  I_DestFolder1.value = form.DestChoices[2]
               case destFolderValue == "{cf}\"
                  I_DestFolder1.value = form.DestChoices[3]
               case destFolderValue == "{win}\"
                  I_DestFolder1.value = form.DestChoices[4]
               case destFolderValue == "{sys}\"
                  I_DestFolder1.value = form.DestChoices[5]
               case destFolderValue == "{sd}\"
                  I_DestFolder1.value = form.DestChoices[6]
               otherwise
                  I_DestFolder1.value = form.notebook1.innonotebook.I_DESTFOLDER1.value
            endcase
            tmpStr = substr(form.project.DestFolder,AT("\",form.project.DestFolder)+1)
         else
            I_DestFolder1.value:=""
            tmpStr = form.project.DestFolder
         endif
         tmpNum = AT("\",tmpStr)
         if tmpNum == 0
            //no more slashes
            I_DestFolder2.value:=tmpStr
         else
            //more slashes
            I_DestFolder2.value:=substr(tmpStr,1,tmpNum-1)
            tmpStr = substr(tmpStr,AT("\",tmpStr)+1)
            tmpNum = AT("\",tmpStr)
            if tmpNum == 0
               //no more slashes
               I_DestFolder3.value:=tmpStr
            else
               //more slashes
               I_DestFolder3.value:=substr(tmpStr,1,tmpNum-1)
               if AT("\",tmpStr) > 0
                  tmpStr = substr(tmpStr,AT("\",tmpStr)+1)
                  I_DestFolder4.value:=tmpStr
               endif
            endif
         endif
//         if left(form.project.DestFolder,1)="{"
//            I_DestFolder1.value:=Substr(form.project.DestFolder,1,AT("\",form.project.DestFolder))
//            I_DestFolder2.value:=Substr(form.project.DestFolder,AT("\",form.project.DestFolder)+1)
//         else
//            I_DestFolder1.value:=""
//            I_DestFolder2.value:=form.project.DestFolder
//         endif
         //Jonny Kwekkeboom 03/09/2997 for Listbox Repaint error
         I_DIRSUBFOLDER_LBOX.dataSource:=Null
         I_DIRSUBFOLDER_LBOX.datasource:= "Array form.project.NeedDirs"
         if form.project.NeedDirs.size>0
            if left(form.project.NeedDirs[1],1)="{"
               I_DirSubFolder1.value:=Substr(form.project.NeedDirs[1],1,AT("\",form.project.NeedDirs[1]))
               I_DirSubFolder2.value:=Substr(form.project.NeedDirs[1],AT("\",form.project.NeedDirs[1])+1)
            else
               I_DirSubFolder1.value:=" "
               I_DirSubFolder2.value:=form.project.NeedDirs[1]
            endif
         else
            I_DirSubFolder1.value:="{app}\"
            I_DirSubFolder2.value:=""
         endif
         //check of build exe is inside InnoFiles....
         if not class::IfInsideInnoFiles(form.project.getFullPath(form.project.exename))
            if file(form.project.getFullPath(form.project.exename))
               form.project.Needfiles.add(form.project.getFullPath(form.project.exename)+" >> DestDir: {app}")
            endif
         endif
         if form.project.Needfiles.size>0
            if at(">",form.project.Needfiles[1])>0
               local cDestDir
               cDestDir=ltrim(Substr(form.project.Needfiles[1],AT(">",form.project.Needfiles[1])+11))
               if AT(";",cDestDir)>0
                  //than remove the Flags out of destdir
                  cDestDir:=rtrim(Substr(cDestDir,1,AT(";",cDestDir)-1))
               endif
               I_FILESSUBFOLDER.value:=cDestDir
            endif
         endif
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         I_FILESSUBFOLDER_LBOX.dataSource := NULL
         I_FILESSUBFOLDER_LBOX.datasource:= "Array form.project.Needfiles"
         form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
         //D.Brooks 11/09/2004 - Update the Flags button
         form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)

         class::CreateInnoGroupFilesFromPrj()

         if form.project.NeedGroup.size=0
            //so we at the group entry for mainexe
            form.project.NeedGroup.add("{group}\{#AppName} >> {app}\"+form.project.exename)
         endif

         I_GROUP_BOX.dataSource:="Array form.project.NeedGroup"
         I_GROUPDEL_PB.enabled:=(form.project.NeedGroup.size>0)
         class::I_GROUP_BOX_onSelChange()

         if empty(form.project.InnoScriptname)
//            form.project.InnoScriptname:=form.ISGDefaultFolder+"\Project\Explorer.iss" //KK 03/07/2013 - took out -
         elseif file(form.project.InnoScriptname)
                I_Script.value:=class::I_EditorText(form.project.InnoScriptname)
         endif
         I_Scriptname.value:=form.project.InnoScriptname

         I_Desktop.value:=form.project.IncDesktopEntry
         I_QuickLaunch.value:=form.project.IncQuickEntry

         //D.Brooks 11/12/2004 - Values that need to be loaded
         I_DispGroupAtEnd.value:=form.project.IncDispGroup
         I_Unins_Icon.value:=form.project.IncUninsEntry
         I_UNINS_ICONUTIL.value:=form.project.UninsHS
         if form.project.SM_dBASERuntime == false
            RB3.value = true
            rb2.value = false
            rb1.value = false
            CB_XP.enabled := false
            CB_XP.value:= false
            form.Project.XPLook = false
         else
            rb3.value = false
				form.notebook1.runtimeinbuildcheck.value = false
            if form.project.INNO_RBoption = "2"
               RB2.value = true
               rb1.value = false
               CB_XP.enabled := true
               CB_XP.value:=form.Project.XPLook
            else
               RB1.value = true
               rb2.value = false
                CB_XP.enabled := false
               CB_XP.value:=false
               form.Project.XPLook = false
            endif
            c1.visible = true
            rectangle4.visible = true
         endif
			
			If rb1.value
				CKBDEONLYINSTALL.value = false
				CKBDEONLYINSTALL.enabled = false
			else
				CKBDEONLYINSTALL.value = form.project.bdeonlyinstall
			endif	
 
         with C1
           //D.Brooks 11/12/2004 - instead of installed language, use saved value
           //get first language listed
           lang_string = left(form.project.dBASELang,2)
           if lang_string="EN"
              I_LANG_C1.value:="English"
           elseif lang_string="DE"
              I_LANG_C1.value:="Deutsch"
           elseif lang_string="IT"
              I_LANG_C1.value:="Italian"
           elseif lang_string="ES"
              I_LANG_C1.value:="Espa¤ol"
           else
              I_LANG_C1.value:="Japan"
           endif
//           if _app.Language="EN"
//              I_LANG_C1.value:="English"
//           elseif _app.Language="DE"
//              I_LANG_C1.value:="Deutsch"
//           elseif _app.Language="IT"
//              I_LANG_C1.value:="Italian"
//           elseif _app.Language="ES"
//              I_LANG_C1.value:="Espa¤ol"
//           else
//              I_LANG_C1.value:="Japan"
//           endif
           CB1.value:=form.project.dBProgressbar
           CB2.value:=form.project.dBProgressbox
           CB3.value:=form.project.dBSilent
           CB4.value:=not empty(form.project.dBDestRuntime)
           EF1.value:=form.project.dBDestRuntime
           EF2.value:=form.project.dBDestBDE
           EF1.enabled:=not empty(form.project.dBDestRuntime)
           EF2.enabled:=not empty(form.project.dBDestBDE)
           //D.Brooks 11/17/2004 - Update the labels
           if EF1.enabled
               TL1.colorNormal = "black/BtnFace"
           else
               TL1.colorNormal = "gray/BtnFace"
           endif
           if EF2.enabled
               TL2.colorNormal = "black/BtnFace"
           else
               TL2.colorNormal = "gray/BtnFace"
           endif
           I_BDEGROUPINSERT.value:=form.project.BDEGroupEntries

           //D.Brooks 12/22/2004 - load I_DBEngineName field
           //KK (08/20/2012) - replaced dBaseRuntimeDir with dBaseRuntimeInstDir
           I_DBEngineName.value := form.project.dBASERuntimeInstDir
         endwith

         C2.I_LANG_C2.value:=C1.I_LANG_C1.value

         with C2
           CB1.value:=form.project.Resource
           if empty(form.project.SepDestDir)
              CB2.value:="{app}\"
              EF1.value:=""
           elseif left(form.project.SepDestDir,1)="{"
              CB2.value:=substr(form.project.SepDestDir,1,At("}",form.project.SepDestDir)+1)
              EF1.value:=substr(form.project.SepDestDir,len(CB2.value)+1)
           else
              CB2.value:=""
              EF1.value:=form.project.SepDestDir
           endif
           //D.Brooks 11/12/2004 - set value for langef
           LANGEF.value:=form.project.dBASELang
         endwith
         class::CheckInnoNeedFiles()
         Alias_del.Enabled:=form.project.BDEAlias.size>0
         if form.project.BDEAlias.size>0
            class::I_DispAlias(1,true)
         endif
         //D.Brooks 11/24/2004 - Add BDE_UseSettings values
         BDE_UseSettings.value:=form.project.BDEUseSettings
         BDE_LangDriver.enabled:=BDE_UseSettings.value
         BDE_Level.enabled:=BDE_UseSettings.value
         BDE_MaxFileHandle.enabled:=BDE_UseSettings.value
         BDE_MemoBlockSize.enabled:=BDE_UseSettings.value
         BDE_MDXBlockSize.enabled:=BDE_UseSettings.value

         BDE_LangDriver.value:=form.project.BDELangDriver
         BDE_LEvel.value:=form.project.BDELevel
         BDE_MaxFileHandle.value:=val(form.project.BDEMaxFileHandle)
         BDE_MEMOBlockSize.value:=form.project.BDEMemoBlockSize
         BDE_MDXBlockSize.value:=val(form.project.BDEMDXBlockSize)
         class::I_SetBDEFolders()

         INICHECK.enabled := iif(form.project.inioption==0,false,true)
         INICHECK.value := form.project.INNOINI
         INITHEMECOMBO.value := form.project.inifullThemeName
         I_INI_ErrorHand_Inc.enabled := INICHECK.enabled
         I_INI_ErrorHand_Inc.value:=form.project.INIErrorHandling
         I_INI_NoBDE.enabled := INICHECK.enabled
         I_INI_NoBDE.value:=form.project.ININoBDE  //D.Brooks - 09/28/2005
         //MsgBox("ini nobde enabled="+I_INI_NoBDE.enabled)
         INILARGEBUTTONCHECK.enabled := INICHECK.enabled
         INILARGEBUTTONCHECK.value := iif(form.project.iniLargeButtons=1,true,false)
         INITHEMECOMBO.enabled := INICHECK.enabled
         INITHEMECOMBO.value := form.project.inifullThemeName
         //MsgBox("fullThemeName="+form.project.fullThemeName)
         I_INI_Trap.enabled := INICHECK.enabled
         I_INI_Trap.value:=form.project.INITrap=0
         I_INI_IgnoreTrap.enabled := INICHECK.enabled
         I_INI_IgnoreTrap.value:=form.project.INITrap=1

         //KK 09/27/2012 - added to support new items under UAC Registry Settings tab
         do CASE
         CASE form.project.UACRB = 1
            UACRB1.value := true
            UACRB2.value := false
            UACRB3.value := false
         CASE form.project.UACRB = 2
            UACRB2.value := true
            UACRB1.value := false
            UACRB3.value := false
         CASE form.project.UACRB = 3
            UACRB3.value := true
            UACRB1.value := false
            UACRB2.value := false
         OTHERWISE
            UACRB1.value := true
            UACRB2.value := false
            UACRB3.value := false
         ENDCASE

         //D.Brooks 11/11/2004 - Trigger license language combobox change
         //so that the license fields automatically fill in if files are named.
         Lang_CB.onChange()
      endwith
      **End of inno settings

      // loop thru all the files in the contents Array and build the tree

      for i = 1 to aLen(form.project.Contents)
        iCurrent = class::addFileToTree(form.project.contents[i], i)
      next

      form.bLoading:=true

      // make sure the branches are expanded
      for i= 1 to alen(form.treeFileTypes,1)
        form.treeFileTypes[i].expanded = true
      next

      form.notebook1.mainFileName.datasource   = "array form.mainFilesList"
      form.notebook1.splashFileName.datasource = "array form.splashFilesList"
      form.notebook1.iconFileName.datasource   = "array form.iconFilesList"
      // the datasource "deoList" for the deo Folders is in the project class
      form.notebook1.deoFolders.datasource     = "array form.project.deoList"

      // assign a list of valid deo Targets for file assignment
      class::assignValidDeoTargets()
      form.bLoading = false

      //J.Kwekkeboom 12/18/2004 - fixed with Api for folder
      form.treeview1.tRoot.image := "Resource Project "+form.ExplorerDllFile
      form.treeview1.tRoot.selectedImage := "Resource Project "+form.ExplorerDllFile

      //form.treeview1.tRoot.image := "filename :ProjExp:Project.ico"//BMM workaround for QAID 4798
      //form.treeview1.tRoot.selectedImage := "filename :ProjExp:Project.ico"

      //form.treeview1.tRoot.image := "filename :ProjExp:Foldr45a.ICO"//BMM workaround for QAID 4798
      //form.treeview1.tRoot.selectedImage := "filename :ProjExp:Foldr45b.ICO"
      form.treeview1.troot.select()  // reposition to top branch of tree
      form.unfreeze()

      //QAID: 5176 - D.Brooks - 09/23/2005
      //form.Cursor.EndWait()
      hourGlass(false)
      //End QAID: 5176

      form.project.modified:=false
      form.bLoading:= false
      form.ScriptIsGenerate:=false  //for can generate on script tab
      //D.Brooks 11/24/2004 - update button when flag updated
      if not form.notebook1.webapp.value
         form.notebook1.innonotebook.I_ScriptGenerate.enabled:=true
         form.notebook1.innonotebook.I_SCRIPTCALLSM.enabled:=true
      else
         form.notebook1.innonotebook.I_ScriptGenerate.enabled:=false
         form.notebook1.innonotebook.I_SCRIPTCALLSM.enabled:=false
      endif

      // Update menu - M.Kay, dBase, LLC - 07/16/2013
      form.root.root_onInitMenu()
      form.setfocus()
      return true

   function I_DispAlias(nNr,bBool)

     local cAll,cDestDir,cDriver,cAlias

     cAll=form.project.BDEAlias[nNr]
     cDestDir=Substr(cAll,AT("Folder:",cAll)+8)
     cDestDir:=Substr(cDestDir,1,AT(";",cDestDir)-1)
     cDestDir:=ltrim(trim(cDestDir))
     cDriver=Substr(cAll,AT("Driver:",cAll)+7)
     cDriver:=Substr(cDriver,1,AT(";",cDriver)-1)
     cDriver:=ltrim(trim(cDriver))
     cAlias=Substr(cAll,AT("Alias:",cAll)+6)
     cAlias:=Substr(cAlias,1,AT(";",cAlias)-1)
     cAlias:=ltrim(trim(cAlias))
     if bBool
        with form.notebook1.innonotebook
           //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
           Alias_LBox.dataSource := NULL
           Alias_LBox.dataSource:="Array form.project.BDEAlias"
           if left(cAlias,1)="-"
              AliasDEL.value:=left(cAlias,1)="-"
              AliasName.value:=substr(cAlias,2)
           else
              //D.Brooks 12/1/2004 - set checkbox to false if no -
              AliasDel.value:=left(cAlias,1)="-"
              AliasName.value:=cAlias
           endif
           AliasDriver.value:=cDriver
           AliasFolder.value:=cDestDir
           class::I_AliasOnChange()
           I_BDECHANGER.enabled:=true
        endwith
     endif
   return
   

   function CBUACBUILD_onChange()
      if LEFT(this.value,1) == "0"
		    form.project.enableuac = 0
		elseif LEFT(this.value,1) == "1"
			 form.project.enableuac = 1
		elseif LEFT(this.value,1) == "2"
			 form.project.enableuac = 2
		else 
			 form.project.enableuac = 0
		endif	 
		//MsgBox("form.project.enableuac = "+form.project.enableuac) //KK msgbox
		class::I_UpdateValues()
      return
   

   function CKBDEONLYINSTALL_onChange()
      if this.value
			//look for bde installer in {app}\dBASE\Plus10\Runtime\BDE Installer
			cBDEInstall = LEFT(_app.exename,RAT(lower("\bin"),lower(_app.exename))) // directory up to but, not including bin folder 
			cBDEInstallfile = cBDEInstall+"Runtime\BDE Installer\BDE_Setup.exe"
			form.project.bdeinstallfile = cBDEInstallfile
			if NOT FILE(cBDEInstallfile)
			   form.qLang.iMsgBox("File not found: %1","Information",64,cBDEInstallfile)
				//MsgBox("File not found: "+form.project.bdeinstallfile)
				this.value = false
				form.project.bdeinstallfile = ""
			endif
		endif
		form.project.bdeonlyinstall = this.value //true or false
		class::I_UpdateValues()
      return

   function CheckInnoNeedFiles
      if class::InnoFileItem(form.project.Getfullpath(form.project.exename))>0
         //D.Brooks 12/21/2004 - QAID 5113 - Make sure exe isn't already there.
         if not class::IfInsideInnoFiles(form.project.Getfullpath(form.project.exename))
            form.project.NeedFiles.Add(form.project.Getfullpath(form.project.exename)+" >> DestDir: {app}")
         endif
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:= "Array form.project.NeedFiles"
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.cursel:= form.project.NeedFiles.size
      endif
      form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
      return

   function logFileName_onChange
      form.project.Modified    := true
      form.project.LogFileName := form.notebook1.logFileName.value
      return

   function mainFileName_onChange
      LOCAL i, oTree
      // just opening the combobox will cause the onChange to fire, so check if really changed
      if empty(form.project.mainFileName) or ;
         form.notebook1.MainFileName.value <> form.project.MainFileName
         form.project.Modified := true
         // the user could have selected none
         if left(form.notebook1.mainFilename.value,1) = "<"  // in case of language differences
            for i = 1 to aLen(form.project.contents)
              if form.project.contents[i].isMain
                form.project.contents[i].isMain = false
                oTree = form.project.contents[i].Tree
                //D.Brooks 01/05/2005 - tree item should be set to false
                oTree.bold = false
                //oTree.bold = true
              endif
            next
            form.project.MainFileName = ""
         else
           for i=1 to alen(form.project.contents)
             if lower(form.project.contents[i].FileName) == lower(trim(form.notebook1.mainFileName.value))
                form.project.contents[i].isMain = true
                oTree = form.project.contents[i].Tree
                oTree.bold = true
                form.project.MainFileName = trim(form.notebook1.mainFileName.value)
             //D.Brooks 01/05/2005 - QAID 5142
             elseif lower(form.setSourceAlias(form.project.contents[i].FileName)) == lower(trim(form.notebook1.mainFileName.value))
               form.project.contents[i].isMain = true
               oTree = form.project.contents[i].Tree
               oTree.bold = true
               form.project.MainFileName = trim(form.notebook1.mainFileName.value)
             else
                form.project.contents[i].Ismain = false
                oTree = form.project.contents[i].tree
                try
                  oTree.bold = false
                catch(exception e)
                endtry
             endif
           next
         endif
      endif
      return

   function ToggleMain()
      // this method is used to set/reset the mainProgram when called from the
      // menus or popups
      form.notebook1.filenotebook.MainProg.value = not form.currentFileObject.isMain
      class::mainProg_onChange()
      return

   function UACCHECK_onChange
      if this.value
         form.project.enableuac = 1
      else
         form.project.enableuac = 0
      endif

      return

   function MAINPROG_onChange
      LOCAL i,oC, cDestDir
      form.project.Modified := true
      form.project.MainFileName = ""
      form.treeview1.selected.bold = false
      // when switched off there is no current mainprog, so clear all of them
      // this makes sure there are no mistakes
      for i = 1 to alen(form.project.contents)
        oC = form.project.contents[i]
        if oC.isMain = true
          oC.isMain = false
          // get rid of bold in the tree
          // point to the tree item
          t = oC.tree
          t.Bold = false
        endif
      next
      if not form.notebook1.filenotebook.MainProg.value
        form.notebook1.MainFileName.value = "<none>"
        class::showFileInfo(form.CurrentFileObject)
        return
      endif
      // set the mainprogram indicator
      form.currentFileObject.Included := true
      oC = form.currentFileObject
      oC.IsMain     = true
      oC.deoObject = false
      oC.Excluded  = false
      form.treeview1.selected.bold = true
      //D.Brooks 01/05/2005 - QAID 5142
      oC.FileName = form.setSourceAlias(oc.FileName)
      form.notebook1.MainFileName.value = oC.FileName
      form.project.MainFileName = oC.FileName
      // reset the display for the file information
      class::showFileInfo(form.CurrentFileObject)

      form.project.NeedFiles:= new Array()
      for i = 1 to alen(form.project.contents)
        oC = form.project.contents[i]
        // KK 04/15/2010 added make sure there is a fileName
        if NOT EMPTY(trim(oC.FileName))
           if oC.canBeCompiled
              if oC.FileName#form.notebook1.MAINFILENAME.value
                 //MsgBox("ifInsideInnoFiles('"+form.project.compiledExt(oC.FileName)+"')='"+form.IfInsideInnoFiles(form.project.compiledExt(oC.FileName))+"'")
                 if not form.IfInsideInnoFiles(form.project.compiledExt(oC.FileName))
                    form.project.NeedFiles.add(form.project.compiledExt(oC.FileName)+" >> DestDir: {app}")
                 endif
              endif
           else
              if oC.FileName#form.notebook1.MAINFILENAME.value
                 if not form.IfInsideInnoFiles(oC.FileName)
                    form.project.NeedFiles.add(oC.FileName+" >> DestDir: {app}")
                 endif
              endif
           endif
        endif
        //Make sure table support files are included 10/23/2012
        cDestDir = ""
        if right(oC.FileName.toUppercase(),3)='DBF'
           cFile=Substr(oC.FileName,1,len(oC.FileName)-3)
           if empty(cDestDir)
              cDestDir=form.project.InnoDestinationGetFolder(oC.FileName)
           endif
           if file(cFile+'mdx')
              if not form.IfInsideInnoFiles(cFile+'mdx')
                 form.project.NeedFiles.add(cFile+"mdx >> DestDir: "+cDestDir)
              endif
           endif
           if file(cFile+'dbt')
              if not form.IfInsideInnoFiles(cFile+'dbt')
                 form.project.NeedFiles.add(cFile+"dbt >> DestDir: "+cDestDir)
              endif
          endif
        endif
      next

        //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
      form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:= "Array form.project.NeedFiles"
      form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
      return

   function addFileToTree(oCurrent, nPos)
      LOCAL grp, item
      private oItem
      // add a file to the tree from the current contents Object
      // nPos is the position in the contents array
      grp = oCurrent.FileGroup    // get the group No
      form.tCount ++            // to make a unique ID
      cMacro = "form.treeview1.t"+form.tCount
      oGroup = form.treeFileTypes[grp]
      &cMacro. = new treeItem( oGroup)
      oItem = &cMacro.
      if oCurrent.Custom          // unused
        oItem.Text        := "Custom: " + oCurrent.Shortname
      else
        oItem.text        := oCurrent.Shortname // the shortname
      endif

      //added if file is icon display the selected icon in treeview
      //Jonny Kwekkeboom
      if val(form.project.dBaseBuild)>=1759
        //let display new suported 256 color icons...
        do case
           case oCurrent.FileType=".OCX" or;
                oCurrent.FileType=".DLL"
                //J.Kwekkeboom 12/18/2004 fixed with API call
                oItem.Image         := "Resource ocx "+form.ExplorerDllFile
                oItem.selectedImage := "Resource ocx "+form.ExplorerDllFile
                //oItem.Image         := "filename :ProjExp:dllocx.ico"
                //oItem.selectedImage := "filename :ProjExp:dllocx.ico"
                //oItem.Image         := 'resource OCX '+_app.sourceAliases[ "ProjExp" ]+"\ProjExp.dll"
                //oItem.selectedImage := 'resource OCX '+_app.sourceAliases[ "ProjExp" ]+"\ProjExp.dll"
          otherwise

                try
                  oItem.Image         := "filename "+oCurrent.FileName
                  oItem.selectedImage := "filename "+oCurrent.FileName
                catch(exception e)
                  // Added nested if test - M.Kay, dBI Inc. - 11/01/2004
//                  try
                     oItem.Image         := oCurrent.Icon
                     oItem.selectedImage := oCurrent.Icon
//                  catch (exception e)
//                     form.qlang.iMsgbox("Unable to assign icon to treeitem"+chr(13)+"File: "+oCurrent.Icon,"")
//                  endtry
                  // End M.Kay
                endtry
        endcase
      else
        oItem.Image         := oCurrent.Icon
        oItem.selectedImage := oCurrent.Icon
      endif
      oItem.bold            := oCurrent.isMain
      // custom properties
      oItem.typ            = oCurrent.FileType
      oItem.ContentsNo     = nPos
      // store the object reference to this tree item in the contents table
      // for easiear direct acces to the tree
      oCurrent.Tree       = oItem
      oItem.parent.sortChildren()
      return oItem

   function AUTHOR_onChange
      form.project.Author := this.value
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified := true
      return

   function AddToMainList(oCurrent)
      // determine if a file with the given extension can be a main program
      // or an icon or a splash file
      // and avoid adding a file twice
      do case
      case oCurrent.canBeMain
        if form.MainFilesList.scan(oCurrent.FileName) = 0
          form.MainFilesList.add(oCurrent.FileName)
        endif
        form.notebook1.mainFileName.datasource = "array form.mainFilesList"

      case upper(oCurrent.FileType) = ".ICO"
        if form.iconFilesList.scan(oCurrent.FileName) = 0
          form.iconFilesList.add(oCurrent.FileName)
        endif
        form.notebook1.iconFileName.datasource = "array form.iconFilesList"

      case upper(oCurrent.FileType) = ".BMP"
        if form.splashFilesList.scan(oCurrent.FileName) = 0
          form.splashFilesList.add(oCurrent.FileName)
        endif
        form.notebook1.splashFileName.datasource = "array form.splashFilesList"
      endcase
      return

   function ALIASFOLDER_key(nChar, nPosition,bShift,bControl)
      with form.notebook1.innonotebook
        Alias_Del.enabled:=form.project.BDEAlias.size>0
        AliasDriver.enabled:=not empty(AliasName.value) and not empty(AliasFolder.value)
        AliasDel.enabled:=AliasDriver.enabled
        I_BDECHANGER.enabled:=form.project.BDEAlias.size>0
      endwith
      return
   

   function BDEOFFCHECK_onChange()
	   form.project.bdeoption = iif(this.value,0,1)
      class::I_UpdateValues()
      return
		

   function BDE_USESETTINGS_onChange
      with form.notebook1.innonotebook
         BDE_MaxFileHandle.enabled:=this.value
         BDE_LangDriver.enabled:=this.value
         BDE_Level.enabled:=this.value
         BDE_MemoBlockSize.enabled:=this.value
         BDE_MDXBlockSize.enabled:=this.value
      endwith
      form.project.BDEUseSettings:=this.value
      class::I_UpdateValues()
      return

   function I_BDE_Refresh
   Local cText,I
      class::Freeze()
      with form.notebook1.innonotebook
         I_BDECHANGER.enabled:=false
         I=ALIAS_LBOX.cursel
         cText="Alias: "
         if ALIASDEL.value
            cText+="-"
         endif
         cText+=ALIASName.value+"; Driver: "+AliasDriver.value+"; Folder: "+AliasFolder.value+";"
         form.project.BDEAlias[i]=cText
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         Alias_LBox.dataSource := NULL
         ALIAS_LBox.dataSource:="Array form.project.BDEAlias"
         ALIAS_LBOX.cursel:=i
      endwith
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      class::UnFreeze()
   return

   function I_DBENGINENAME_onChange
      //new added for individual Dbase engine file
      //J.Kwekkeboom 12/17/2004
      if not file(this.value)
         form.qLang.iMsgBox("File "+this.value+" does not exist","Attention",48)
         this.value := ""
      else
         //D.Brooks 12/22/2004 - replaced dBASEEngineName with dBASERuntimeDir
         //KK (08/20/2012) - replaced dBaseRuntimeDir with dBaseRuntimeInstDir
         form.project.dBASERuntimeInstDir:=this.value
         //form.project.dBASEEngineName:=this.value
         class::I_UpdateValues()
      endif
   return

   function I_DBENGINEPB_onClick
   Local cFile
      //new added for individual Dbase engine file
      //J.Kwekkeboom 12/17/2004
      cFile='*.exe'
      //D.Brooks 12/22/2004 - replaced dBASEEngineName with dBASERuntimeDir
      //KK (08/20/2012) - replaced dBaseRuntimeDir with dBaseRuntimeInstDir
      if not empty(form.project.dBASERuntimeInstDir)
         cFile:=form.project.dBASERuntimeInstDir
      endif
//      if not empty(form.project.dBASEEngineName)
//         cFile:=form.project.dBASEEngineName
//      endif
      cFile:=Getfile(cFile,'dBase Plus Runtime Engine')
      if not empty(cFile)
         if lower(form.project.getShortName(cFile))='plusrun.exe' or ;
            lower(form.project.getShortName(cFile))='db2krun.exe'
            //!!!cannot be so this are the normal dBase Runtime files!!!!
            form.qLang.iMsgBox("File is not a dBASE Runtime installer","Alert",16)
         else
            //KK (08/20/2012) - replaced dBaseRuntimeDir with dBaseRuntimeInstDir
            form.project.dBASERuntimeInstDir:=cFile
            //form.project.dBASEEngineName:=cFile
            form.notebook1.innonotebook.c1.I_DBEngineName.Value:=cFile
            class::I_UpdateValues()
         endif
      endif
      form.notebook1.innonotebook.cursel--
      form.notebook1.innonotebook.cursel++
      return

   function I_AliasOnChange
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      with form.notebook1.innonotebook
        Alias_Del.enabled:=form.project.BDEAlias.size>0
        AliasDriver.enabled:=not empty(AliasName.value) and not empty(AliasFolder.value)
        AliasDel.enabled:=AliasDriver.enabled
        //D.Brooks 11/10/2004 - I_BDECHANGER shouldn't be active unless there
        //is an item that can be changed.
        I_BDECHANGER.enabled:=form.project.BDEAlias.size>0
        //I_BDECHANGER.enabled:=true
      endwith

   function I_ALIAS_ADD_onClick
      if not form.notebook1.innonotebook.AliasDriver.enabled
         form.qLang.iMsgBox("Required fields not defined!","Cannot Add",16,"")
         form.notebook1.innonotebook.AliasName.setfocus()
         return
      endif
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      Local cText
      class::Freeze()
      with form.notebook1.innonotebook
         cText="Alias: "
         if ALIASDEL.value
            cText+="-"
         endif
         cText+=ALIASName.value+"; Driver: "+AliasDriver.value+"; Folder: "+AliasFolder.value+";"
         form.project.BDEAlias.add(cText)
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         ALIAS_LBox.dataSource := NULL
         ALIAS_LBox.dataSource:="Array form.project.BDEAlias"
         ALIAS_LBOX.cursel:=form.project.BDEAlias.size
         //D.Brooks 11/10/2004 - Delete button should automatically activate
         //when an alias is added.
         ALIAS_DEL.enabled:=form.project.BDEAlias.size>0
         cursel := 5
         cursel := 6
         msgbox(cText)
      endwith
      class::UnFreeze()
      form.notebook1.innonotebook.ALIAS_LBox.setfocus()
      return

   function I_ALIAS_DEL_onClick
   local aArr
      aArr = form.NOTEBOOK1.INNONOTEBOOK.ALIAS_LBOX.selected()
      if form.qLang.iMsgBox("Do you want remove this %1 item?","Remove",36,"1")#6
         return
      endif

      Local x,z,cSeek,nCount
      nCount=0
      z=0
      for x=1 to form.project.BDEAlias.size
          if aArr==form.project.BDEAlias[x]
             z=x-1
             form.project.BDEAlias.delete(x)
             nCount++
             exit
          endif
      next
      if nCount>0
         nCount:=form.project.BDEAlias.size-nCount
         //D.Brooks 11/09/2004 - Removing message box with only a number.
         //msgbox(""+nCount)
         if nCount>0
            form.project.BDEAlias.resize(nCount)
         else
            form.project.BDEAlias=new Array()
         endif
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.ALIAS_LBox.dataSource := NULL
         form.notebook1.innonotebook.ALIAS_LBOX.dataSource:="Array form.project.BDEAlias"
         if Z>0
            form.notebook1.innonotebook.ALIAS_LBOX.cursel=z
         endif
         //D.Brooks 11/24/2004 - use method instead
         class::I_UpdateValues()
//         form.project.modified:=true
//         form.ScriptIsGenerate:=false
      endif
      form.notebook1.innonotebook.ALIAS_DEL.enabled:=(form.project.BDEAlias.size>0)
      //D.Brooks 11/10/2004 - I_BDECHANGER should only be enabled if there are
      //still items left.
      form.notebook1.innonotebook.I_BDECHANGER.enabled:=form.project.BDEAlias.size>0
      return

   function I_ALIAS_LBOX_onLeftMouseUp(flags, col, row)
      //D.Brooks 11/10/2004 - make sure that something is selected before
      //calling I_DispAlias.
      if this.cursel > 0
         class::I_DispAlias(this.cursel,true)
      endif
      return

   function removeFromMainList(oCurrent)
      local nIndex, cComboboxValue
      // determine if a file with the given extension is a main program
      // or an icon or a splash file
      // remove this from the ppropriate list
      do case
      case oCurrent.canBeMain
        nIndex = form.MainFilesList.scan(oCurrent.FileName)
        if nIndex > 0
          form.MainFilesList.delete(nIndex)
          form.mainFilesList.resize(aLen(form.mainFilesList) - 1)
        endif
        if oCurrent.isMain
          form.Project.MainFileName := ""
         endif
        form.notebook1.mainFileName.datasource = "array form.mainFilesList"

      case upper(oCurrent.FileType) = ".ICO"
        nIndex = form.iconFilesList.scan(oCurrent.FileName)
        if nIndex> 0
          form.iconFilesList.delete(nIndex)
          form.iconFilesList.resize(alen(form.iconFilesList)-1)
        endif
        if oCurrent.FileName == form.Project.iconFileName
          form.Project.iconFileName := ""
          cComboboxValue = form.iconFilesList[1]
        else
          cComboboxValue = form.notebook1.iconFileName.value
        endif
        form.notebook1.iconFileName.datasource = "array form.iconFilesList"
        form.notebook1.iconFileName.value  = cComboboxValue

      case upper(oCurrent.FileType) = ".BMP"
        nIndex = form.splashFilesList.scan(oCurrent.FileName)
        if nIndex > 0
          form.splashFilesList.delete(nIndex)
          form.splashFilesList.resize(aLen(form.splashFilesList)-1)
        endif
        if oCurrent.FileName == form.Project.splashFileName
          form.Project.splashFileName := ""
          cComboboxValue = form.splashFilesList[1]
        else
          cComboboxValue = form.notebook1.splashFileName.value
        endif
        form.notebook1.splashFileName.datasource = "array form.splashFilesList"
        form.notebook1.splashFileName.value  = cComboboxValue

      endcase
      return

   function newProject()
      class::checkSave()
      form.startProject = class::getNextName('Untitled')

      form.Project = form.getNewProjObj()

      form.project.loadFileTypes()
      class::clearForm()
      // assign a list of valid deo Targets for file assignment
      class::assignValidDeoTargets()
      class::TitleBarUpdate()
      return

   function assignValidDeoTargets()
      // files can be assigned to specific deo target libraries
      // the combobox on the files details will display only deo-targets
      // which have a path name assigned
      LOCAL i
      form.validDeoList = new array()
      form.validDeoList.add(" ")       // to allow a blank display
      for i = 1 to alen(form.project.deoList)
        if not empty(substr(form.project.deoList[i],3))
          form.validDeoList.add(form.project.deoList[i])
        endif
      next
      form.notebook1.filenotebook.deoTarget.datasource ="array form.validDeoList"
      return

   function NOTEBOOK1_canSelChange(nTo)
      //RETURN (nTo # form.nBFilesPage) or (form.treeview1.selected.typ # "H")
      return true

   function NOTEBOOK1_onSelChange

      if this.cursel <> form.nBLogPage
         form.project.releaseLog()
      endif

      do case
         case this.cursel = form.nBLogPage
            class::showLog()

         // QAID:5771 - 06/05/2006 - Dave Casler
         // Add test to check if the specified script output folder exists
         case this.cursel = form.nBInnoPage
            if (form.NOTEBOOK1.InnoNotebook.cursel = 8) //Script tab

               // QAID:5771 - 06/05/2006 - Dave Casler
               // Add test to check if the specified script output folder exists
               class::CheckRightFolder()
            endif

      endcase

      form.notePage = this.cursel
      return

   function ICONFILENAME_onChange
      form.project.Modified := true
      if left(this.value,1) = "<" // indicates <none>
         form.project.iconFileName := ""
      else
         form.project.iconFileName := this.value
      endif
      return true

   function SPLASHFILENAME_onChange
      form.project.Modified := true
      if left(this.value,1) = "<" // indicates <none>
         form.project.splashFileName := ""
      else
         form.project.splashFileName := this.value
      endif
      return true

   function rebuildAll()
      local cSafety, f, nSize, bSuccess, cExeFile, cOldStatus

      if not class::checkCompleted()
        return
      endif

      if not class::checkSave()
        return
      endif

      cExeFile = form.Project.getFullPath(form.Project.exename)
      if file(cExeFile) and form.Verbose
         if form.qLang.iMsgBox('%1 already exists. Overwrite it?','Already Exists',36,cExeFile) # 6
            return
         endif
      endif

      cSafety = set('Safety')
      set safety off

      // compile all compilable files and build an exe
      proj = form.Project.FileName
      form.notebook1.cursel = form.nBLogPage
      cOldStatus = form.notebook1.LogFileStatus.text
      //form.notebook1.logProgressText.text = "Building "+proj
      form.notebook1.LogFileStatus.text = form.qLang.iGetText("Building")+" "+proj
      form.repaint()

      bSuccess = form.project.rebuild()

      //form.notebook1.logProgressText.text := ""
      form.notebook1.LogFileStatus.text := cOldStatus

      form.repaint()
      _app.executeMessages()

      if bSuccess and form.Verbose
         f = new file()
         nSize = f.size(cExeFile)
         form.qLang.iMsgBox("File: %1 Size: %2",'Build Completed',64,cExeFile+chr(13),""+nSize)
      endif

      if bSuccess and not form.project.webApplication
//         form.NOTEBOOK1.dataSource = 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO","Inno"}'
         if form.project.Needfiles.size=0
            class::SetAllFilesToInno()
         endif
         if not class::IfInsideInnoFiles(cExeFile)
            form.project.NeedFiles.add(cExeFile+" >> DestDir: {app}")

            //QAID: 5315 - D.Brooks - 03/30/2005
            class::I_UpdateValues()

            //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
            form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
            form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
            //D.Brooks 11/09/2004 - Update the Flags button
            form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
         endif
         class::CreateInnoGroupFilesFromPrj()
      //D.Brooks 11/12/2004 - Contains unknown variables
      //else
      //   form.NOTEBOOK1.dataSource = 'ARRAY {"'+TransText1+'","'+TransText2+'","Log","DEO"}'
      endif

      if cSafety = "ON"
         set safety on
      else
         set safety off
      endif

      //QAID: 5188 - D.Brooks - 02/24/2005
      //QAID: 5315 - D.Brooks - 03/30/2005 - moved to if statement
      //class::I_UpdateValues()

      if form.notebook1.cursel <> 3
         form.notebook1.cursel:=3
      endif

      //form.repaint()
      //_app.executeMessages()
      //form.NOTEBOOK1.LOGEDITOR.enabled = true
      //form.NOTEBOOK1.LOGEDITOR.scrollbar := 0
      //form.NOTEBOOK1.LOGEDITOR.scrollbar := 2
      //_app.executeMessages()

//      form.NOTEBOOK1.LOGEDITOR.keyboard("{Ctrl+End}")
//      _app.executeMessages()
//
//      this.showLog()

      return

   function buildExe()  
      // this builds the exe only
      local bSuccess, cSafety, f, nSize, cExeFile, cOldStatus

      if form.project.enableuac = 0
         cUACopt = "NONE"
      else if form.project.enableuac = 1
         cUACopt = "ON"
		else if form.project.enableuac = 2
			cUACopt = "OFF"
      endif
		
		if form.project.runtimeinbuild = 1
		   cRUNTIME = "RTEXE"
		else
			cRUNTIME = ""
		endif	
		
		if form.project.bdeoption = 0
		   nBDEOption = 0
		else
			nBDEOption = 1
		endif	

      if not class::checkCompleted()
        return
      endif

      if not class::checkSave()
        return
      endif

      cExeFile = form.Project.getFullPath(form.Project.exename)
      if file(cExeFile) and form.Verbose
         if form.qLang.iMsgBox('%1 already exists. Overwrite it?','Already Exists',36,cExefile) # 6
            return
         endif
      endif

      cSafety = set('Safety')
      set safety off

      proj = form.Project.FileName
      form.notebook1.cursel = form.nBLogPage
      cOldStatus = form.notebook1.LogFileStatus.text
      //form.notebook1.logProgressText.text = "Building "+proj
      form.notebook1.LogFileStatus.text = form.qLang.iGetText("Building ")+proj
      //MsgBox("form.project.build(null, "+cUACopt+")")
      bSuccess = form.project.build(null, cUACopt, cRUNTIME, nBDEOption) 
      //form.notebook1.logProgressText.text = ""
      form.notebook1.LogFileStatus.text = cOldStatus
      if bSuccess and form.Verbose
         f = new file()
         nSize = f.size(cExeFile)
         form.qLang.iMsgBox("File: %1 Size: %2",'Build Completed',64,cExeFile+chr(13),""+nSize)
      endif

      if cSafety = "ON"
         set safety on
      else
         set safety off
      endif

      class::Freeze()

      if bSuccess and not form.project.webApplication
         //removed for let InnoTab always display!!
         //J.Kwekkeboom 12/16/2004
         //form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO","Inno"}'
         if form.project.Needfiles.size=0
            class::SetAllFilesToInno()
         endif
         if not class::IfInsideInnoFiles(cExeFile)
            form.project.NeedFiles.add(cExeFile+" >> DestDir: {app}")

            //QAID: 5315 - D.Brooks - 03/30/2005
            class::I_UpdateValues()

            //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
            form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
            form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
            form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
            //D.Brooks 11/09/2004 - Update the Flags button
            form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
         endif
         class::CreateInnoGroupFilesFromPrj()
         class::Set_InnoSourceFolder()
      else
         //removed for let InnoTab always display!!
         //J.Kwekkeboom 12/16/2004
         //form.NOTEBOOK1.dataSource:= 'ARRAY {"'+form.qLang.iGetText("Project")+'","'+form.qLang.iGetText("File Details")+'","Log","DEO"}'
      endif
      form.notebook1.cursel:= form.nBLogPage
      //J. Kwekkeboom  02/05/2005
         //added for QAID 5188
      //QAID: 5315 - D.Brooks - 03/30/2005 - moved to if statement
      //class::I_UpdateValues()
      class::UnFreeze()
      return

   //Jonny Kwekkeboom 12/27/2004
   //added for new support drop table with BDE-Alias in it...

   function GetDatabaseDir
   parameters cDatabase
   local oDatabase
      /*
         Returns the path for the alias supplied
         as a parameter (null if it does not exist)

         Based on code posted by Romain Strieff
         in the Visual dBASE Newsgroups

         Modified to accept a string for an alias name
         instead of a database object by Gary White
      */
      cRet = null
      if type("cDatabase") == "C" and not empty(cDatabase)
         if form.project.databaseFound( cDatabase )
            if type("GetAliasPath") # "FP"
               extern cint GetAliasPath(cHandle,cString,;
                  cString,cString);
                  IDAPI32 from "DbiFormFullName"
            endif
            cRet=space(261)
            oDatabase = new database()
            oDatabase.databaseName := cDatabase
            oDatabase.active := true
            if ( GetAliasPath(oDatabase.handle,"DummyTableName","",cRet ) == 0 )
               cRet=cRet.left(cRet.lefttrim().lastindexof("\"))
               else
               cRet=""
            endif
            oDatabase.active := false
            release object oDatabase
         endif
      endif
   return cRet

   function checkDropped(cT,aF)
      LOCAL i, x, n, ext, currentObject, iCurrent, bCanAdd, cShort, cFile, bAdded
      private aFiles

// M.Kay -TEST - 01/29/2013
//? "cT",ct
//? "aF",aF

      aFiles = aF
      // parameters type - must be F
      // and filename
      if empty(aFiles) or cT <> "F"
        return false
      endif

      // If string is sent
      if type('aFiles') # 'A'
         // create array
         aFiles = new array()
         aFiles.add(aF)
      endif
      
      // Multi-select is allowed, so go through
      // all files in the array

      //J.Kwekkeboom 12/21/2004 - only refresh if ile are added!
      bAdded=false
      for n = 1 to alen(aFiles,1)

         bCanAdd = true
         cF = aFiles[n]

         //Jonny Kwekkeboom 12/27/2004
         //new support also get Tables from BDE Alias if find!
         if asc(substr(cF,1,1)) = 58  
            //get foldername out of BDE Alias ....
            Local cAlias
            cAlias=form.GetDatabaseDir(substr(cf,2,cf.LastIndexOf(':')-1));
                   +'\'+substr(cf,cf.LastIndexOf(':')+2)
            if file(cAlias)
               cF:=cAlias
            endif
         endif
         
         // loop thru the project contents to check for duplicates
         //   KK 01/26/10 added form.Project.getFullPath(...
         //   to evaluate the duplication of files properly. 
         for i = 1 to alen(form.project.Contents)
            if upper(form.Project.getFullPath(form.project.contents[i].FileName)) = upper(Form.Project.getFullPath(cF)) or;
               upper((form.project.compiledExt(form.Project.GetFullPath(form.project.contents[i].FileName)))) = upper(form.Project.getFullPath(cF))
               form.qLang.iMsgBox("%1 already contained in project","Cannot Add",16,form.Project.getShortName(cF))
               bCanAdd = false
            endif
         next

         // Do not allow database tables, only tables from folders
         //if substr(cF,1,1) = ':'
         //BMM another Danish LD workaround
         if asc(substr(cF,1,1)) = 58
            form.qLang.iMsgBox('%1: Filename contains a colon, it may be a database alias.%2 Tables may only be added from folders.','Cannot Add',16,cF,""+chr(13))
            bCanAdd = false
         endif

         if bCanAdd
            x=rat("\",cF)
            shortname = iif(x>0,substr(cF,x+1),cF)
            x=rat(".",shortName)
            ext = iif(x>0,upper(substr(shortname,x)),"")
            // add a new object to the contents array using the projectObjects Class
            form.project.contents.add(new projectObject())
            currentObject = form.project.contents[aLen(form.project.contents)]
            currentObject.FileName  = cF
            //added by KK 01/26/10 - make sure path format of new fileName is set correctly
            currentObject.FileName = form.Project.resolveSavePath(currentObject,true)
            currentObject.shortname = shortName
            currentObject.FileType  =  ext
            // determine which group this file belongs to and which image to display
            // these are stored in contents n,7 and n,8
            form.project.setFileProperties(currentObject)
            //currentObject.included = not form.notebook1.DEOApplicationCheck.value//BMM
            currentObject.included = form.addAsIncluded( currentObject.FileType )
            class::addToMainList(currentObject)
            form.project.Modified := true

            iCurrent=class::addFileToTree(form.project.contents[aLen(form.project.contents)],aLen(form.project.contents))
            iCurrent.parent.expanded = true
            iCurrent.select()

            bAdded=TRUE

            if currentObject.canBeCompiled
               if currentObject.FileName#form.notebook1.MAINFILENAME.value
                  if not form.IfInsideInnoFiles(form.project.compiledExt(currentObject.FileName))
                     //D.Brooks 12/21/2004 - QAID 5113 - Do not add if part of exe
                     if not currentObject.included
                        form.project.NeedFiles.add(form.project.compiledExt(currentObject.FileName)+" >> DestDir: {app}")
                     endif
                  endif
               endif
            else
               Local cDestDir
               cDestDir=''
               if currentObject.FileName#form.notebook1.MAINFILENAME.value
                  if not form.IfInsideInnoFiles(currentObject.FileName)
                     //Added for Destdir relative to MainFilename folder
                     //J. Kwekkeboom 10/14/2005
                     cDestDir=form.project.InnoDestinationGetFolder(currentObject.FileName)
                     //form.project.NeedFiles.add(currentObject.FileName+" >> DestDir: {app}")
                     form.project.NeedFiles.add(currentObject.FileName+" >> DestDir: "+cDestDir)
                  endif
                  //J.Kwekkeboom 12/18/2004 - added for
                  //automatically support mdx and dbt to inno files
                  if right(currentObject.FileName.toUppercase(),3)='DBF'
                     cFile=Substr(currentObject.FileName,1,len(currentObject.FileName)-3)

                     if empty(cDestDir)
                        cDestDir=form.project.InnoDestinationGetFolder(currentObject.FileName)
                     endif

                     if file(cFile+'mdx')
                        if not form.IfInsideInnoFiles(cFile+'mdx')
                           //Added for Destdir relative to MainFilename folder
                           //J. Kwekkeboom 10/14/2005
                           //*** DestDir defined above in IF !!
                           //form.project.NeedFiles.add(cFile+"mdx >> DestDir: {app}")
                           form.project.NeedFiles.add(cFile+"mdx >> DestDir: "+cDestDir)
                        endif
                     endif
                     if file(cFile+'dbt')
                        if not form.IfInsideInnoFiles(cFile+'dbt')
                           //Added for Destdir relative to MainFilename folder
                           //J. Kwekkeboom 10/14/2005
                           //*** DestDir defined above in IF !!
                           //form.project.NeedFiles.add(cFile+"dbt >> DestDir: {app}")
                           form.project.NeedFiles.add(cFile+"dbt >> DestDir: "+cDestDir)
                        endif
                     endif
                  endif
               endif
            endif
            class::fileSelected(currentObject.FileName)
         endif

      next
      if bAdded
         //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
         form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:= "Array form.project.NeedFiles"
         form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
      endif

      form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
      //D.Brooks 11/09/2004 - Update the Flags button
      form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)

      //J.Kwekkeboom 12/14/2004 for let display all correct if
      //File are dropped on project....
      if bAdded
         form.freeze()
         form.notebook1.cursel++
         form.notebook1.cursel--
         form.UnFreeze()
      endif
      return true



















   function addAsIncluded( cExt )
      if form.notebook1.DEOApplicationCheck.value
         return false
      elseif upper( cExt ) $ ".WFM|.WFO|.CFM|.CFO|.MNU|.MNO|.POP|.POO|.REP|.REO"+;
            "|.CRP|.CRO|.LAB|.LAO|.PRG|.PRO|.DMD|.DMO|.CDM|.CDO|.CC|.CO"
         return true
      else
         return false
      endif



















   function addFiles()
      LOCAL cSkeleton, a, cFileTypesList, oParentText, oItemText

      // Defaults
      cFileTypesList = ".*"
      cSkeleton = "*.*"

      oItemText = this.Treeview1.selected.text
      if type('this.treeView1.selected.text') = 'O'
         oParentText= this.Treeview1.selected.parent.text
      else
         oParentText = ' '
      endif
      // check currently selected item to determine
      // what skeleton to use
      if oItemText = 'Project'
         cFileTypesList = "prj, .*"
         cSkeleton = "*.*"
      elseif oItemText = "Form" or oParentText = 'Form'
         cFileTypesList = 'wfm, wfo, cfm, cfo, mnu, mno, pop, poo, .*'
         cSkeleton = '*.wfm'
      elseif oItemText = "Program" or oParentText = 'Program'
         cFileTypesList = 'prg, pro, .*'
         cSkeleton = '*.prg'
      elseif oItemText = "Report" or oParentText = "Report"
         cFileTypesList = 'rep, reo, crp, cro, lab, lao, .*'
         cSkeleton = '*.rep'
      elseif oItemText = "Desktop Tables" or oParentText = 'Desktop Tables'
         cFileTypesList = 'dbf, db, dat, .*'
         cSkeleton = '*.dbf'
      elseif oItemText = "SQL" or oParentText = 'SQL'
         cFileTypesList = 'sql, .*'
         cSkeleton = '*.sql'
      elseif oItemText = 'Datamodule' or oParentText = 'Datamodule'
         cFileTypesList = 'dmd, cdm, dmo, cdo, .*'
         cSkeleton = '*.dmd'
      elseif oItemText = 'Graphic' or oParentText = 'Graphic'
         cFileTypesList = 'jpg, jpeg, bmp, tif, tiff, png, wmf, ico, .*'
         cSkeleton = '*.jpg'
      elseif oItemText = 'DLL/OCX' or oParentText = 'DLL/OCX'
         cFileTypesList = 'dll, ocx, .*'
         cSkeleton = '*.dll'
      endif

      a = new array()
      a.getFile(cSkeleton,form.qLang.iGetText("Add Files"),true,cFileTypesList)
      if alen(a,1) = 0
        return false
      endif
      // use the checkDropped method to add the file
      class::checkDropped("F",a)
      return true



















   function checkToolBar()
      // This function should be called in the form.onGotFocus event.
      // The user indicates ToolBar preference with _app.speedBar.
      // Setup custom ToolBars only if the user wants ToolBars as
      // indicated in the setting of _app.speedBar.
      // Otherwise, make sure the custom ToolBars are not displayed
      // while this form has focus.
      //form.tBar = findinstance("pBuilderTBar")

      if _app.speedBar  // Only attach custom toolbar if _app.speedBar is true.

         // M.Kay - Check if user changed LargeButtons preference
         // if so, destroy current toolbar and recreate it
         if type('form.tBar') = 'O' and not empty(form.tBar)

            if form.tBar.GetHasLargeImages() <> form.tBar.UseLargeImages()                     
               // ToolBar Size was changed
               // Destroy old toolbar
               form.tBar.detach(form)
               release object form.tBar
               form.tBar = null
            endif
         endif


         if type('form.tBar') # 'O' or empty(form.tBar)
            form.tBar = new pBuilderTBar()
         endif


         try
            form.tBar.attach(form)
         catch (Exception e)
            // Ignore already attached error
         endtry
      elseif (type("form.tBar") == "O") and (not empty(form.tBar)) and;
                       (not empty(form.tBar.form))
         try
            form.tBar.detach(form)
         catch(exception e)
            // Ignore not attached error
         endTry
      endIf
      //form.setFocus()
      return



















    function removeFiles()
       LOCAL cString, cFile, x, nResize
       // remove the file marked from a project
       if form.treeview1.selected.typ <> "H"

          if form.Verbose
             cString=form.qLang.iGetText("Are you sure you want to remove") + ;
                 " " + trim(form.currentFileObject.FileName) + ;
                 " " + form.qLang.iGetText("from this project?")

             nResult = msgbox(cString ,form.qLang.iGetText("Remove"),36)
             if nResult # 6

                return

             endif
          endif

          //J.Kwekkeboom 12/18/2004 - must be also removed from
          //Inno files if insert !!
          form.currentContentsNo = form.treeview1.selected.ContentsNo
          cFile=class::CheckSourceAlias(form.project.Contents[form.currentContentsNo].FileName)
          if form.project.Contents[form.currentContentsNo].canBeCompiled
             //get always a compiled version name
             //source will be no deployed ;)
             cFile:=form.project.compiledExt(cFile)
          endif
          //if file inside so we can be removed...
          x=class::InnoFileItem(cFile)
          if x>0
             nResize=1
             form.project.NeedFiles.delete(x)
             //MsgBox("REMOVEFILES - INNO file:"+cFile+" #"+x+" DELETED!")
             //now we check of this is a DBF file
             //so MDX and DBT also must be removed
             if right(cFile.toUppercase(),4)='.DBF'
                cFile:=substr(cFile,1,len(cFile)-3)
                x:=class::InnoFileItem(cFile+"mdx")
                if x>0
                   nResize=2
                   form.project.NeedFiles.delete(x)
                endif
                x:=class::InnoFileItem(cFile+"dbt")
                if x>0
                   nResize=3
                   form.project.NeedFiles.delete(x)
                endif
             endif
             if form.project.NeedFiles.size-nResize=0
                form.project.NeedFiles:=new Array()
             else
                form.project.NeedFiles.resize(form.project.NeedFiles.size-nResize)
             endif
             //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
             form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource := NULL
             form.notebook1.innonotebook.I_FILESSUBFOLDER_LBOX.dataSource:="Array form.project.NeedFiles"
             form.notebook1.innonotebook.I_FILE_DEL.enabled:=(form.project.NeedFiles.size>0)
             form.notebook1.innonotebook.I_FILESSUBFOLDER_ADD.enabled:=(form.project.NeedFiles.size>0)
             form.notebook1.innonotebook.I_DISPFLAG.enabled:=(form.project.NeedFiles.size>0)
          endif
          //***************

          form.bLoading = true

          // remove this file fromm any lists
          form.currentContentsNo = form.treeview1.selected.ContentsNo
          form.currentFileObject = form.project.contents[form.currentContentsNo]
          class::removeFromMainList(form.currentFileObject)

          // delete the file entry from the project contents
          //form.Project.Contents.delete(form.currentContentsNo)
          //form.Project.Contents.size = form.Project.Contents.size-1

          form.currentFileObject.FileName := ""

          //J.Kwekkeboom 12/21/2004 - add all GroupFiles now also
          class::CreateInnoGroupFilesFromNeedFiles()

          if type('form.treeview1.selected') = 'O' and ;
             not empty(form.treeview1.selected)
             form.treeview1.selected.release()
           endif
          form.treeview1.tRoot.select()

          form.project.Modified := true
          form.bLoading = false
          class::treeview1_onChange()

       endif
       return



















   function compileProg()
   LOCAL cSourceFileName, bCompileSuccess, cOldStatus
      if form.treeview1.selected.typ <> "H"
         if form.currentFileObject.canBeCompiled
            cSourceFileName = form.Project.getFullPath(form.currentFileObject.FileName)

            if not file(cSourceFileName)
               form.qLang.iMsgBox('File not found: %1','Cannot Compile',16,cSourceFileName)
               return
            endif

            form.notebook1.cursel = form.nBLogPage
            cOldStatus = form.notebook1.LogFileStatus.text
            //form.notebook1.logProgressText.text = "Compiling "+cSourceFileName
            form.notebook1.LogFileStatus.text = form.qLang.iGetText("Compiling ")+cSourceFileName
            form.repaint()

            bCompileSuccess = form.Project.compileProg()

            if form.Verbose
               if bCompileSuccess
                  form.qLang.iMsgBox("%1 compiled",'Compile Complete',64,cSourceFileName)
               else
                  form.qLang.iMsgBox("%1 compile failed.%2Check the project log.",'Compile Failure',64,cSourceFileName,""+chr(13))
               endif
            endif
            //form.notebook1.logProgressText.text = ""
            form.notebook1.LogFileStatus.text = cOldStatus

         endif
      endif
      return



















   function compileAll
      local cSafety, bSuccess, cOldStatus
      cSafety = set('Safety')
      set safety off

      form.notebook1.cursel = form.nBLogPage
      cOldStatus = form.notebook1.LogFileStatus.text
      //form.notebook1.logProgressText.text = "Compiling all "+form.Project.FileName
      form.notebook1.LogFileStatus.text = form.qLang.iGetText("Compiling all ")+form.Project.FileName
      form.repaint()

      bSuccess = form.project.compileAll()

      if form.Verbose
         if bSuccess
            form.qLang.iMsgBox("All files compiled.",'Compile Complete',64)
         else
            form.qLang.iMsgBox("1 or more compiles failed or files missing. Check the project log.",'Compile Failure',64)
         endif
      endif
      //form.notebook1.logProgressText.text = ""
      form.notebook1.LogFileStatus.text = cOldStatus

      if cSafety = "ON"
         set safety on
      else
         set safety off
      endif

      return



















    function showLog()
       LOCAL cString, cLogFile

       //QAID: 5176 - D.Brooks - 09/23/2005
       //form.Cursor.beginWait()
       hourGlass(true, _app.FrameWin.hWnd)
       //End QAID: 5176

       cLogFile = form.Project.getFullPath(form.notebook1.logFileName.value)
       do case
       case empty(form.notebook1.logFileName.value)
         cString = form.qLang.iGetText("Logfile not specified")
       case not file(cLogFile)
         cString = form.qLang.iGetText("Logfile ")+trim(cLogFile)+form.qLang.iGetText(" not found")
       otherwise
         cString = form.qLang.iGetText("LogFile: ") + cLogFile
         form.project.datalinkLog()
       endcase
       form.notebook1.logfilestatus.text = cString

       //QAID: 5176 - D.Brooks - 09/23/2005
       //form.Cursor.endWait()
       hourGlass(false)
       //End QAID: 5176

       form.notebook1.logEditor.keyboard("{Ctrl+End}{Home}")
       return



















   function editProg()
      if form.treeview1.selected.typ <> "H"
         if form.CurrentFileObject.canBeEdited
            nam = form.Project.getFullPath(form.CurrentFileObject.FileName)
             if not file(nam)
               form.qLang.iMsgBox('File not found%1%2','Cannot Open in Source Editor',16,""+chr(13),nam)
               return
             endif
            modi comm (nam)
         endif
      endif
      return



















   function I_Liz_onChange
      if empty(this.value)
         return
      endif
      //D.Brooks 12/06/2004 - components have been removed.
//      form.notebook1.innonotebook.TEXTLABEL12.text:=""
//      form.notebook1.innonotebook.I_LANGFILE.visible:=false
//      form.notebook1.innonotebook.I_LANGFILE_PB.visible:=false
      Local cSeek
      cSeek= left(this.value.toUppercase(),2)
      //J.Kwekkeboom 01/20/2007 - added for Dansk and Polish
      if cSeek = "DA" 
         cSeek = "DK"
      elseif cSeek = "PO"
         cSeek = "PL"
      endif
      do case
         case cSeek="EN"
              form.notebook1.innonotebook.l_ef1.value:=form.project.ENLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.ENBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.ENAfter
              form.notebook1.innonotebook.Lang_CB.value:="English"
         case cSeek="DE"
              form.notebook1.innonotebook.l_ef1.value:=form.project.DELicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.DEBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.DEAfter
              form.notebook1.innonotebook.Lang_CB.value:="Deutsch"
         case cSeek="ES"
              form.notebook1.innonotebook.l_ef1.value:=form.project.ESLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.ESBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.ESAfter
              form.notebook1.innonotebook.Lang_CB.value:="Español"
              //D.Brooks 12/06/2004 - components have been removed.
//              form.notebook1.innonotebook.I_LANGFILE.visible:=true
//              form.notebook1.innonotebook.TEXTLABEL12.text:= "Español "+form.qLang.iGetText("Language file")
//              form.notebook1.innonotebook.I_LANGFILE_PB.visible:=true
         case cSeek="IT"
              form.notebook1.innonotebook.l_ef1.value:=form.project.ITLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.ITBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.ITAfter
              form.notebook1.innonotebook.Lang_CB.value:="Italian"
              //D.Brooks 12/06/2004 - components have been removed.
//              form.notebook1.innonotebook.I_LANGFILE.visible:=true
//              form.notebook1.innonotebook.TEXTLABEL12.text:= "Italian "+form.qLang.iGetText("Language file")
//              form.notebook1.innonotebook.I_LANGFILE_PB.visible:=true
         case cSeek="JA"
              form.notebook1.innonotebook.l_ef1.value:=form.project.JALicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.JABefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.JAAfter
              form.notebook1.innonotebook.Lang_CB.value:="Japan"
              //D.Brooks 12/06/2004 - components have been removed.
//              form.notebook1.innonotebook.I_LANGFILE.visible:=true
//              form.notebook1.innonotebook.TEXTLABEL12.text:= "Japan "+form.qLang.iGetText("Language file")
//              form.notebook1.innonotebook.I_LANGFILE_PB.visible:=true
         case cSeek="FR"
              form.notebook1.innonotebook.l_ef1.value:=form.project.FRLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.FRBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.FRAfter
              form.notebook1.innonotebook.Lang_CB.value:="France"
         case cSeek="DK"
              form.notebook1.innonotebook.l_ef1.value:=form.project.DKLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.DKBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.DKAfter
              form.notebook1.innonotebook.Lang_CB.value:="Dansk"
         case cSeek="PL"
              form.notebook1.innonotebook.l_ef1.value:=form.project.PLLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.PLBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.PLAfter
              form.notebook1.innonotebook.Lang_CB.value:="Polish"
         otherwise
              form.notebook1.innonotebook.l_ef1.value:=form.project.NLLicense
              form.notebook1.innonotebook.l_ef2.value:=form.project.NLBefore
              form.notebook1.innonotebook.l_ef3.value:=form.project.NLAfter
              form.notebook1.innonotebook.Lang_CB.value:="Netherland"
      endcase
      return



















   function I_Liz_LBoxRefresh(nNr)
      if pcount()=0
         return
      endif
      Local i,cSeek,cSeek2,x
      cSeek= left(form.notebook1.innonotebook.LANG_CB.value.toLowercase(),2)
      //J.Kwekkeboom 01/20/2007 - added for Dansk and Polish
      if cSeek = "da" 
         cSeek = "dk"
      elseif cSeek = "po"
         cSeek = "pl"
      endif
      if nNr="1"
         //J.Kwekkeboom 01/20/2007 - Must be Lic not Liz
         //cSeek2="Liz"
         cSeek2="Lic"
      elseif nNr="2"
         cSeek2="Bef"
      else
         cSeek2="Aft"
      endif
      x=0
      for i=1 to form.LizArr.size
          if left(form.LizArr[i],7)=cSeek+"."+cSeek2+"."
             if nNr="1"
                form.LizArr[i]:=cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef1.value
             elseif nNr="2"
                form.LizArr[i]:=cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef2.value
             else
                form.LizArr[i]:=cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef3.value
             endif
             x:=i
             exit
          endif
      next
      if x=0
         if nNr="1"
            form.LizArr.Add(cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef1.value)
         elseif nNr="2"
            form.LizArr.Add(cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef2.value)
         else
            form.LizArr.Add(cSeek+"."+cSeek2+"."+form.notebook1.innonotebook.l_ef3.value)
         endif
         x:=form.LizArr.size
      endif
      //J.Kwekkeboom 03/09/2007 Added for Listbox Repaint error (!!)
      form.notebook1.innonotebook.I_LIZ_LBOX.dataSource := NULL
      form.notebook1.innonotebook.I_LIZ_LBOX.dataSource:="Array form.LizArr"
      form.notebook1.innonotebook.I_LIZ_LBOX.cursel:=x
   return



















   function I_LizEF_onChange
      Local cSeek
      cSeek= left(form.notebook1.innonotebook.LANG_CB.value.toUppercase(),2)
      //J.Kwekkeboom 01/20/2007 - added for Dansk and Polish
      if cSeek = "DA" 
         cSeek = "DK"
      elseif cSeek = "PO"
         cSeek = "PL"
      endif
      if cSeek="EN"
         if right(this.name,1)="1"
            form.project.ENLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.ENBefore:=this.value
         else
            form.project.ENAfter:=this.value
         endif
      elseif cSeek="DE"
         if right(this.name,1)="1"
            form.project.DELicense:=this.value
         elseif right(this.name,1)="2"
            form.project.DEBefore:=this.value
         else
            form.project.DEAfter:=this.value
         endif
      elseif cSeek="ES"
         if right(this.name,1)="1"
            form.project.ESLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.ESBefore:=this.value
         else
            form.project.ESAfter:=this.value
         endif
      elseif cSeek="IT"
         if right(this.name,1)="1"
            form.project.ITLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.ITBefore:=this.value
         else
            form.project.ITAfter:=this.value
         endif
      elseif cSeek="FR"
         if right(this.name,1)="1"
            form.project.FRLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.FRBefore:=this.value
         else
            form.project.FRAfter:=this.value
         endif
      elseif cSeek="JA"
         if right(this.name,1)="1"
            form.project.JALicense:=this.value
         elseif right(this.name,1)="2"
            form.project.JABefore:=this.value
         else
            form.project.JAAfter:=this.value
         endif
      elseif cSeek="DK"
         if right(this.name,1)="1"
            form.project.DKLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.DKBefore:=this.value
         else
            form.project.DKAfter:=this.value
         endif
      elseif cSeek="PL"
         if right(this.name,1)="1"
            form.project.PLLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.PLBefore:=this.value
         else
            form.project.PLAfter:=this.value
         endif
      else
         if right(this.name,1)="1"
            form.project.NLLicense:=this.value
         elseif right(this.name,1)="2"
            form.project.NLBefore:=this.value
         else
            form.project.NLAfter:=this.value
         endif
      endif
      class::I_Liz_LBoxRefresh(right(this.name,1))
      //J.Kwekkeboom 01/21/2007 - added for new Language support
      //if not in result (project::SetupLang) so we add also here this language
      if not Empty(this.value)
         if AT(Lower(cSeek),form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.value)=0
            form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.value += ' '+lower(cSeek)
            form.Project.SetupLang := form.NOTEBOOK1.INNONOTEBOOK.I_SETUPLANGRESULT.value 
         endif
      endif  //end of adding

      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      return



















   function I_LizPB_onClick
   Local cFile,cSkeleton
      cSkeleton = 'txt, rtf, *'
      cFile=""
      do case
         case right(this.name,1)="1"
         cFile:=form.notebook1.innonotebook.L_EF1.value
         case right(this.name,1)="2"
         cFile:=form.notebook1.innonotebook.L_EF2.value
         otherwise
         cFile:=form.notebook1.innonotebook.L_EF3.value
      endcase
      if empty(cFile)
         cFile:=class::DelBackSlash(form.notebook1.innonotebook.I_SourceFolder.value)
         cFile+="\*.txt"
      endif
      cFile:=getfile(cFile,form.qLang.iGetText("Add Files"),true,cSkeleton)
      if empty(cFile)
         return
      endif
      Local cSeek
      cSeek= left(form.notebook1.innonotebook.LANG_CB.value.toUppercase(),2)
      //J.Kwekkeboom 01/20/2007 - added for Dansk and Polish
      if cSeek = "DA" 
         cSeek = "DK"
      elseif cSeek = "PO"
         cSeek = "PL"
      endif
      do case
         case right(this.name,1)="1"
         form.notebook1.innonotebook.L_EF1.value:=cFile
           do case
              case cSeek="EN"
            form.project.ENLicense:=cFile
              case cSeek="DE"
            form.project.DELicense:=cFile
              case cSeek="ES"
            form.project.ESLicense:=cFile
              case cSeek="IT"
            form.project.ITLicense:=cFile
              case cSeek="JA"
            form.project.JALicense:=cFile
              case cSeek="FR"
            form.project.FRLicense:=cFile
              case cSeek="DK"
                 form.project.DKLicense:=cFile
              case cSeek="PL"
                 form.project.PLLicense:=cFile
              otherwise
            form.project.NLLicense:=cFile
           endcase
         case right(this.name,1)="2"
         form.notebook1.innonotebook.L_EF2.value:=cFile
           do case
              case cSeek="EN"
            form.project.ENBefore:=cFile
              case cSeek="DE"
            form.project.DEBefore:=cFile
              case cSeek="ES"
            form.project.ESBefore:=cFile
              case cSeek="IT"
            form.project.ITBefore:=cFile
              case cSeek="JA"
            form.project.JABefore:=cFile
              case cSeek="FR"
            form.project.FRBefore:=cFile
              case cSeek="DK"
                 form.project.DKBefore:=cFile
              case cSeek="PL"
                 form.project.PLBefore:=cFile
              otherwise
            form.project.NLBefore:=cFile
           endcase
         otherwise
         form.notebook1.innonotebook.L_EF3.value:=cFile
           do case 
              case cSeek="EN"
            form.project.ENAfter:=cFile
              case cSeek="DE"
            form.project.DEAfter:=cFile
              case cSeek="ES"
            form.project.ESAfter:=cFile
              case cSeek="IT"
            form.project.ITAfter:=cFile
              case cSeek="JA"
            form.project.JAAfter:=cFile
              case cSeek="FR"
            form.project.FRAfter:=cFile
              case cSeek="DK"
                 form.project.DKAfter:=cFile
              case cSeek="PL"
                 form.project.PLAfter:=cFile
              otherwise
            form.project.NLAfter:=cFile
           endcase
      endcase
      class::I_Liz_LBoxRefresh(right(this.name,1))
      //D.Brooks 11/24/2004 - use method instead
      class::I_UpdateValues()
//      form.ScriptIsGenerate:=false
//      form.project.Modified:=true
      return



















   function EmptyLogButton_onClick
      local oLog
      oLog = new ProjectLog( form.Project )
      oLog.EmptyLog()
      release object oLog
      return true



















   function designProg()
      LOCAL designer, nam
      if form.treeview1.selected.typ <> "H"
         nam = form.Project.getFullPath(form.currentFileObject.FileName)
         if not file(nam)
           form.qLang.iMsgBox('File not found%1%2','Cannot Open in Designer',16,""+chr(13),nam)
           return
         endif
         designer = form.currentFileObject.designer
         do case
         case upper(designer) = "FORM"
           modify form (nam)
         case upper(designer) = "MENU"
           modify menu (nam)
         case upper(designer) = "POPUP"
           modify popup (nam)
         case upper(designer) = "LABEL"
           modify label (nam)
         case upper(designer) = "REPORT"
           modify report (nam)
         case upper(designer) = "QUERY"
           modify query (nam)
         case upper(designer) = "DATAMODULE"
           modify datamodule (nam)
         case upper(designer) = "TABLE"
             // Open table associated with query using DML/Exclusive
             try
                use (nam) excl
                // Note, table will be closed when the Designer object
                // is notified that the Table Designer is done.
             catch(exception e)
                // If fail open (probably not exclusive)
               form.qLang.iMsgBox('Cannot modify %1%2','Cannot Modify',16,nam+chr(13),e.message)
            endTry
            // Invoke the Table Designer in non-modal mode
            modify structure
         otherwise
           if form.isBinaryFile( nam )
              form.runFile()
           else
               modify command (nam)
           endif
         endcase
      endif
      return



















   function isBinaryFile( cFileName )
      local f, nSize, buffer, bIsBinary, i, nBytesRead
      bIsBinary = false
      try
         f = new file()
         nSize = f.size( cFileName )
         nBytesRead = max(nSize,50)
         f.open( cFileName, "R" )
         buffer = f.read( nBytesRead )
         f.close()
         for i = 1 to nBytesRead
            if asc( substr(buffer,i,1) ) < 32
               bIsBinary := true
               exit
            endif
         next
      catch (exception e)
      endtry
      return bIsBinary



















   function checkCompleted
      // check if the basics for compiling or building a project are available
      local bIsComplete, cNotSpecified
      bIsComplete = true
      cNotSpecified = ""
      if empty(form.Notebook1.ProjectName.value)
         bIsComplete = false
         cNotSpecified = "Project Name"
      else
         if empty(form.Notebook1.EXEName.value)
            form.Notebook1.EXEName.value := ltrim(trim(form.Notebook1.ProjectName.value))+".exe"
            form.EXENAME_onChange()
         endif
      endif
      if empty(form.Project.MainFileName)
         bIsComplete = false
         cNotSpecified += iif(empty(cNotSpecified), form.qLang.iGetText("Main Program File"),", "+form.qLang.iGetText("Main Program File"))
      endif
      if not bIsComplete
         form.qLang.iMsgBox("%1 not specified.","Incomplete Specifications",16,cNotSpecified)
      endif
      return bIsComplete



















   function checkSave()
      if type("form.project") = "O" and form.project.Modified = true
        nResult = form.qLang.iMsgbox("Project has been changed. Save Project changes?","Save",35)
        if nResult = 6 // Yes
           //QAID: 5316 - D.Brooks - 03/30/2005
           return form.project.save(false)
           //form.project.save(false)
           //return true
        elseif nResult = 7 // No
           return true
        elseif nResult = 2 // cancel
           return false
        endif
      endif
      return true //cancel



















   function runProg()
      PRIVATE mFn, params
      // run always runs the main program if there is one
      if empty(form.project.MainFileName)
        form.qLang.iMsgBox("Main file not specified.", "Cannot Run", 16)
        return
      endif
      mFn = form.Project.getFullPath(form.project.MainFileName)
      msgBox("'"+mFn+"'")
      if not file(mFn)
        form.qLang.iMsgBox("File not found: %1","Cannot Run", 16,""+chr(13)+mFn)
        return
      endif
      mFn = '"'+mFn+'"'
      if empty(form.project.parameterList)
        do &mFn.
      else
        params = trim(form.project.parameterList)
        do &mFn. with &params.
      endif
      return



















   function execute()
      LOCAL eFn
      eFn = form.Project.getFullPath(form.notebook1.exename.value)
      if not file(eFn)
         form.qLang.iMsgBox("You must Build an executable first","No Exe",16)
         return
      endif
      run(true,eFn)
      return



















   function debug()
      // debug always debugs the main program if there is one
      if empty(form.project.MainFileName)
        form.qLang.iMsgBox("Main file not specified.", "Cannot Debug", 16)
        return
      endif
      local mFn
      mFn = form.Project.getFullPath(form.project.MainFileName)
      if not file(mFn)
        form.qLang.iMsgBox("File not found: %1","Cannot Debug", 16,""+chr(13)+mFn)
        return
      endif
      if not empty(form.project.parameterList)
        params = trim(form.project.parameterList)
        debug (mFn) with &params.
      else
        debug (mFn)
      endif
      return



















   function SetUACProperties()
     //KK 09/27/2012 - Using new tab in INNO rather than another form
     /*
     local UACpropDialog         
     
     UACpropDialog = new ProjUACForm()
    // UACpropDialog.init(form.project) (KK-took out)
     UACpropDialog.mdi := false
     //UACPropDialog.EnableUAC.Text := form.qLang.iGetText("UAC Appliaction?")      (KK-took out)
     UACpropDialog.Text1.text := form.qLang.iGetText("Do you want to have your application use the default Runtime useUACPaths setting?") 
     UACpropDialog.Text2.text := ;
       form.qLang.iGetText("Do you want your application to always set the registry useUACPaths");
       +' = "Y" ';
       +form.qLang.iGetText("for Vista or Higher? (this can override the Runtime setting)") 
     UACpropDialog.Text3.text := ;
       form.qLang.iGetText("Do you want your application to always set the registry useUACPaths");
       +' = "N" ';
       +form.qLang.iGetText("for Vista or Higher? (this can override the Runtime setting)")

     UACpropDialog.UACRB = form.project.UACRB //KK make sure new propDialog shows the current UACRB setting when it opens    
     UACpropDialog.readModal()
     
     if (UACpropDialog.saveSettings) 
       if UACpropDialog.UACRB2.Value 
        form.project.UACRB = 2
       //endif
       elseif UACpropDialog.UACRB3.Value   //KK changed from endif; if ... to elseif --- otherwise UACRB get's over written if UACRB=2
         form.project.UACRB = 3          
       else form.project.UACRB = 1
       endif

       // KK-took out
       //if UACpropDialog.ENABLEUAC.Value
       //  form.project.enableuac = 1 //add UAC to build command
       //else
       //  form.project.enableuac = 0 //no UAC 
       //endif
       

       form.project.Modified := true  
     endif  
     */

     //KK 09/27/2012 - replaces code above 

     if form.notebook1.innonotebook.uacrb2.Value 
        form.project.UACRB = 2
     elseif form.notebook1.innonotebook.UACRB3.Value   //KK changed from endif; if ... to elseif --- otherwise UACRB get's over written if UACRB=2
        form.project.UACRB = 3          
     else 
        form.project.UACRB = 1
     endif
     
     form.project.Modified := true

     class::I_UpdateValues()
    
     return

   function setProperties()
      local propertiesDialog
      //SET PROCEDURE TO PBuilderProp.wfo    //KK added 10/17/2012
      propertiesDialog = new ProjectExplorerPropertiesForm()

      // Pass project object ref to properties dialog
      propertiesDialog.init( form.project )

      propertiesDialog.setShowLogo(this.showProjectsLogo)
      propertiesDialog.mdi := false
      propertiesDialog.readModal()
      if (propertiesDialog.saveSettings)
         form.showProjectsLogo := propertiesDialog.getShowLogo()
         form.ProjectsLogoContainer.visible := form.showProjectsLogo
         form.treeview1.left := iif(form.showProjectsLogo, 109.0, 10.0)
         form.splitterDropped()
      endif
      return

   function DEOFOLDERS_onSelChange
      form.notebook1.deoTarget.value = substr(this.selected(),3)
      return

   function deoObject_onChange
      // add the changed information to the tree item and the contents array
      form.treeview1.selected.included = this.value

      form.currentFileObject.deoObject := this.value
      if this.value
        form.notebook1.fileNotebook.fileIncluded.enabled = false
        form.notebook1.fileNotebook.fileIncluded.value = false
        form.notebook1.fileNotebook.DEOTarget.enabled = true
      else
        form.notebook1.fileNotebook.fileIncluded.enabled = true
        form.notebook1.fileNotebook.DEOTarget.value = ""
        form.notebook1.fileNotebook.DEOTarget.enabled = false
      endif
      form.project.Modified := true
      return

   function DEOTARGET_onChange

      if not isDir( this.value )
         if form.qLang.iMsgBox('The specified folder does not exist.  Create it?',;
                   "Create Folder", 36) # 6
            return false
         endif

         cCmd = 'md "'+trim(this.value)+'"'
         try
            &cCmd
         catch (exception e)
            form.qLang.iMsgBox('Could not create folder.','Invalid Path',16)
            return false

         endtry

      endif

      LOCAL n
      n = form.notebook1.deoFolders.cursel
      // Note the deo Target numbers begin with zero
      form.project.deoList[n] = ltrim(str(n-1)) + "=" + this.value
      form.notebook1.deoFolders.datasource = "array form.project.deoList"
      form.project.Modified := true
      return

   function DEOTARGET_onChange1
      // just looking at the list causes onChange to fire so check if really changed
      local cN
      cN = left(this.value,1)
      if cN <> form.currentFileObject.deoLibNo
        form.currentFileObject.deoLibNo := cN
        form.project.modified = true
        if empty(this.value)
          form.notebook1.fileNotebook.deoObject.value = false
          form.notebook1.fileNotebook.deoObject.enabled = false
          form.currentFileObject.deoObject := false
        else
          form.notebook1.fileNotebook.deoObject.enabled = true
        endif
      endif
      return

   function DEOTARGETNO_onChange
      form.project.modified := true
      return

   function deploy
      //D.Brooks 12/08/2004 - go to inno tab.
      form.notebook1.cursel:=5
      //form.notebook1.innonotebook.cursel:=7
      //J.Kwekkeboom 11/14/2005 - go to inno tab.+1 by new included INI
      form.notebook1.innonotebook.cursel:=8
      class::I_SCRIPTGENERATE_onClick()
      return

   //D.Brooks 11/17/2004 - for Build|Generate Install Program menu item.

   function install(cComp)
      if cComp = 'CompAndRun'
         class::I_SCRIPTCALLSM_onClick(cComp)
      else
         class::I_SCRIPTCALLSM_onClick('')
      endif
      
      return

   function runFile()
      // called from popup to run an individual file
      LOCAL n, ext
      PRIVATE fn, params, cCmd
      n = form.treeview1.selected.ContentsNo
      fN  = form.Project.getFullPath(form.currentFileObject.FileName)

      if not file(fN)
         msgbox(form.qLang.iGetText('File not found: ')+fN,form.qLang.iGetText('Cannot Run'),16)
         return
      endif

      if not upper( form.currentFileObject.FileType ) = ".SQL"
         fN = '"'+fN+'"'
      endif

      do case
      case upper( form.currentFileObject.FileType ) = ".SQL"
         if not form.runSQL( fN )
            msgbox(form.qLang.iGetText("An error occured when attempting to run")+chr(13)+fN,form.qLang.iGetText("Cannot Run SQL File"),16)
         endif
      case form.currentFileObject.runWith = "do"
         if not empty(form.project.parameterList) and ;
            form.currentFileObject.ismain = true
            params = trim(form.project.parameterList)
            do &fn. with &params.
         else
            do &fn.
         endif
      case form.currentFileObject.runWith = "-"
         // do nothing with these
      case form.currentFileObject.runWith = "br"
         select 200
         cCmd = "use " + fN
         &cCmd.
         browse
      otherwise   // all other types will be attemmpted with shellExecute
         win_call(fN)
      endcase
      return

   function runSQL( cSQLFile )
      form.FNSplit.FullPath := cSQLFile
      form.FNSplit.SplitFileName()
      try
         local f,g
         f = new form()
         f.metric := 6
         f.text := form.FNSplit.Name + form.FNSplit.Ext + form.qLang.iGetText(" - SQL Results")
         f.icon := "RESOURCE SQL "+form.ExplorerDllFile
         //f.top := form.top + 20
         //f.left := form.left + 20
         f.width := 400
         f.SQLQuery = new query()
         f.SQLQuery.sql = "@"+cSQLFile
         f.SQLQuery.active := true
         g = new grid(f)
         g.anchor := 6
         g.datalink := f.SQLQuery.rowset
         f.open()
      catch (exception e)
         return false
      endtry
      return true

   //-------------------- Method: doMenuOption --------------------------//
   // Purpose:    Sends message to internal dBASE components, such
   //             as activating the Navigator and Command Window
   // copied from dQuery/Web

   function doMenuOption(nCmd)

      if type("dB_SendMessage") # "FP"
         extern CLONG dB_SendMessage(CHANDLE, CUINT, CLONG, CLONG) User32;
                   From "SendMessageA"
      endIf
      dB_SendMessage(_app.FrameWin.hWND, WM_COMMAND, nCmd, 0)
      return

  //---------------------------Method: GetNextName -------------------//
   // Purpose:     Find the next unique name for component and object
   // Params:      aLookup - array to look in.
   //              From among: form.aQueries, form.aDatabases,
   //                          form.aSessions, form.aStoredProcs
   //              cName - Default name: Customer, MyData, etc.

   function getNextName(cName)
      private n,x, cStr

      // Remove quotes and spaces before getting
      // next available name
      n = 1
      do while true

         // Build test name: CUSTOMER1
         cStr = upper(cName)+n
         // if it doesn't exist, get off
         if not file(cName)
             cStr= cName+n
             exit
         endif

         n++

      enddo

     // return iteration of this name
     return upper(cStr)

     //Dummy function for something not yet implemented

     function translator(cStr)
     return cStr

     //------------------------ Method: redraw -------------------------//
     // Redraws form when splitterbar is moved.

     function redraw
        form.notebook1.left = form.qvsplitter1.left+10
        return true

     function titlebarUpdate
        form.text = 'Project Explorer: '+form.startProject
        return true

    //------------------- Method: Restore Size --------------------------//

    function restoreSize

      with (form)
         height = 563
         width = 779
         notebook1.left = 296
         notebook1.height = 465
         notebook1.width = 473
         treeview1.width = 167
         treeview1.height = 465
         ProjectsLogo.height = 465
      endWith
      return true

    //------------------ Method: Update DEOFiles ------------------------//
    // Purpose: marks or unmarks objects for inclusion in executable

    function updateDEOFiles(bIsDeo)

       local i

       // go through all contents
       for i = 1 to alen(form.project.contents)

          // If you're turning DEO on
          if bIsDeo

             // if isMain
             // include in exe
             if form.project.contents[i].isMain
                form.project.contents[i].included = true
             else
                // if canbecompiled
                if form.project.contents[i].canBeCompiled
                   // exclude from exe
                   form.project.contents[i].included = false
                endif
             endif

          // If you're turning DEO off
          else

            // Include all compilable files in EXE
            if form.project.contents[i].canBeCompiled
               form.project.contents[i].included = true
            endif

          endif

       next
       //check also Innofiles....
       class::SetAllFilesToInno()
    return

   //-------------------- Method getIniSettings() ----------------------------//
   // Purpose: To get initial settings stored in the ini file

   function getIniSettings

      local cInipath, cIniFile

      // M.Kay, dBI Inc. - 08/11/2010
      // Make path for ini file UAC compliant

      // Make sure you have the ProjExp.ini file
      //cIniPath = _app.sourceAliases["ProjExp"]+'\projexp.ini'
		cIniFile = "projexp.ini"
		cIniPath = _app.currentUserPath + '\dBLCore\ProjExp'
		//msgBox(cIniPath) //KK msgbox
      if not file( cIniPath + '\' + cIniFile )
         set procedure to :CoreShared:dirpath.cc additive
         odirpath = new dirpath()
         odirpath.makedirtree( cIniPath )
      endif

      cIniPath = cIniPath + '\' + cIniFile
		//msgBox("cIniPath = "+cIniPath) //KK msgbox
		/*
      if type("_app.useUACPaths") = "L"
         if _app.useUACPaths
            cIniPath = _app.currentUserPath + '\dBLCore\ProjExp'

            if not file( cIniPath + '\' + cIniFile )
               set procedure to :CoreShared:dirpath.cc additive
               odirpath = new dirpath()
               odirpath.makedirtree( cIniPath )
            endif

            cIniPath = cIniPath + '\' + cIniFile
         endif
      endif
		*/

      // End M,Kay


      //J. Kwekkeboom 12/14/2004
      //added for rechange to Project.dll icons

      /* enabled for if else see bottom of this ...
      /J. Kwekkeboom 08/17/2005
      if not file( cIniPath )
         // re-create default INI
         form.RecreateIni(cInipath)
         form.RefreshINI(cInipath)
      else
         form.RefreshINI(cInipath)
      endif*/

      //Changed above if else to always call RefreshINI ;)
      if not file( cIniPath )
         // re-create default INI
         form.RecreateIni(cInipath)
      endif
      form.RefreshINI(cInipath)
      ****

      form.Ini = new CoreIni( cIniPath )

      form.Ini.default = '0'
      form.top    := max(val(form.Ini.getValue("Position","Top")),0)
      form.left   := max(val(form.Ini.getValue("Position","Left")),0)
      form.Ini.default = ''+MIN_HEIGHT
      form.height := max(val(form.Ini.getValue("Position","Height")),MIN_HEIGHT)
      form.Ini.default = ''+MIN_WIDTH
      form.width  := max(val(form.Ini.getValue("Position","Width")),MIN_WIDTH)
      form.SplitterLeft = max(val(form.Ini.getValue("Position","Splitter")),MIN_SPLITLEFT)

      form.SaveRspFile = (upper(form.Ini.getValue("Preferences","SaveRspFile"))="TRUE")
      form.Verbose = (upper(form.Ini.getValue("Preferences","Verbose"))="TRUE")
      form.VerboseLog = (upper(form.Ini.getValue("Preferences","VerboseLog"))="TRUE")
      form.showProjectsLogo = (upper(form.Ini.getValue("Preferences","ShowProjectsLogo"))="TRUE")

      form.aMRU = new array()
      form.Ini.default = ''
      form.aMRU.add(form.Ini.getValue('MRU',"MRU1"))
      form.aMRU.add(form.Ini.getValue('MRU',"MRU2"))
      form.aMRU.add(form.Ini.getValue('MRU',"MRU3"))
      form.aMRU.add(form.Ini.getValue('MRU',"MRU4"))
      form.aMRU.add(form.Ini.getValue('MRU',"MRU5"))

      ******
      //new added: check of all files will be there for
      //refresh the MRU list if required (Jonny)
      Local x,aArr
      x=1
      aArr = new Array(form.aMRU.size)
      aArr.fill("")
      for i=1 to form.aMRU.size
          if file(form.aMRU[i])
             aArr[x]:=form.aMRU[i]
             x++
          endif
      next
      //now we set all in order to correct display
      form.aMRU.fill("")
      for i=1 to aArr.size
         form.aMRU[i]:=aArr[i]
      next
      *******

      this.root.updateMRUMenus()
      form.onSize(0,(form.width),(form.height))

     return true

   function RefreshINI(cInipath)
   local I,fOut,cText,cRest,aArr,bBool
      bBool=false
      aArr=new Array()
      fOut = new file()
      fOut.open(cInipath,"R")
      do while not fOut.EOF()
         aArr.add(fOut.Readln())
      enddo
      fOut.close()
      for i=1 to aArr.size
          if at('icon=file',aArr[i].toLowercase())>0
             cText=Substr(aArr[i],1,At('=',aArr[i]))
             cText+='resource '
             cRest=Substr(aArr[i],At(':',aArr[i],2)+1)
             cRest=Substr(cRest,1,AT('.',cRest)-1)
             cText+=cRest+' '+form.ExplorerDllFile
             aArr[i]:=cText
             bBool:=true
          endif
      next
      if bBool
         fOut = new file()
         fOut.create(cInipath)
         for i=1 to aArr.size
           fOut.puts(aArr[i])
         next
         fOut.close()
      endif
   return
   

   function RUNTIMEINBUILDCHECK_onChange()
      if this.value
         form.project.runtimeinbuild = 1
			form.notebook1.innonotebook.rb1.enabled = false //(Include Runtime Engine?)
			form.notebook1.innonotebook.rb2.enabled = false //(Include Runtime Files?)
			form.notebook1.innonotebook.rb1.value = false //
			form.notebook1.innonotebook.rb2.value = false //
			form.notebook1.innonotebook.rb3.value = true //(Do not include Runtime?)
			form.notebook1.innonotebook.ckbdeonlyinstall.enabled = true
			form.project.SM_dBASERuntime = false
			cRuntimeFolder = LEFT(_app.exename,RAT("\",_app.exename,2))+"Runtime"
			cMessage =  "In order to support having the Runtime built into the executable, you must add the language .dlls to your installer."+chr(13)+chr(13)
			//cMessage += "The file you will need you can find in the runtime folder"+cRuntimeFolder+chr(13)
			cMessage += "Depending on what language(s) you are using you will need to include the Plusr_??.dll file in this project."+chr(13)+chr(13)
			cMessage += ""+chr(13)
			cMessage += "For English... Plusr_en.dll"+chr(13)
			cMessage += "For French... Plusr_fr.dll"+chr(13)			
			cMessage += "For German... Plusr_de.dll"+chr(13)		
			cMessage += "For Italian... Plusr_it.dll"+chr(13)			
			cMessage += "For Spanish... Plusr_es.dll"+chr(13)
			cMessage += chr(13)+"You can choose the files you want to add in the next dialog!"+chr(13)
         cMessage +=	chr(13)+"They will be copied to your current folder and added to the project."
			MsgBox(cMessage,"ALERT!")
		
			a = new array()
			a.getFile(cRuntimeFolder+"\Plusr_*.*",form.qLang.iGetText("Add Files"),true,"dll, *.dll")
			if alen(a,1) = 0
			  return false
			else
			  a2 = new array()
			  for x = 1 to alen(a,1)
			   //KK copy runtime  files to current directory
				//otherwise the INNO script will not be able to compress the runtime .dlls
				//because they are in a 'restricted' directory
			   cOldFile = a[x]
				cNewFile = SET("Directory")+"\"+RIGHT(cOldFile,LEN(cOldFile)-RAT("\",cOldFile))
				new File( ).copy( cOldFile, cNewFile )
				a2.add(cNewFile)
			  endfor
			endif
		
			form.notebook1.innonotebook.rectangle4.visible := not form.notebook1.innonotebook.rb3.value
			form.notebook1.innonotebook.c1.visible:= form.notebook1.innonotebook.rb1.value
			form.notebook1.innonotebook.c2.visible:= form.notebook1.innonotebook.rb2.value
			form.project.SM_dBASERuntime = not form.notebook1.innonotebook.rb3.value

			//KK - added for support of the runtine.exe.manifest files
			form.notebook1.innonotebook.cb_xp.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.cb_xp.value := false
			form.notebook1.innonotebook.rbadmin.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.rbhighest.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.rbinvoker.enabled := form.notebook1.innonotebook.rb2.value
				  
			
			// use the checkDropped method to add the file
			cAdded = class::checkDropped("F",a2)
			
      else
         form.project.runtimeinbuild = 0
			form.notebook1.innonotebook.rb1.enabled = true //(Include Runtime Engine?)
			form.notebook1.innonotebook.rb2.enabled = true //(Include Runtime Files?)
			//KK note: NOT including the runtime in the .exe does NOT automatically
			//      mean that you want the runtime included in the install
			
			
			form.notebook1.innonotebook.rectangle4.visible := not form.notebook1.innonotebook.rb3.value
			form.notebook1.innonotebook.c1.visible:= form.notebook1.innonotebook.rb1.value
			form.notebook1.innonotebook.c2.visible:= form.notebook1.innonotebook.rb2.value
			form.project.SM_dBASERuntime = not form.notebook1.innonotebook.rb3.value

			//KK - added for support of the runtine.exe.manifest files
			form.notebook1.innonotebook.cb_xp.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.cb_xp.value := false
			form.notebook1.innonotebook.rbadmin.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.rbhighest.enabled := form.notebook1.innonotebook.rb2.value
			form.notebook1.innonotebook.rbinvoker.enabled := form.notebook1.innonotebook.rb2.value
				  
      endif
		
		class::I_UpdateValues()
   return
		

   function RecreateIni(cInipath)
      local fOut
      fOut = new file()
      fOut.create(cInipath)
      fOut.puts('[Preferences]')
      fOut.puts('SaveRspFile=False')
      fOut.puts('Verbose=True')
      fOut.puts('VerboseLog=True')
      fOut.puts('ShowProjectsLogo=True')
      fOut.puts('')
      fOut.puts('[Position]')
      fOut.puts('Top=30.00')
      fOut.puts('Left=16.00')
      //fOut.puts('Width=779.00')
      fOut.puts('Width=1023.00') 
      fOut.puts('Height=536.00')
      fOut.puts('Splitter=282')
      fOut.puts('')
      fOut.puts('[MRU]')
      fOut.puts('MRU1=')
      fOut.puts('MRU2=')
      fOut.puts('MRU3=')
      fOut.puts('MRU4=')
      fOut.puts('MRU5=')
      fOut.puts('')
      fOut.puts('[FileTypes]')
      fOut.puts(';-----------------------------------------------------------------------------------')
      fOut.puts(';initialization file for Project Builder')
      fOut.puts(';FileType      - the file extension preceded with a dot')
      fOut.puts(';FileGroup     - the group in which files of this type will be displayed')
      fOut.puts(';                1 = form, 2 = report, 3 = Program 4 = Tables')
      fOut.puts(';                5 = SQL,  6 = Datamodule, 7 = Graphics, 8 = DLL/OCX, 9=Other')
      fOut.puts(';canBeEdited   - True or False')
      fOut.puts(';canBeMain     - True or False')
      fOut.puts(';canBeExcluded - True or False')
      fOut.puts(';canBeIncluded - True or False')
      fOut.puts(';canBeCompiled - True or False')
      fOut.puts(';useDesigner   - Forms, Menu, popup, label, report, query, datamodule, table, image')
      fOut.puts(';icon          - resource or filename syntax')
      fOut.puts(';runWith       - do for dBASE objects,')
      fOut.puts(';                ex use shellexecute, (this is default for unknown fileTypes),')
      fOut.puts(';                -  no run possible,')
      fOut.puts(';                br browse')
      fOut.puts(';-------------------------------------------------------------------------------------')
      fOut.puts('FileType=.wfm')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=True')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=form')
      fOut.puts('icon=resource #40')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.wfo')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #40')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.cfm')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=form')
      fOut.puts('icon=file :ProjExp:cfm.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.cfo')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=file :ProjExp:cfm.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.mnu')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=menu')
      fOut.puts('icon=resource #23')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.mno')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #23')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.pop')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=popup')
      fOut.puts('icon=resource #24')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.poo')
      fOut.puts('FileGroup= 1')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #24')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.rep')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=True')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=report')
      fOut.puts('icon=file :ProjExp:rep.ico')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.reo')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=file :ProjExp:rep.ico')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.crp')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=report')
      fOut.puts('icon=file :ProjExp:crp.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.cro')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=file :ProjExp:crp.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.lab')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=True')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=label')
      fOut.puts('icon=resource #112')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.lao')
      fOut.puts('FileGroup= 2')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #112')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.prg')
      fOut.puts('FileGroup= 3')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=True')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #18')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.pro')
      fOut.puts('FileGroup= 3')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #18')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.cc')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #8240')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.co')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #8240')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.dbf')
      fOut.puts('FileGroup= 4')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=table')
      fOut.puts('icon=resource #8210')
      fOut.puts('runWith=br')
      fOut.puts('FileType=.db')
      fOut.puts('FileGroup= 4')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=table')
      fOut.puts('icon=resource #8210')
      fOut.puts('runWith=br')
      fOut.puts('FileType=.sql')
      fOut.puts('FileGroup= 5')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=query')
      fOut.puts('icon=file :ProjExp:sql.ico')
      fOut.puts('runWith=do')
      fOut.puts('FileType=.dmd')
      fOut.puts('FileGroup= 6')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=datamodule')
      fOut.puts('icon=file :ProjExp:dmd.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.dmo')
      fOut.puts('FileGroup= 6')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=file :ProjExp:dmd.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.cdm')
      fOut.puts('FileGroup= 6')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=datamodule')
      fOut.puts('icon=file :ProjExp:cdm.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.cdo')
      fOut.puts('FileGroup= 6')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=file :ProjExp:cdm.ico')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.gif')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.jpg')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.bmp')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.png')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.tif')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.wmf')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.jpeg')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.ico')
      fOut.puts('FileGroup= 7')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=image')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.ocx')
      fOut.puts('FileGroup= 8')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=False')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.dll')
      fOut.puts('FileGroup= 8')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=False')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #50')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.txt')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.ini')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.dtf')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.h')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=command')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=-')
      fOut.puts('FileType=.htm')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.html')
      fOut.puts('filegroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=False')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #240')
      fOut.puts('runWith=ex')
      fOut.puts('FileType=.qbe')
      fOut.puts('FileGroup= 9')
      fOut.puts('canBeEdited=True')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=True')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #18')
      fOut.puts('runWith=')
      fOut.puts('FileType=.qbo')
      fOut.puts('FileGroup= 9')
      fOut.puts('canBeEdited=False')
      fOut.puts('canBeMain=False')
      fOut.puts('canBeExcluded=True')
      fOut.puts('canBeIncluded=True')
      fOut.puts('canBeCompiled=False')
      fOut.puts('useDesigner=')
      fOut.puts('icon=resource #18')
      fOut.puts('runWith=do')
      fOut.puts('')
      fOut.close()
      return

   //--------------------- Method: saveProject() ---------------------------//
   // Purpose: save project
   // Param: lSaveAs (save as instead of save) type: boolean

   function saveProject(lSaveAs)
      Local cProject

      if form.project.save(lSaveAs)
         cProject = form.project.fileName
         if at('\',cProject) > 0
            cProject = substr(cProject,rat('\',cProject)+1)
         endif
         form.text:= form.qLang.iGetText('Project')+' Explorer: '+cProject
         form.root.saveMRUItem(form.project.filename)
         // Save to dBASE MRU list
         //QAID: 5436 - D.Brooks - 07/18/2005
         //_app.addToMRU(form.project.fileName,0)
         _app.addToMRU(form.project.fileName,4)
         //End QAID: 5436
      endif
      return true

   FUNCTION Freeze
      if type( "LockWindowUpdate" ) # "FP"
         extern CLOGICAL LockWindowUpdate( CHANDLE ) User32
      endif
      if this.hWnd > 0
         LockWindowUpdate( this.hWnd )
      endif
      return

   FUNCTION UnFreeze
      if type( "LockWindowUpdate" ) # "FP"
         extern CLOGICAL LockWindowUpdate( CHANDLE ) User32
      endif
      LockWindowUpdate( 0 )
      return

   function Repaint
      // A minor variation on Jim Sare's method to repaint
      // the screen/form ...
      // --------------
      if type( "updatewindow" ) # "FP"
         extern CLOGICAL UpdateWindow( cHandle ) USER32
      endif

      if type("invalidateRect") # "FP"
         extern CLOGICAL InvalidateRect( CHANDLE, CPTR, CLOGICAL ) USER32
      endif

      // This allows us to pass the name of the window
      // to repaint, for example, _app.frameWin, or to
      // just update/repaint this window ...
      if argCount() = 0
         InvalidateRect( form.hWnd, 0, FALSE )
         UpdateWindow( form.hWnd )
      else
         InvalidateRect( argVector(1), 0, FALSE )
         UpdateWindow( argVector(1) )
      endif
      return  // added 06/05/2006 - Dave Casler

   function About
      msgBox('dBASE PLUS '+form.qLang.iGetText('Project')+' Explorer b'+PE_BUILD, form.qLang.iGetText('About Project Explorer'), 64)
      return  // added 06/05/2006 - Dave Casler

   // QAID:5771 - 06/05/2006 - Dave Casler for Jonny Kwekkeboom
   // Add test to check if the specified script output folder exists
   // Add a new function developed by Jonny Kwekkeboom that checks
   // the Inno script output file folder actually exists as specified.
   // If not, then disable the Generate Script button on the Project Explorer
   // Inno tab, display the entry for the missing file in red and display
   // an error message box.

   function CheckRightFolder
      Local x, cColor, cPath
      // added for qLanguage.cc error (rename file on Generate script)
      // J.Kwekkeboom 02/10/2006
      cColor="windowtext/window"
      x=rat("\",form.project.InnoScriptName)

      if x>0
         cPath = left(form.project.InnoScriptName,x)
         if not IsDir(cPath)
            cColor:="red/window"
            form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=false
            msgbox("Error: Directory does not exist: "+cPath)
         else
            form.notebook1.innonotebook.I_SCRIPTGENERATE.enabled:=not form.ScriptIsGenerate
         endif
      endif
      form.Notebook1.InnoNotebook.I_ScriptName.colorNormal:=cColor
      return

endclass

